Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    BREAK
    CATCH
    COMPANION
    CONSTRUCTOR
    CONTAINS
    CONTINUE
    CROSSINLINE
    DATA
    DOT
    ELVIS
    ENUM
    EXTENDS
    FILTER
    FINAL
    FINALLY
    IMPLEMENTS
    INDICES
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    LATEINIT
    LBRACKET
    MODULO
    NOINLINE
    OBJECT
    OPEN
    OUT
    OVERRIDE
    PRIVATE
    PROTECTED
    PUBLIC
    QUESTION
    RANGE
    RBRACKET
    REIFIED
    SEALED
    SEMICOLON
    SUM
    SUPER
    THIS
    TRY
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement_list -> <empty>
Rule 5     statement -> declaration
Rule 6     statement -> function_def
Rule 7     statement -> function_def_params_no_return
Rule 8     statement -> function_def_no_params_no_return
Rule 9     statement -> class_def
Rule 10    statement -> for_loop
Rule 11    statement -> when_stmt
Rule 12    statement -> print_stmt
Rule 13    statement -> return_stmt
Rule 14    statement -> expression_stmt
Rule 15    declaration -> VAR ID ASSIGN expression
Rule 16    declaration -> VAL ID ASSIGN expression
Rule 17    function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block
Rule 18    param_list_opt -> param_list
Rule 19    param_list_opt -> <empty>
Rule 20    param_list -> param_list COMMA param
Rule 21    param_list -> param
Rule 22    param -> ID COLON type
Rule 23    type -> TYPE_INT
Rule 24    type -> TYPE_DOUBLE
Rule 25    type -> TYPE_BOOLEAN
Rule 26    type -> TYPE_STRING
Rule 27    type -> ID
Rule 28    return_stmt -> RETURN expression
Rule 29    for_loop -> FOR LPAREN ID IN expression RPAREN loop_body
Rule 30    loop_body -> block
Rule 31    loop_body -> statement
Rule 32    expression -> MAPOF LPAREN map_entries RPAREN
Rule 33    map_entries -> map_entries COMMA map_entry
Rule 34    map_entries -> map_entry
Rule 35    map_entry -> expression TO expression
Rule 36    expression -> expression PLUS expression
Rule 37    expression -> expression MINUS expression
Rule 38    expression -> expression MULTIPLY expression
Rule 39    expression -> expression DIVIDE expression
Rule 40    expression -> expression LESS expression
Rule 41    expression -> expression GREATER expression
Rule 42    expression -> expression LESS_EQUAL expression
Rule 43    expression -> expression GREATER_EQUAL expression
Rule 44    expression -> expression EQUALS expression
Rule 45    expression -> expression NOT_EQUALS expression
Rule 46    expression -> expression AND expression
Rule 47    expression -> expression OR expression
Rule 48    expression -> MINUS expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    expression -> NUMBER_INT
Rule 51    expression -> NUMBER_DOUBLE
Rule 52    expression -> STRING
Rule 53    expression -> BOOLEAN_TRUE
Rule 54    expression -> BOOLEAN_FALSE
Rule 55    expression -> ID
Rule 56    print_stmt -> PRINTLN LPAREN expression RPAREN
Rule 57    print_stmt -> PRINT LPAREN expression RPAREN
Rule 58    block -> LBRACE statement_list RBRACE
Rule 59    expression_stmt -> expression
Rule 60    expression -> LISTOF LPAREN expression_list RPAREN
Rule 61    expression_list -> expression_list COMMA expression
Rule 62    expression_list -> expression
Rule 63    expression_list -> <empty>
Rule 64    when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
Rule 65    when_branches -> when_branches when_branch
Rule 66    when_branches -> when_branch
Rule 67    when_branch -> expression ARROW statement_list
Rule 68    when_branch -> ELSE ARROW statement_list
Rule 69    when_stmt -> WHEN LBRACE when_branches RBRACE
Rule 70    function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block
Rule 71    class_def -> CLASS ID LBRACE class_body RBRACE
Rule 72    class_body -> class_body class_member
Rule 73    class_body -> class_member
Rule 74    class_body -> <empty>
Rule 75    class_member -> property_def
Rule 76    class_member -> method_def
Rule 77    property_def -> VAR ID COLON type
Rule 78    property_def -> VAL ID COLON type
Rule 79    property_def -> VAR ID COLON type ASSIGN expression
Rule 80    property_def -> VAL ID COLON type ASSIGN expression
Rule 81    method_def -> FUN ID LPAREN param_list_opt RPAREN block
Rule 82    expression -> ARRAYOF LPAREN expression_list RPAREN
Rule 83    statement -> IF LPAREN expression RPAREN block ELSE block
Rule 84    function_def_no_params_no_return -> FUN ID LPAREN RPAREN block
Rule 85    expression -> READLINE LPAREN RPAREN

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 46
ARRAYOF              : 82
ARROW                : 67 68
ASSIGN               : 15 16 79 80
BOOLEAN_FALSE        : 54
BOOLEAN_TRUE         : 53
BREAK                : 
CATCH                : 
CLASS                : 71
COLON                : 17 22 77 78 79 80
COMMA                : 20 33 61
COMPANION            : 
CONSTRUCTOR          : 
CONTAINS             : 
CONTINUE             : 
CROSSINLINE          : 
DATA                 : 
DIVIDE               : 39
DOT                  : 
ELSE                 : 68 83
ELVIS                : 
ENUM                 : 
EQUALS               : 44
EXTENDS              : 
FILTER               : 
FINAL                : 
FINALLY              : 
FOR                  : 29
FUN                  : 17 70 81 84
GREATER              : 41
GREATER_EQUAL        : 43
ID                   : 15 16 17 22 27 29 55 70 71 77 78 79 80 81 84
IF                   : 83
IMPLEMENTS           : 
IN                   : 29
INDICES              : 
INIT                 : 
INLINE               : 
INNER                : 
INTERFACE            : 
INTERNAL             : 
LATEINIT             : 
LBRACE               : 58 64 69 71
LBRACKET             : 
LESS                 : 40
LESS_EQUAL           : 42
LISTOF               : 60
LPAREN               : 17 29 32 49 56 57 60 64 70 81 82 83 84 85
MAPOF                : 32
MINUS                : 37 48
MODULO               : 
MULTIPLY             : 38
NOINLINE             : 
NOT_EQUALS           : 45
NUMBER_DOUBLE        : 51
NUMBER_INT           : 50
OBJECT               : 
OPEN                 : 
OR                   : 47
OUT                  : 
OVERRIDE             : 
PLUS                 : 36
PRINT                : 57
PRINTLN              : 56
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
QUESTION             : 
RANGE                : 
RBRACE               : 58 64 69 71
RBRACKET             : 
READLINE             : 85
REIFIED              : 
RETURN               : 28
RPAREN               : 17 29 32 49 56 57 60 64 70 81 82 83 84 85
SEALED               : 
SEMICOLON            : 
STRING               : 52
SUM                  : 
SUPER                : 
THIS                 : 
TO                   : 35
TRY                  : 
TYPE_BOOLEAN         : 25
TYPE_DOUBLE          : 24
TYPE_INT             : 23
TYPE_STRING          : 26
VAL                  : 16 78 80
VAR                  : 15 77 79
WHEN                 : 64 69
WHILE                : 
error                : 

Nonterminals, with rules where they appear

block                : 17 30 70 81 83 83 84
class_body           : 71 72
class_def            : 9
class_member         : 72 73
declaration          : 5
expression           : 15 16 28 29 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 49 56 57 59 61 62 64 67 79 80 83
expression_list      : 60 61 82
expression_stmt      : 14
for_loop             : 10
function_def         : 6
function_def_no_params_no_return : 8
function_def_params_no_return : 7
loop_body            : 29
map_entries          : 32 33
map_entry            : 33 34
method_def           : 76
param                : 20 21
param_list           : 18 20 70
param_list_opt       : 17 81
print_stmt           : 12
program              : 0
property_def         : 75
return_stmt          : 13
statement            : 2 3 31
statement_list       : 1 2 58 67 68
type                 : 17 22 77 78 79 80
when_branch          : 65 66
when_branches        : 64 65 69
when_stmt            : 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . function_def_params_no_return
    (8) statement -> . function_def_no_params_no_return
    (9) statement -> . class_def
    (10) statement -> . for_loop
    (11) statement -> . when_stmt
    (12) statement -> . print_stmt
    (13) statement -> . return_stmt
    (14) statement -> . expression_stmt
    (83) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) declaration -> . VAR ID ASSIGN expression
    (16) declaration -> . VAL ID ASSIGN expression
    (17) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> . FUN ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> . FUN ID LPAREN RPAREN block
    (71) class_def -> . CLASS ID LBRACE class_body RBRACE
    (29) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (64) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (56) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (57) print_stmt -> . PRINT LPAREN expression RPAREN
    (28) return_stmt -> . RETURN expression
    (59) expression_stmt -> . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    $end            reduce using rule 4 (statement_list -> .)
    IF              shift and go to state 14
    VAR             shift and go to state 17
    VAL             shift and go to state 19
    FUN             shift and go to state 20
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

  ! IF              [ reduce using rule 4 (statement_list -> .) ]
  ! VAR             [ reduce using rule 4 (statement_list -> .) ]
  ! VAL             [ reduce using rule 4 (statement_list -> .) ]
  ! FUN             [ reduce using rule 4 (statement_list -> .) ]
  ! CLASS           [ reduce using rule 4 (statement_list -> .) ]
  ! FOR             [ reduce using rule 4 (statement_list -> .) ]
  ! WHEN            [ reduce using rule 4 (statement_list -> .) ]
  ! PRINTLN         [ reduce using rule 4 (statement_list -> .) ]
  ! PRINT           [ reduce using rule 4 (statement_list -> .) ]
  ! RETURN          [ reduce using rule 4 (statement_list -> .) ]
  ! MAPOF           [ reduce using rule 4 (statement_list -> .) ]
  ! MINUS           [ reduce using rule 4 (statement_list -> .) ]
  ! LPAREN          [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_INT      [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 4 (statement_list -> .) ]
  ! STRING          [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 4 (statement_list -> .) ]
  ! ID              [ reduce using rule 4 (statement_list -> .) ]
  ! LISTOF          [ reduce using rule 4 (statement_list -> .) ]
  ! ARRAYOF         [ reduce using rule 4 (statement_list -> .) ]
  ! READLINE        [ reduce using rule 4 (statement_list -> .) ]

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    function_def_params_no_return  shift and go to state 6
    function_def_no_params_no_return shift and go to state 7
    class_def                      shift and go to state 8
    for_loop                       shift and go to state 9
    when_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    expression_stmt                shift and go to state 13
    expression                     shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . function_def_params_no_return
    (8) statement -> . function_def_no_params_no_return
    (9) statement -> . class_def
    (10) statement -> . for_loop
    (11) statement -> . when_stmt
    (12) statement -> . print_stmt
    (13) statement -> . return_stmt
    (14) statement -> . expression_stmt
    (83) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) declaration -> . VAR ID ASSIGN expression
    (16) declaration -> . VAL ID ASSIGN expression
    (17) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> . FUN ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> . FUN ID LPAREN RPAREN block
    (71) class_def -> . CLASS ID LBRACE class_body RBRACE
    (29) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (64) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (56) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (57) print_stmt -> . PRINT LPAREN expression RPAREN
    (28) return_stmt -> . RETURN expression
    (59) expression_stmt -> . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    $end            reduce using rule 1 (program -> statement_list .)
    IF              shift and go to state 14
    VAR             shift and go to state 17
    VAL             shift and go to state 19
    FUN             shift and go to state 20
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    statement                      shift and go to state 37
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    function_def_params_no_return  shift and go to state 6
    function_def_no_params_no_return shift and go to state 7
    class_def                      shift and go to state 8
    for_loop                       shift and go to state 9
    when_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    expression_stmt                shift and go to state 13
    expression                     shift and go to state 16

state 3

    (3) statement_list -> statement .

    IF              reduce using rule 3 (statement_list -> statement .)
    VAR             reduce using rule 3 (statement_list -> statement .)
    VAL             reduce using rule 3 (statement_list -> statement .)
    FUN             reduce using rule 3 (statement_list -> statement .)
    CLASS           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    WHEN            reduce using rule 3 (statement_list -> statement .)
    PRINTLN         reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    MAPOF           reduce using rule 3 (statement_list -> statement .)
    MINUS           reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER_INT      reduce using rule 3 (statement_list -> statement .)
    NUMBER_DOUBLE   reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    BOOLEAN_TRUE    reduce using rule 3 (statement_list -> statement .)
    BOOLEAN_FALSE   reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    LISTOF          reduce using rule 3 (statement_list -> statement .)
    ARRAYOF         reduce using rule 3 (statement_list -> statement .)
    READLINE        reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)
    ELSE            reduce using rule 3 (statement_list -> statement .)


state 4

    (5) statement -> declaration .

    IF              reduce using rule 5 (statement -> declaration .)
    VAR             reduce using rule 5 (statement -> declaration .)
    VAL             reduce using rule 5 (statement -> declaration .)
    FUN             reduce using rule 5 (statement -> declaration .)
    CLASS           reduce using rule 5 (statement -> declaration .)
    FOR             reduce using rule 5 (statement -> declaration .)
    WHEN            reduce using rule 5 (statement -> declaration .)
    PRINTLN         reduce using rule 5 (statement -> declaration .)
    PRINT           reduce using rule 5 (statement -> declaration .)
    RETURN          reduce using rule 5 (statement -> declaration .)
    MAPOF           reduce using rule 5 (statement -> declaration .)
    MINUS           reduce using rule 5 (statement -> declaration .)
    LPAREN          reduce using rule 5 (statement -> declaration .)
    NUMBER_INT      reduce using rule 5 (statement -> declaration .)
    NUMBER_DOUBLE   reduce using rule 5 (statement -> declaration .)
    STRING          reduce using rule 5 (statement -> declaration .)
    BOOLEAN_TRUE    reduce using rule 5 (statement -> declaration .)
    BOOLEAN_FALSE   reduce using rule 5 (statement -> declaration .)
    ID              reduce using rule 5 (statement -> declaration .)
    LISTOF          reduce using rule 5 (statement -> declaration .)
    ARRAYOF         reduce using rule 5 (statement -> declaration .)
    READLINE        reduce using rule 5 (statement -> declaration .)
    $end            reduce using rule 5 (statement -> declaration .)
    RBRACE          reduce using rule 5 (statement -> declaration .)
    ELSE            reduce using rule 5 (statement -> declaration .)


state 5

    (6) statement -> function_def .

    IF              reduce using rule 6 (statement -> function_def .)
    VAR             reduce using rule 6 (statement -> function_def .)
    VAL             reduce using rule 6 (statement -> function_def .)
    FUN             reduce using rule 6 (statement -> function_def .)
    CLASS           reduce using rule 6 (statement -> function_def .)
    FOR             reduce using rule 6 (statement -> function_def .)
    WHEN            reduce using rule 6 (statement -> function_def .)
    PRINTLN         reduce using rule 6 (statement -> function_def .)
    PRINT           reduce using rule 6 (statement -> function_def .)
    RETURN          reduce using rule 6 (statement -> function_def .)
    MAPOF           reduce using rule 6 (statement -> function_def .)
    MINUS           reduce using rule 6 (statement -> function_def .)
    LPAREN          reduce using rule 6 (statement -> function_def .)
    NUMBER_INT      reduce using rule 6 (statement -> function_def .)
    NUMBER_DOUBLE   reduce using rule 6 (statement -> function_def .)
    STRING          reduce using rule 6 (statement -> function_def .)
    BOOLEAN_TRUE    reduce using rule 6 (statement -> function_def .)
    BOOLEAN_FALSE   reduce using rule 6 (statement -> function_def .)
    ID              reduce using rule 6 (statement -> function_def .)
    LISTOF          reduce using rule 6 (statement -> function_def .)
    ARRAYOF         reduce using rule 6 (statement -> function_def .)
    READLINE        reduce using rule 6 (statement -> function_def .)
    $end            reduce using rule 6 (statement -> function_def .)
    RBRACE          reduce using rule 6 (statement -> function_def .)
    ELSE            reduce using rule 6 (statement -> function_def .)


state 6

    (7) statement -> function_def_params_no_return .

    IF              reduce using rule 7 (statement -> function_def_params_no_return .)
    VAR             reduce using rule 7 (statement -> function_def_params_no_return .)
    VAL             reduce using rule 7 (statement -> function_def_params_no_return .)
    FUN             reduce using rule 7 (statement -> function_def_params_no_return .)
    CLASS           reduce using rule 7 (statement -> function_def_params_no_return .)
    FOR             reduce using rule 7 (statement -> function_def_params_no_return .)
    WHEN            reduce using rule 7 (statement -> function_def_params_no_return .)
    PRINTLN         reduce using rule 7 (statement -> function_def_params_no_return .)
    PRINT           reduce using rule 7 (statement -> function_def_params_no_return .)
    RETURN          reduce using rule 7 (statement -> function_def_params_no_return .)
    MAPOF           reduce using rule 7 (statement -> function_def_params_no_return .)
    MINUS           reduce using rule 7 (statement -> function_def_params_no_return .)
    LPAREN          reduce using rule 7 (statement -> function_def_params_no_return .)
    NUMBER_INT      reduce using rule 7 (statement -> function_def_params_no_return .)
    NUMBER_DOUBLE   reduce using rule 7 (statement -> function_def_params_no_return .)
    STRING          reduce using rule 7 (statement -> function_def_params_no_return .)
    BOOLEAN_TRUE    reduce using rule 7 (statement -> function_def_params_no_return .)
    BOOLEAN_FALSE   reduce using rule 7 (statement -> function_def_params_no_return .)
    ID              reduce using rule 7 (statement -> function_def_params_no_return .)
    LISTOF          reduce using rule 7 (statement -> function_def_params_no_return .)
    ARRAYOF         reduce using rule 7 (statement -> function_def_params_no_return .)
    READLINE        reduce using rule 7 (statement -> function_def_params_no_return .)
    $end            reduce using rule 7 (statement -> function_def_params_no_return .)
    RBRACE          reduce using rule 7 (statement -> function_def_params_no_return .)
    ELSE            reduce using rule 7 (statement -> function_def_params_no_return .)


state 7

    (8) statement -> function_def_no_params_no_return .

    IF              reduce using rule 8 (statement -> function_def_no_params_no_return .)
    VAR             reduce using rule 8 (statement -> function_def_no_params_no_return .)
    VAL             reduce using rule 8 (statement -> function_def_no_params_no_return .)
    FUN             reduce using rule 8 (statement -> function_def_no_params_no_return .)
    CLASS           reduce using rule 8 (statement -> function_def_no_params_no_return .)
    FOR             reduce using rule 8 (statement -> function_def_no_params_no_return .)
    WHEN            reduce using rule 8 (statement -> function_def_no_params_no_return .)
    PRINTLN         reduce using rule 8 (statement -> function_def_no_params_no_return .)
    PRINT           reduce using rule 8 (statement -> function_def_no_params_no_return .)
    RETURN          reduce using rule 8 (statement -> function_def_no_params_no_return .)
    MAPOF           reduce using rule 8 (statement -> function_def_no_params_no_return .)
    MINUS           reduce using rule 8 (statement -> function_def_no_params_no_return .)
    LPAREN          reduce using rule 8 (statement -> function_def_no_params_no_return .)
    NUMBER_INT      reduce using rule 8 (statement -> function_def_no_params_no_return .)
    NUMBER_DOUBLE   reduce using rule 8 (statement -> function_def_no_params_no_return .)
    STRING          reduce using rule 8 (statement -> function_def_no_params_no_return .)
    BOOLEAN_TRUE    reduce using rule 8 (statement -> function_def_no_params_no_return .)
    BOOLEAN_FALSE   reduce using rule 8 (statement -> function_def_no_params_no_return .)
    ID              reduce using rule 8 (statement -> function_def_no_params_no_return .)
    LISTOF          reduce using rule 8 (statement -> function_def_no_params_no_return .)
    ARRAYOF         reduce using rule 8 (statement -> function_def_no_params_no_return .)
    READLINE        reduce using rule 8 (statement -> function_def_no_params_no_return .)
    $end            reduce using rule 8 (statement -> function_def_no_params_no_return .)
    RBRACE          reduce using rule 8 (statement -> function_def_no_params_no_return .)
    ELSE            reduce using rule 8 (statement -> function_def_no_params_no_return .)


state 8

    (9) statement -> class_def .

    IF              reduce using rule 9 (statement -> class_def .)
    VAR             reduce using rule 9 (statement -> class_def .)
    VAL             reduce using rule 9 (statement -> class_def .)
    FUN             reduce using rule 9 (statement -> class_def .)
    CLASS           reduce using rule 9 (statement -> class_def .)
    FOR             reduce using rule 9 (statement -> class_def .)
    WHEN            reduce using rule 9 (statement -> class_def .)
    PRINTLN         reduce using rule 9 (statement -> class_def .)
    PRINT           reduce using rule 9 (statement -> class_def .)
    RETURN          reduce using rule 9 (statement -> class_def .)
    MAPOF           reduce using rule 9 (statement -> class_def .)
    MINUS           reduce using rule 9 (statement -> class_def .)
    LPAREN          reduce using rule 9 (statement -> class_def .)
    NUMBER_INT      reduce using rule 9 (statement -> class_def .)
    NUMBER_DOUBLE   reduce using rule 9 (statement -> class_def .)
    STRING          reduce using rule 9 (statement -> class_def .)
    BOOLEAN_TRUE    reduce using rule 9 (statement -> class_def .)
    BOOLEAN_FALSE   reduce using rule 9 (statement -> class_def .)
    ID              reduce using rule 9 (statement -> class_def .)
    LISTOF          reduce using rule 9 (statement -> class_def .)
    ARRAYOF         reduce using rule 9 (statement -> class_def .)
    READLINE        reduce using rule 9 (statement -> class_def .)
    $end            reduce using rule 9 (statement -> class_def .)
    RBRACE          reduce using rule 9 (statement -> class_def .)
    ELSE            reduce using rule 9 (statement -> class_def .)


state 9

    (10) statement -> for_loop .

    IF              reduce using rule 10 (statement -> for_loop .)
    VAR             reduce using rule 10 (statement -> for_loop .)
    VAL             reduce using rule 10 (statement -> for_loop .)
    FUN             reduce using rule 10 (statement -> for_loop .)
    CLASS           reduce using rule 10 (statement -> for_loop .)
    FOR             reduce using rule 10 (statement -> for_loop .)
    WHEN            reduce using rule 10 (statement -> for_loop .)
    PRINTLN         reduce using rule 10 (statement -> for_loop .)
    PRINT           reduce using rule 10 (statement -> for_loop .)
    RETURN          reduce using rule 10 (statement -> for_loop .)
    MAPOF           reduce using rule 10 (statement -> for_loop .)
    MINUS           reduce using rule 10 (statement -> for_loop .)
    LPAREN          reduce using rule 10 (statement -> for_loop .)
    NUMBER_INT      reduce using rule 10 (statement -> for_loop .)
    NUMBER_DOUBLE   reduce using rule 10 (statement -> for_loop .)
    STRING          reduce using rule 10 (statement -> for_loop .)
    BOOLEAN_TRUE    reduce using rule 10 (statement -> for_loop .)
    BOOLEAN_FALSE   reduce using rule 10 (statement -> for_loop .)
    ID              reduce using rule 10 (statement -> for_loop .)
    LISTOF          reduce using rule 10 (statement -> for_loop .)
    ARRAYOF         reduce using rule 10 (statement -> for_loop .)
    READLINE        reduce using rule 10 (statement -> for_loop .)
    $end            reduce using rule 10 (statement -> for_loop .)
    RBRACE          reduce using rule 10 (statement -> for_loop .)
    ELSE            reduce using rule 10 (statement -> for_loop .)


state 10

    (11) statement -> when_stmt .

    IF              reduce using rule 11 (statement -> when_stmt .)
    VAR             reduce using rule 11 (statement -> when_stmt .)
    VAL             reduce using rule 11 (statement -> when_stmt .)
    FUN             reduce using rule 11 (statement -> when_stmt .)
    CLASS           reduce using rule 11 (statement -> when_stmt .)
    FOR             reduce using rule 11 (statement -> when_stmt .)
    WHEN            reduce using rule 11 (statement -> when_stmt .)
    PRINTLN         reduce using rule 11 (statement -> when_stmt .)
    PRINT           reduce using rule 11 (statement -> when_stmt .)
    RETURN          reduce using rule 11 (statement -> when_stmt .)
    MAPOF           reduce using rule 11 (statement -> when_stmt .)
    MINUS           reduce using rule 11 (statement -> when_stmt .)
    LPAREN          reduce using rule 11 (statement -> when_stmt .)
    NUMBER_INT      reduce using rule 11 (statement -> when_stmt .)
    NUMBER_DOUBLE   reduce using rule 11 (statement -> when_stmt .)
    STRING          reduce using rule 11 (statement -> when_stmt .)
    BOOLEAN_TRUE    reduce using rule 11 (statement -> when_stmt .)
    BOOLEAN_FALSE   reduce using rule 11 (statement -> when_stmt .)
    ID              reduce using rule 11 (statement -> when_stmt .)
    LISTOF          reduce using rule 11 (statement -> when_stmt .)
    ARRAYOF         reduce using rule 11 (statement -> when_stmt .)
    READLINE        reduce using rule 11 (statement -> when_stmt .)
    $end            reduce using rule 11 (statement -> when_stmt .)
    RBRACE          reduce using rule 11 (statement -> when_stmt .)
    ELSE            reduce using rule 11 (statement -> when_stmt .)


state 11

    (12) statement -> print_stmt .

    IF              reduce using rule 12 (statement -> print_stmt .)
    VAR             reduce using rule 12 (statement -> print_stmt .)
    VAL             reduce using rule 12 (statement -> print_stmt .)
    FUN             reduce using rule 12 (statement -> print_stmt .)
    CLASS           reduce using rule 12 (statement -> print_stmt .)
    FOR             reduce using rule 12 (statement -> print_stmt .)
    WHEN            reduce using rule 12 (statement -> print_stmt .)
    PRINTLN         reduce using rule 12 (statement -> print_stmt .)
    PRINT           reduce using rule 12 (statement -> print_stmt .)
    RETURN          reduce using rule 12 (statement -> print_stmt .)
    MAPOF           reduce using rule 12 (statement -> print_stmt .)
    MINUS           reduce using rule 12 (statement -> print_stmt .)
    LPAREN          reduce using rule 12 (statement -> print_stmt .)
    NUMBER_INT      reduce using rule 12 (statement -> print_stmt .)
    NUMBER_DOUBLE   reduce using rule 12 (statement -> print_stmt .)
    STRING          reduce using rule 12 (statement -> print_stmt .)
    BOOLEAN_TRUE    reduce using rule 12 (statement -> print_stmt .)
    BOOLEAN_FALSE   reduce using rule 12 (statement -> print_stmt .)
    ID              reduce using rule 12 (statement -> print_stmt .)
    LISTOF          reduce using rule 12 (statement -> print_stmt .)
    ARRAYOF         reduce using rule 12 (statement -> print_stmt .)
    READLINE        reduce using rule 12 (statement -> print_stmt .)
    $end            reduce using rule 12 (statement -> print_stmt .)
    RBRACE          reduce using rule 12 (statement -> print_stmt .)
    ELSE            reduce using rule 12 (statement -> print_stmt .)


state 12

    (13) statement -> return_stmt .

    IF              reduce using rule 13 (statement -> return_stmt .)
    VAR             reduce using rule 13 (statement -> return_stmt .)
    VAL             reduce using rule 13 (statement -> return_stmt .)
    FUN             reduce using rule 13 (statement -> return_stmt .)
    CLASS           reduce using rule 13 (statement -> return_stmt .)
    FOR             reduce using rule 13 (statement -> return_stmt .)
    WHEN            reduce using rule 13 (statement -> return_stmt .)
    PRINTLN         reduce using rule 13 (statement -> return_stmt .)
    PRINT           reduce using rule 13 (statement -> return_stmt .)
    RETURN          reduce using rule 13 (statement -> return_stmt .)
    MAPOF           reduce using rule 13 (statement -> return_stmt .)
    MINUS           reduce using rule 13 (statement -> return_stmt .)
    LPAREN          reduce using rule 13 (statement -> return_stmt .)
    NUMBER_INT      reduce using rule 13 (statement -> return_stmt .)
    NUMBER_DOUBLE   reduce using rule 13 (statement -> return_stmt .)
    STRING          reduce using rule 13 (statement -> return_stmt .)
    BOOLEAN_TRUE    reduce using rule 13 (statement -> return_stmt .)
    BOOLEAN_FALSE   reduce using rule 13 (statement -> return_stmt .)
    ID              reduce using rule 13 (statement -> return_stmt .)
    LISTOF          reduce using rule 13 (statement -> return_stmt .)
    ARRAYOF         reduce using rule 13 (statement -> return_stmt .)
    READLINE        reduce using rule 13 (statement -> return_stmt .)
    $end            reduce using rule 13 (statement -> return_stmt .)
    RBRACE          reduce using rule 13 (statement -> return_stmt .)
    ELSE            reduce using rule 13 (statement -> return_stmt .)


state 13

    (14) statement -> expression_stmt .

    IF              reduce using rule 14 (statement -> expression_stmt .)
    VAR             reduce using rule 14 (statement -> expression_stmt .)
    VAL             reduce using rule 14 (statement -> expression_stmt .)
    FUN             reduce using rule 14 (statement -> expression_stmt .)
    CLASS           reduce using rule 14 (statement -> expression_stmt .)
    FOR             reduce using rule 14 (statement -> expression_stmt .)
    WHEN            reduce using rule 14 (statement -> expression_stmt .)
    PRINTLN         reduce using rule 14 (statement -> expression_stmt .)
    PRINT           reduce using rule 14 (statement -> expression_stmt .)
    RETURN          reduce using rule 14 (statement -> expression_stmt .)
    MAPOF           reduce using rule 14 (statement -> expression_stmt .)
    MINUS           reduce using rule 14 (statement -> expression_stmt .)
    LPAREN          reduce using rule 14 (statement -> expression_stmt .)
    NUMBER_INT      reduce using rule 14 (statement -> expression_stmt .)
    NUMBER_DOUBLE   reduce using rule 14 (statement -> expression_stmt .)
    STRING          reduce using rule 14 (statement -> expression_stmt .)
    BOOLEAN_TRUE    reduce using rule 14 (statement -> expression_stmt .)
    BOOLEAN_FALSE   reduce using rule 14 (statement -> expression_stmt .)
    ID              reduce using rule 14 (statement -> expression_stmt .)
    LISTOF          reduce using rule 14 (statement -> expression_stmt .)
    ARRAYOF         reduce using rule 14 (statement -> expression_stmt .)
    READLINE        reduce using rule 14 (statement -> expression_stmt .)
    $end            reduce using rule 14 (statement -> expression_stmt .)
    RBRACE          reduce using rule 14 (statement -> expression_stmt .)
    ELSE            reduce using rule 14 (statement -> expression_stmt .)


state 14

    (83) statement -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 38


state 15

    (49) expression -> LPAREN . expression RPAREN
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 39

state 16

    (59) expression_stmt -> expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    IF              reduce using rule 59 (expression_stmt -> expression .)
    VAR             reduce using rule 59 (expression_stmt -> expression .)
    VAL             reduce using rule 59 (expression_stmt -> expression .)
    FUN             reduce using rule 59 (expression_stmt -> expression .)
    CLASS           reduce using rule 59 (expression_stmt -> expression .)
    FOR             reduce using rule 59 (expression_stmt -> expression .)
    WHEN            reduce using rule 59 (expression_stmt -> expression .)
    PRINTLN         reduce using rule 59 (expression_stmt -> expression .)
    PRINT           reduce using rule 59 (expression_stmt -> expression .)
    RETURN          reduce using rule 59 (expression_stmt -> expression .)
    MAPOF           reduce using rule 59 (expression_stmt -> expression .)
    LPAREN          reduce using rule 59 (expression_stmt -> expression .)
    NUMBER_INT      reduce using rule 59 (expression_stmt -> expression .)
    NUMBER_DOUBLE   reduce using rule 59 (expression_stmt -> expression .)
    STRING          reduce using rule 59 (expression_stmt -> expression .)
    BOOLEAN_TRUE    reduce using rule 59 (expression_stmt -> expression .)
    BOOLEAN_FALSE   reduce using rule 59 (expression_stmt -> expression .)
    ID              reduce using rule 59 (expression_stmt -> expression .)
    LISTOF          reduce using rule 59 (expression_stmt -> expression .)
    ARRAYOF         reduce using rule 59 (expression_stmt -> expression .)
    READLINE        reduce using rule 59 (expression_stmt -> expression .)
    $end            reduce using rule 59 (expression_stmt -> expression .)
    RBRACE          reduce using rule 59 (expression_stmt -> expression .)
    ELSE            reduce using rule 59 (expression_stmt -> expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51

  ! MINUS           [ reduce using rule 59 (expression_stmt -> expression .) ]


state 17

    (15) declaration -> VAR . ID ASSIGN expression

    ID              shift and go to state 52


state 18

    (55) expression -> ID .

    PLUS            reduce using rule 55 (expression -> ID .)
    MINUS           reduce using rule 55 (expression -> ID .)
    MULTIPLY        reduce using rule 55 (expression -> ID .)
    DIVIDE          reduce using rule 55 (expression -> ID .)
    LESS            reduce using rule 55 (expression -> ID .)
    GREATER         reduce using rule 55 (expression -> ID .)
    LESS_EQUAL      reduce using rule 55 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 55 (expression -> ID .)
    EQUALS          reduce using rule 55 (expression -> ID .)
    NOT_EQUALS      reduce using rule 55 (expression -> ID .)
    AND             reduce using rule 55 (expression -> ID .)
    OR              reduce using rule 55 (expression -> ID .)
    IF              reduce using rule 55 (expression -> ID .)
    VAR             reduce using rule 55 (expression -> ID .)
    VAL             reduce using rule 55 (expression -> ID .)
    FUN             reduce using rule 55 (expression -> ID .)
    CLASS           reduce using rule 55 (expression -> ID .)
    FOR             reduce using rule 55 (expression -> ID .)
    WHEN            reduce using rule 55 (expression -> ID .)
    PRINTLN         reduce using rule 55 (expression -> ID .)
    PRINT           reduce using rule 55 (expression -> ID .)
    RETURN          reduce using rule 55 (expression -> ID .)
    MAPOF           reduce using rule 55 (expression -> ID .)
    LPAREN          reduce using rule 55 (expression -> ID .)
    NUMBER_INT      reduce using rule 55 (expression -> ID .)
    NUMBER_DOUBLE   reduce using rule 55 (expression -> ID .)
    STRING          reduce using rule 55 (expression -> ID .)
    BOOLEAN_TRUE    reduce using rule 55 (expression -> ID .)
    BOOLEAN_FALSE   reduce using rule 55 (expression -> ID .)
    ID              reduce using rule 55 (expression -> ID .)
    LISTOF          reduce using rule 55 (expression -> ID .)
    ARRAYOF         reduce using rule 55 (expression -> ID .)
    READLINE        reduce using rule 55 (expression -> ID .)
    $end            reduce using rule 55 (expression -> ID .)
    RPAREN          reduce using rule 55 (expression -> ID .)
    RBRACE          reduce using rule 55 (expression -> ID .)
    ELSE            reduce using rule 55 (expression -> ID .)
    ARROW           reduce using rule 55 (expression -> ID .)
    TO              reduce using rule 55 (expression -> ID .)
    COMMA           reduce using rule 55 (expression -> ID .)


state 19

    (16) declaration -> VAL . ID ASSIGN expression

    ID              shift and go to state 53


state 20

    (17) function_def -> FUN . ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> FUN . ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> FUN . ID LPAREN RPAREN block

    ID              shift and go to state 54


state 21

    (71) class_def -> CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 55


state 22

    (29) for_loop -> FOR . LPAREN ID IN expression RPAREN loop_body

    LPAREN          shift and go to state 56


state 23

    (64) when_stmt -> WHEN . LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> WHEN . LBRACE when_branches RBRACE

    LPAREN          shift and go to state 57
    LBRACE          shift and go to state 58


state 24

    (56) print_stmt -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 59


state 25

    (57) print_stmt -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 60


state 26

    (28) return_stmt -> RETURN . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 61

state 27

    (32) expression -> MAPOF . LPAREN map_entries RPAREN

    LPAREN          shift and go to state 62


state 28

    (48) expression -> MINUS . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 63

state 29

    (50) expression -> NUMBER_INT .

    PLUS            reduce using rule 50 (expression -> NUMBER_INT .)
    MINUS           reduce using rule 50 (expression -> NUMBER_INT .)
    MULTIPLY        reduce using rule 50 (expression -> NUMBER_INT .)
    DIVIDE          reduce using rule 50 (expression -> NUMBER_INT .)
    LESS            reduce using rule 50 (expression -> NUMBER_INT .)
    GREATER         reduce using rule 50 (expression -> NUMBER_INT .)
    LESS_EQUAL      reduce using rule 50 (expression -> NUMBER_INT .)
    GREATER_EQUAL   reduce using rule 50 (expression -> NUMBER_INT .)
    EQUALS          reduce using rule 50 (expression -> NUMBER_INT .)
    NOT_EQUALS      reduce using rule 50 (expression -> NUMBER_INT .)
    AND             reduce using rule 50 (expression -> NUMBER_INT .)
    OR              reduce using rule 50 (expression -> NUMBER_INT .)
    IF              reduce using rule 50 (expression -> NUMBER_INT .)
    VAR             reduce using rule 50 (expression -> NUMBER_INT .)
    VAL             reduce using rule 50 (expression -> NUMBER_INT .)
    FUN             reduce using rule 50 (expression -> NUMBER_INT .)
    CLASS           reduce using rule 50 (expression -> NUMBER_INT .)
    FOR             reduce using rule 50 (expression -> NUMBER_INT .)
    WHEN            reduce using rule 50 (expression -> NUMBER_INT .)
    PRINTLN         reduce using rule 50 (expression -> NUMBER_INT .)
    PRINT           reduce using rule 50 (expression -> NUMBER_INT .)
    RETURN          reduce using rule 50 (expression -> NUMBER_INT .)
    MAPOF           reduce using rule 50 (expression -> NUMBER_INT .)
    LPAREN          reduce using rule 50 (expression -> NUMBER_INT .)
    NUMBER_INT      reduce using rule 50 (expression -> NUMBER_INT .)
    NUMBER_DOUBLE   reduce using rule 50 (expression -> NUMBER_INT .)
    STRING          reduce using rule 50 (expression -> NUMBER_INT .)
    BOOLEAN_TRUE    reduce using rule 50 (expression -> NUMBER_INT .)
    BOOLEAN_FALSE   reduce using rule 50 (expression -> NUMBER_INT .)
    ID              reduce using rule 50 (expression -> NUMBER_INT .)
    LISTOF          reduce using rule 50 (expression -> NUMBER_INT .)
    ARRAYOF         reduce using rule 50 (expression -> NUMBER_INT .)
    READLINE        reduce using rule 50 (expression -> NUMBER_INT .)
    $end            reduce using rule 50 (expression -> NUMBER_INT .)
    RPAREN          reduce using rule 50 (expression -> NUMBER_INT .)
    RBRACE          reduce using rule 50 (expression -> NUMBER_INT .)
    ELSE            reduce using rule 50 (expression -> NUMBER_INT .)
    ARROW           reduce using rule 50 (expression -> NUMBER_INT .)
    TO              reduce using rule 50 (expression -> NUMBER_INT .)
    COMMA           reduce using rule 50 (expression -> NUMBER_INT .)


state 30

    (51) expression -> NUMBER_DOUBLE .

    PLUS            reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    MINUS           reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    MULTIPLY        reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    DIVIDE          reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    LESS            reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    GREATER         reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    LESS_EQUAL      reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    GREATER_EQUAL   reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    EQUALS          reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    NOT_EQUALS      reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    AND             reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    OR              reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    IF              reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    VAR             reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    VAL             reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    FUN             reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    CLASS           reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    FOR             reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    WHEN            reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    PRINTLN         reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    PRINT           reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    RETURN          reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    MAPOF           reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    LPAREN          reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    NUMBER_INT      reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    NUMBER_DOUBLE   reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    STRING          reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    BOOLEAN_TRUE    reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    BOOLEAN_FALSE   reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    ID              reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    LISTOF          reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    ARRAYOF         reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    READLINE        reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    $end            reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    RPAREN          reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    RBRACE          reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    ELSE            reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    ARROW           reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    TO              reduce using rule 51 (expression -> NUMBER_DOUBLE .)
    COMMA           reduce using rule 51 (expression -> NUMBER_DOUBLE .)


state 31

    (52) expression -> STRING .

    PLUS            reduce using rule 52 (expression -> STRING .)
    MINUS           reduce using rule 52 (expression -> STRING .)
    MULTIPLY        reduce using rule 52 (expression -> STRING .)
    DIVIDE          reduce using rule 52 (expression -> STRING .)
    LESS            reduce using rule 52 (expression -> STRING .)
    GREATER         reduce using rule 52 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 52 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 52 (expression -> STRING .)
    EQUALS          reduce using rule 52 (expression -> STRING .)
    NOT_EQUALS      reduce using rule 52 (expression -> STRING .)
    AND             reduce using rule 52 (expression -> STRING .)
    OR              reduce using rule 52 (expression -> STRING .)
    IF              reduce using rule 52 (expression -> STRING .)
    VAR             reduce using rule 52 (expression -> STRING .)
    VAL             reduce using rule 52 (expression -> STRING .)
    FUN             reduce using rule 52 (expression -> STRING .)
    CLASS           reduce using rule 52 (expression -> STRING .)
    FOR             reduce using rule 52 (expression -> STRING .)
    WHEN            reduce using rule 52 (expression -> STRING .)
    PRINTLN         reduce using rule 52 (expression -> STRING .)
    PRINT           reduce using rule 52 (expression -> STRING .)
    RETURN          reduce using rule 52 (expression -> STRING .)
    MAPOF           reduce using rule 52 (expression -> STRING .)
    LPAREN          reduce using rule 52 (expression -> STRING .)
    NUMBER_INT      reduce using rule 52 (expression -> STRING .)
    NUMBER_DOUBLE   reduce using rule 52 (expression -> STRING .)
    STRING          reduce using rule 52 (expression -> STRING .)
    BOOLEAN_TRUE    reduce using rule 52 (expression -> STRING .)
    BOOLEAN_FALSE   reduce using rule 52 (expression -> STRING .)
    ID              reduce using rule 52 (expression -> STRING .)
    LISTOF          reduce using rule 52 (expression -> STRING .)
    ARRAYOF         reduce using rule 52 (expression -> STRING .)
    READLINE        reduce using rule 52 (expression -> STRING .)
    $end            reduce using rule 52 (expression -> STRING .)
    RPAREN          reduce using rule 52 (expression -> STRING .)
    RBRACE          reduce using rule 52 (expression -> STRING .)
    ELSE            reduce using rule 52 (expression -> STRING .)
    ARROW           reduce using rule 52 (expression -> STRING .)
    TO              reduce using rule 52 (expression -> STRING .)
    COMMA           reduce using rule 52 (expression -> STRING .)


state 32

    (53) expression -> BOOLEAN_TRUE .

    PLUS            reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    MINUS           reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    MULTIPLY        reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    DIVIDE          reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    LESS            reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    GREATER         reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    LESS_EQUAL      reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    GREATER_EQUAL   reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    EQUALS          reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    NOT_EQUALS      reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    AND             reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    OR              reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    IF              reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    VAR             reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    VAL             reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    FUN             reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    CLASS           reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    FOR             reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    WHEN            reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    PRINTLN         reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    PRINT           reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    RETURN          reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    MAPOF           reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    LPAREN          reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    NUMBER_INT      reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    NUMBER_DOUBLE   reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    STRING          reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    BOOLEAN_TRUE    reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    BOOLEAN_FALSE   reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    ID              reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    LISTOF          reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    ARRAYOF         reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    READLINE        reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    $end            reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    RPAREN          reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    RBRACE          reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    ELSE            reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    ARROW           reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    TO              reduce using rule 53 (expression -> BOOLEAN_TRUE .)
    COMMA           reduce using rule 53 (expression -> BOOLEAN_TRUE .)


state 33

    (54) expression -> BOOLEAN_FALSE .

    PLUS            reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    MINUS           reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    MULTIPLY        reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    DIVIDE          reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    LESS            reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    GREATER         reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    LESS_EQUAL      reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    GREATER_EQUAL   reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    EQUALS          reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    NOT_EQUALS      reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    AND             reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    OR              reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    IF              reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    VAR             reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    VAL             reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    FUN             reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    CLASS           reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    FOR             reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    WHEN            reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    PRINTLN         reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    PRINT           reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    RETURN          reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    MAPOF           reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    LPAREN          reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    NUMBER_INT      reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    NUMBER_DOUBLE   reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    STRING          reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    BOOLEAN_TRUE    reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    BOOLEAN_FALSE   reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    ID              reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    LISTOF          reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    ARRAYOF         reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    READLINE        reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    $end            reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    RPAREN          reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    RBRACE          reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    ELSE            reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    ARROW           reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    TO              reduce using rule 54 (expression -> BOOLEAN_FALSE .)
    COMMA           reduce using rule 54 (expression -> BOOLEAN_FALSE .)


state 34

    (60) expression -> LISTOF . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 64


state 35

    (82) expression -> ARRAYOF . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 65


state 36

    (85) expression -> READLINE . LPAREN RPAREN

    LPAREN          shift and go to state 66


state 37

    (2) statement_list -> statement_list statement .

    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    VAL             reduce using rule 2 (statement_list -> statement_list statement .)
    FUN             reduce using rule 2 (statement_list -> statement_list statement .)
    CLASS           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    WHEN            reduce using rule 2 (statement_list -> statement_list statement .)
    PRINTLN         reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    MAPOF           reduce using rule 2 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_INT      reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_DOUBLE   reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN_TRUE    reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN_FALSE   reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    LISTOF          reduce using rule 2 (statement_list -> statement_list statement .)
    ARRAYOF         reduce using rule 2 (statement_list -> statement_list statement .)
    READLINE        reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    ELSE            reduce using rule 2 (statement_list -> statement_list statement .)


state 38

    (83) statement -> IF LPAREN . expression RPAREN block ELSE block
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 67

state 39

    (49) expression -> LPAREN expression . RPAREN
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          shift and go to state 68
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 40

    (36) expression -> expression PLUS . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 69

state 41

    (37) expression -> expression MINUS . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 70

state 42

    (38) expression -> expression MULTIPLY . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 71

state 43

    (39) expression -> expression DIVIDE . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 72

state 44

    (40) expression -> expression LESS . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 73

state 45

    (41) expression -> expression GREATER . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 74

state 46

    (42) expression -> expression LESS_EQUAL . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 75

state 47

    (43) expression -> expression GREATER_EQUAL . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 76

state 48

    (44) expression -> expression EQUALS . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 77

state 49

    (45) expression -> expression NOT_EQUALS . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 78

state 50

    (46) expression -> expression AND . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 79

state 51

    (47) expression -> expression OR . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 80

state 52

    (15) declaration -> VAR ID . ASSIGN expression

    ASSIGN          shift and go to state 81


state 53

    (16) declaration -> VAL ID . ASSIGN expression

    ASSIGN          shift and go to state 82


state 54

    (17) function_def -> FUN ID . LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> FUN ID . LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> FUN ID . LPAREN RPAREN block

    LPAREN          shift and go to state 83


state 55

    (71) class_def -> CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 84


state 56

    (29) for_loop -> FOR LPAREN . ID IN expression RPAREN loop_body

    ID              shift and go to state 85


state 57

    (64) when_stmt -> WHEN LPAREN . expression RPAREN LBRACE when_branches RBRACE
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 86

state 58

    (69) when_stmt -> WHEN LBRACE . when_branches RBRACE
    (65) when_branches -> . when_branches when_branch
    (66) when_branches -> . when_branch
    (67) when_branch -> . expression ARROW statement_list
    (68) when_branch -> . ELSE ARROW statement_list
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    ELSE            shift and go to state 90
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    when_branches                  shift and go to state 87
    when_branch                    shift and go to state 88
    expression                     shift and go to state 89

state 59

    (56) print_stmt -> PRINTLN LPAREN . expression RPAREN
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 91

state 60

    (57) print_stmt -> PRINT LPAREN . expression RPAREN
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 92

state 61

    (28) return_stmt -> RETURN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    IF              reduce using rule 28 (return_stmt -> RETURN expression .)
    VAR             reduce using rule 28 (return_stmt -> RETURN expression .)
    VAL             reduce using rule 28 (return_stmt -> RETURN expression .)
    FUN             reduce using rule 28 (return_stmt -> RETURN expression .)
    CLASS           reduce using rule 28 (return_stmt -> RETURN expression .)
    FOR             reduce using rule 28 (return_stmt -> RETURN expression .)
    WHEN            reduce using rule 28 (return_stmt -> RETURN expression .)
    PRINTLN         reduce using rule 28 (return_stmt -> RETURN expression .)
    PRINT           reduce using rule 28 (return_stmt -> RETURN expression .)
    RETURN          reduce using rule 28 (return_stmt -> RETURN expression .)
    MAPOF           reduce using rule 28 (return_stmt -> RETURN expression .)
    LPAREN          reduce using rule 28 (return_stmt -> RETURN expression .)
    NUMBER_INT      reduce using rule 28 (return_stmt -> RETURN expression .)
    NUMBER_DOUBLE   reduce using rule 28 (return_stmt -> RETURN expression .)
    STRING          reduce using rule 28 (return_stmt -> RETURN expression .)
    BOOLEAN_TRUE    reduce using rule 28 (return_stmt -> RETURN expression .)
    BOOLEAN_FALSE   reduce using rule 28 (return_stmt -> RETURN expression .)
    ID              reduce using rule 28 (return_stmt -> RETURN expression .)
    LISTOF          reduce using rule 28 (return_stmt -> RETURN expression .)
    ARRAYOF         reduce using rule 28 (return_stmt -> RETURN expression .)
    READLINE        reduce using rule 28 (return_stmt -> RETURN expression .)
    $end            reduce using rule 28 (return_stmt -> RETURN expression .)
    RBRACE          reduce using rule 28 (return_stmt -> RETURN expression .)
    ELSE            reduce using rule 28 (return_stmt -> RETURN expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51

  ! MINUS           [ reduce using rule 28 (return_stmt -> RETURN expression .) ]


state 62

    (32) expression -> MAPOF LPAREN . map_entries RPAREN
    (33) map_entries -> . map_entries COMMA map_entry
    (34) map_entries -> . map_entry
    (35) map_entry -> . expression TO expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    map_entries                    shift and go to state 93
    map_entry                      shift and go to state 94
    expression                     shift and go to state 95

state 63

    (48) expression -> MINUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 48 (expression -> MINUS expression .)
    MINUS           reduce using rule 48 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 48 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 48 (expression -> MINUS expression .)
    LESS            reduce using rule 48 (expression -> MINUS expression .)
    GREATER         reduce using rule 48 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 48 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 48 (expression -> MINUS expression .)
    EQUALS          reduce using rule 48 (expression -> MINUS expression .)
    NOT_EQUALS      reduce using rule 48 (expression -> MINUS expression .)
    AND             reduce using rule 48 (expression -> MINUS expression .)
    OR              reduce using rule 48 (expression -> MINUS expression .)
    IF              reduce using rule 48 (expression -> MINUS expression .)
    VAR             reduce using rule 48 (expression -> MINUS expression .)
    VAL             reduce using rule 48 (expression -> MINUS expression .)
    FUN             reduce using rule 48 (expression -> MINUS expression .)
    CLASS           reduce using rule 48 (expression -> MINUS expression .)
    FOR             reduce using rule 48 (expression -> MINUS expression .)
    WHEN            reduce using rule 48 (expression -> MINUS expression .)
    PRINTLN         reduce using rule 48 (expression -> MINUS expression .)
    PRINT           reduce using rule 48 (expression -> MINUS expression .)
    RETURN          reduce using rule 48 (expression -> MINUS expression .)
    MAPOF           reduce using rule 48 (expression -> MINUS expression .)
    LPAREN          reduce using rule 48 (expression -> MINUS expression .)
    NUMBER_INT      reduce using rule 48 (expression -> MINUS expression .)
    NUMBER_DOUBLE   reduce using rule 48 (expression -> MINUS expression .)
    STRING          reduce using rule 48 (expression -> MINUS expression .)
    BOOLEAN_TRUE    reduce using rule 48 (expression -> MINUS expression .)
    BOOLEAN_FALSE   reduce using rule 48 (expression -> MINUS expression .)
    ID              reduce using rule 48 (expression -> MINUS expression .)
    LISTOF          reduce using rule 48 (expression -> MINUS expression .)
    ARRAYOF         reduce using rule 48 (expression -> MINUS expression .)
    READLINE        reduce using rule 48 (expression -> MINUS expression .)
    $end            reduce using rule 48 (expression -> MINUS expression .)
    RPAREN          reduce using rule 48 (expression -> MINUS expression .)
    RBRACE          reduce using rule 48 (expression -> MINUS expression .)
    ELSE            reduce using rule 48 (expression -> MINUS expression .)
    ARROW           reduce using rule 48 (expression -> MINUS expression .)
    TO              reduce using rule 48 (expression -> MINUS expression .)
    COMMA           reduce using rule 48 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! MULTIPLY        [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 64

    (60) expression -> LISTOF LPAREN . expression_list RPAREN
    (61) expression_list -> . expression_list COMMA expression
    (62) expression_list -> . expression
    (63) expression_list -> .
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    RPAREN          reduce using rule 63 (expression_list -> .)
    COMMA           reduce using rule 63 (expression_list -> .)
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression_list                shift and go to state 96
    expression                     shift and go to state 97

state 65

    (82) expression -> ARRAYOF LPAREN . expression_list RPAREN
    (61) expression_list -> . expression_list COMMA expression
    (62) expression_list -> . expression
    (63) expression_list -> .
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    RPAREN          reduce using rule 63 (expression_list -> .)
    COMMA           reduce using rule 63 (expression_list -> .)
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression_list                shift and go to state 98
    expression                     shift and go to state 97

state 66

    (85) expression -> READLINE LPAREN . RPAREN

    RPAREN          shift and go to state 99


state 67

    (83) statement -> IF LPAREN expression . RPAREN block ELSE block
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          shift and go to state 100
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 68

    (49) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LESS_EQUAL      reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL   reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NOT_EQUALS      reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    VAL             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    FUN             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    CLASS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    WHEN            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MAPOF           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NUMBER_DOUBLE   reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    BOOLEAN_TRUE    reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    BOOLEAN_FALSE   reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LISTOF          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    ARRAYOF         reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    READLINE        reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    ARROW           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 69

    (36) expression -> expression PLUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 36 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 36 (expression -> expression PLUS expression .)
    LESS            reduce using rule 36 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 36 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 36 (expression -> expression PLUS expression .)
    NOT_EQUALS      reduce using rule 36 (expression -> expression PLUS expression .)
    AND             reduce using rule 36 (expression -> expression PLUS expression .)
    OR              reduce using rule 36 (expression -> expression PLUS expression .)
    IF              reduce using rule 36 (expression -> expression PLUS expression .)
    VAR             reduce using rule 36 (expression -> expression PLUS expression .)
    VAL             reduce using rule 36 (expression -> expression PLUS expression .)
    FUN             reduce using rule 36 (expression -> expression PLUS expression .)
    CLASS           reduce using rule 36 (expression -> expression PLUS expression .)
    FOR             reduce using rule 36 (expression -> expression PLUS expression .)
    WHEN            reduce using rule 36 (expression -> expression PLUS expression .)
    PRINTLN         reduce using rule 36 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 36 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 36 (expression -> expression PLUS expression .)
    MAPOF           reduce using rule 36 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 36 (expression -> expression PLUS expression .)
    NUMBER_INT      reduce using rule 36 (expression -> expression PLUS expression .)
    NUMBER_DOUBLE   reduce using rule 36 (expression -> expression PLUS expression .)
    STRING          reduce using rule 36 (expression -> expression PLUS expression .)
    BOOLEAN_TRUE    reduce using rule 36 (expression -> expression PLUS expression .)
    BOOLEAN_FALSE   reduce using rule 36 (expression -> expression PLUS expression .)
    ID              reduce using rule 36 (expression -> expression PLUS expression .)
    LISTOF          reduce using rule 36 (expression -> expression PLUS expression .)
    ARRAYOF         reduce using rule 36 (expression -> expression PLUS expression .)
    READLINE        reduce using rule 36 (expression -> expression PLUS expression .)
    $end            reduce using rule 36 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 36 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 36 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 36 (expression -> expression PLUS expression .)
    ARROW           reduce using rule 36 (expression -> expression PLUS expression .)
    TO              reduce using rule 36 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 36 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43

  ! MULTIPLY        [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 70

    (37) expression -> expression MINUS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 37 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 37 (expression -> expression MINUS expression .)
    LESS            reduce using rule 37 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 37 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 37 (expression -> expression MINUS expression .)
    NOT_EQUALS      reduce using rule 37 (expression -> expression MINUS expression .)
    AND             reduce using rule 37 (expression -> expression MINUS expression .)
    OR              reduce using rule 37 (expression -> expression MINUS expression .)
    IF              reduce using rule 37 (expression -> expression MINUS expression .)
    VAR             reduce using rule 37 (expression -> expression MINUS expression .)
    VAL             reduce using rule 37 (expression -> expression MINUS expression .)
    FUN             reduce using rule 37 (expression -> expression MINUS expression .)
    CLASS           reduce using rule 37 (expression -> expression MINUS expression .)
    FOR             reduce using rule 37 (expression -> expression MINUS expression .)
    WHEN            reduce using rule 37 (expression -> expression MINUS expression .)
    PRINTLN         reduce using rule 37 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 37 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 37 (expression -> expression MINUS expression .)
    MAPOF           reduce using rule 37 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 37 (expression -> expression MINUS expression .)
    NUMBER_INT      reduce using rule 37 (expression -> expression MINUS expression .)
    NUMBER_DOUBLE   reduce using rule 37 (expression -> expression MINUS expression .)
    STRING          reduce using rule 37 (expression -> expression MINUS expression .)
    BOOLEAN_TRUE    reduce using rule 37 (expression -> expression MINUS expression .)
    BOOLEAN_FALSE   reduce using rule 37 (expression -> expression MINUS expression .)
    ID              reduce using rule 37 (expression -> expression MINUS expression .)
    LISTOF          reduce using rule 37 (expression -> expression MINUS expression .)
    ARRAYOF         reduce using rule 37 (expression -> expression MINUS expression .)
    READLINE        reduce using rule 37 (expression -> expression MINUS expression .)
    $end            reduce using rule 37 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 37 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 37 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 37 (expression -> expression MINUS expression .)
    ARROW           reduce using rule 37 (expression -> expression MINUS expression .)
    TO              reduce using rule 37 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 37 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43

  ! MULTIPLY        [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 71

    (38) expression -> expression MULTIPLY expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 38 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 38 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 38 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    LESS            reduce using rule 38 (expression -> expression MULTIPLY expression .)
    GREATER         reduce using rule 38 (expression -> expression MULTIPLY expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> expression MULTIPLY expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> expression MULTIPLY expression .)
    EQUALS          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    NOT_EQUALS      reduce using rule 38 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 38 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 38 (expression -> expression MULTIPLY expression .)
    IF              reduce using rule 38 (expression -> expression MULTIPLY expression .)
    VAR             reduce using rule 38 (expression -> expression MULTIPLY expression .)
    VAL             reduce using rule 38 (expression -> expression MULTIPLY expression .)
    FUN             reduce using rule 38 (expression -> expression MULTIPLY expression .)
    CLASS           reduce using rule 38 (expression -> expression MULTIPLY expression .)
    FOR             reduce using rule 38 (expression -> expression MULTIPLY expression .)
    WHEN            reduce using rule 38 (expression -> expression MULTIPLY expression .)
    PRINTLN         reduce using rule 38 (expression -> expression MULTIPLY expression .)
    PRINT           reduce using rule 38 (expression -> expression MULTIPLY expression .)
    RETURN          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    MAPOF           reduce using rule 38 (expression -> expression MULTIPLY expression .)
    LPAREN          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    NUMBER_INT      reduce using rule 38 (expression -> expression MULTIPLY expression .)
    NUMBER_DOUBLE   reduce using rule 38 (expression -> expression MULTIPLY expression .)
    STRING          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    BOOLEAN_TRUE    reduce using rule 38 (expression -> expression MULTIPLY expression .)
    BOOLEAN_FALSE   reduce using rule 38 (expression -> expression MULTIPLY expression .)
    ID              reduce using rule 38 (expression -> expression MULTIPLY expression .)
    LISTOF          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    ARRAYOF         reduce using rule 38 (expression -> expression MULTIPLY expression .)
    READLINE        reduce using rule 38 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 38 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 38 (expression -> expression MULTIPLY expression .)
    ELSE            reduce using rule 38 (expression -> expression MULTIPLY expression .)
    ARROW           reduce using rule 38 (expression -> expression MULTIPLY expression .)
    TO              reduce using rule 38 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 38 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! MULTIPLY        [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 72

    (39) expression -> expression DIVIDE expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    PLUS            reduce using rule 39 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 39 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 39 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 39 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 39 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 39 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 39 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 39 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 39 (expression -> expression DIVIDE expression .)
    NOT_EQUALS      reduce using rule 39 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 39 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 39 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 39 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 39 (expression -> expression DIVIDE expression .)
    VAL             reduce using rule 39 (expression -> expression DIVIDE expression .)
    FUN             reduce using rule 39 (expression -> expression DIVIDE expression .)
    CLASS           reduce using rule 39 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 39 (expression -> expression DIVIDE expression .)
    WHEN            reduce using rule 39 (expression -> expression DIVIDE expression .)
    PRINTLN         reduce using rule 39 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 39 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 39 (expression -> expression DIVIDE expression .)
    MAPOF           reduce using rule 39 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 39 (expression -> expression DIVIDE expression .)
    NUMBER_INT      reduce using rule 39 (expression -> expression DIVIDE expression .)
    NUMBER_DOUBLE   reduce using rule 39 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 39 (expression -> expression DIVIDE expression .)
    BOOLEAN_TRUE    reduce using rule 39 (expression -> expression DIVIDE expression .)
    BOOLEAN_FALSE   reduce using rule 39 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 39 (expression -> expression DIVIDE expression .)
    LISTOF          reduce using rule 39 (expression -> expression DIVIDE expression .)
    ARRAYOF         reduce using rule 39 (expression -> expression DIVIDE expression .)
    READLINE        reduce using rule 39 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 39 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 39 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 39 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 39 (expression -> expression DIVIDE expression .)
    ARROW           reduce using rule 39 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 39 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 39 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! MULTIPLY        [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 73

    (40) expression -> expression LESS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    LESS            reduce using rule 40 (expression -> expression LESS expression .)
    GREATER         reduce using rule 40 (expression -> expression LESS expression .)
    LESS_EQUAL      reduce using rule 40 (expression -> expression LESS expression .)
    GREATER_EQUAL   reduce using rule 40 (expression -> expression LESS expression .)
    EQUALS          reduce using rule 40 (expression -> expression LESS expression .)
    NOT_EQUALS      reduce using rule 40 (expression -> expression LESS expression .)
    AND             reduce using rule 40 (expression -> expression LESS expression .)
    OR              reduce using rule 40 (expression -> expression LESS expression .)
    IF              reduce using rule 40 (expression -> expression LESS expression .)
    VAR             reduce using rule 40 (expression -> expression LESS expression .)
    VAL             reduce using rule 40 (expression -> expression LESS expression .)
    FUN             reduce using rule 40 (expression -> expression LESS expression .)
    CLASS           reduce using rule 40 (expression -> expression LESS expression .)
    FOR             reduce using rule 40 (expression -> expression LESS expression .)
    WHEN            reduce using rule 40 (expression -> expression LESS expression .)
    PRINTLN         reduce using rule 40 (expression -> expression LESS expression .)
    PRINT           reduce using rule 40 (expression -> expression LESS expression .)
    RETURN          reduce using rule 40 (expression -> expression LESS expression .)
    MAPOF           reduce using rule 40 (expression -> expression LESS expression .)
    LPAREN          reduce using rule 40 (expression -> expression LESS expression .)
    NUMBER_INT      reduce using rule 40 (expression -> expression LESS expression .)
    NUMBER_DOUBLE   reduce using rule 40 (expression -> expression LESS expression .)
    STRING          reduce using rule 40 (expression -> expression LESS expression .)
    BOOLEAN_TRUE    reduce using rule 40 (expression -> expression LESS expression .)
    BOOLEAN_FALSE   reduce using rule 40 (expression -> expression LESS expression .)
    ID              reduce using rule 40 (expression -> expression LESS expression .)
    LISTOF          reduce using rule 40 (expression -> expression LESS expression .)
    ARRAYOF         reduce using rule 40 (expression -> expression LESS expression .)
    READLINE        reduce using rule 40 (expression -> expression LESS expression .)
    $end            reduce using rule 40 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 40 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 40 (expression -> expression LESS expression .)
    ELSE            reduce using rule 40 (expression -> expression LESS expression .)
    ARROW           reduce using rule 40 (expression -> expression LESS expression .)
    TO              reduce using rule 40 (expression -> expression LESS expression .)
    COMMA           reduce using rule 40 (expression -> expression LESS expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 74

    (41) expression -> expression GREATER expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    LESS            reduce using rule 41 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 41 (expression -> expression GREATER expression .)
    LESS_EQUAL      reduce using rule 41 (expression -> expression GREATER expression .)
    GREATER_EQUAL   reduce using rule 41 (expression -> expression GREATER expression .)
    EQUALS          reduce using rule 41 (expression -> expression GREATER expression .)
    NOT_EQUALS      reduce using rule 41 (expression -> expression GREATER expression .)
    AND             reduce using rule 41 (expression -> expression GREATER expression .)
    OR              reduce using rule 41 (expression -> expression GREATER expression .)
    IF              reduce using rule 41 (expression -> expression GREATER expression .)
    VAR             reduce using rule 41 (expression -> expression GREATER expression .)
    VAL             reduce using rule 41 (expression -> expression GREATER expression .)
    FUN             reduce using rule 41 (expression -> expression GREATER expression .)
    CLASS           reduce using rule 41 (expression -> expression GREATER expression .)
    FOR             reduce using rule 41 (expression -> expression GREATER expression .)
    WHEN            reduce using rule 41 (expression -> expression GREATER expression .)
    PRINTLN         reduce using rule 41 (expression -> expression GREATER expression .)
    PRINT           reduce using rule 41 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 41 (expression -> expression GREATER expression .)
    MAPOF           reduce using rule 41 (expression -> expression GREATER expression .)
    LPAREN          reduce using rule 41 (expression -> expression GREATER expression .)
    NUMBER_INT      reduce using rule 41 (expression -> expression GREATER expression .)
    NUMBER_DOUBLE   reduce using rule 41 (expression -> expression GREATER expression .)
    STRING          reduce using rule 41 (expression -> expression GREATER expression .)
    BOOLEAN_TRUE    reduce using rule 41 (expression -> expression GREATER expression .)
    BOOLEAN_FALSE   reduce using rule 41 (expression -> expression GREATER expression .)
    ID              reduce using rule 41 (expression -> expression GREATER expression .)
    LISTOF          reduce using rule 41 (expression -> expression GREATER expression .)
    ARRAYOF         reduce using rule 41 (expression -> expression GREATER expression .)
    READLINE        reduce using rule 41 (expression -> expression GREATER expression .)
    $end            reduce using rule 41 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 41 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 41 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 41 (expression -> expression GREATER expression .)
    ARROW           reduce using rule 41 (expression -> expression GREATER expression .)
    TO              reduce using rule 41 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 41 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 41 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 41 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 75

    (42) expression -> expression LESS_EQUAL expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    LESS            reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    GREATER         reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    EQUALS          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUALS      reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    AND             reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    OR              reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    VAR             reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    VAL             reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    FUN             reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    CLASS           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    WHEN            reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    PRINTLN         reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    PRINT           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    RETURN          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    MAPOF           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    LPAREN          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    NUMBER_INT      reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    NUMBER_DOUBLE   reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN_TRUE    reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN_FALSE   reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    ID              reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    LISTOF          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    ARRAYOF         reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    READLINE        reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    RBRACE          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    ARROW           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    TO              reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 76

    (43) expression -> expression GREATER_EQUAL expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    LESS            reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    GREATER         reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    EQUALS          reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUALS      reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    OR              reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    VAR             reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    VAL             reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    FUN             reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    CLASS           reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    WHEN            reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    PRINTLN         reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    PRINT           reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    RETURN          reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    MAPOF           reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    LPAREN          reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    NUMBER_INT      reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    NUMBER_DOUBLE   reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN_TRUE    reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN_FALSE   reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    ID              reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    LISTOF          reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    ARRAYOF         reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    READLINE        reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    RBRACE          reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    ARROW           reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    TO              reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 43 (expression -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43

  ! PLUS            [ reduce using rule 43 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression GREATER_EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 43 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression GREATER_EQUAL expression .) ]
  ! LESS            [ shift and go to state 44 ]
  ! GREATER         [ shift and go to state 45 ]
  ! LESS_EQUAL      [ shift and go to state 46 ]
  ! GREATER_EQUAL   [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 77

    (44) expression -> expression EQUALS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    EQUALS          reduce using rule 44 (expression -> expression EQUALS expression .)
    NOT_EQUALS      reduce using rule 44 (expression -> expression EQUALS expression .)
    AND             reduce using rule 44 (expression -> expression EQUALS expression .)
    OR              reduce using rule 44 (expression -> expression EQUALS expression .)
    IF              reduce using rule 44 (expression -> expression EQUALS expression .)
    VAR             reduce using rule 44 (expression -> expression EQUALS expression .)
    VAL             reduce using rule 44 (expression -> expression EQUALS expression .)
    FUN             reduce using rule 44 (expression -> expression EQUALS expression .)
    CLASS           reduce using rule 44 (expression -> expression EQUALS expression .)
    FOR             reduce using rule 44 (expression -> expression EQUALS expression .)
    WHEN            reduce using rule 44 (expression -> expression EQUALS expression .)
    PRINTLN         reduce using rule 44 (expression -> expression EQUALS expression .)
    PRINT           reduce using rule 44 (expression -> expression EQUALS expression .)
    RETURN          reduce using rule 44 (expression -> expression EQUALS expression .)
    MAPOF           reduce using rule 44 (expression -> expression EQUALS expression .)
    LPAREN          reduce using rule 44 (expression -> expression EQUALS expression .)
    NUMBER_INT      reduce using rule 44 (expression -> expression EQUALS expression .)
    NUMBER_DOUBLE   reduce using rule 44 (expression -> expression EQUALS expression .)
    STRING          reduce using rule 44 (expression -> expression EQUALS expression .)
    BOOLEAN_TRUE    reduce using rule 44 (expression -> expression EQUALS expression .)
    BOOLEAN_FALSE   reduce using rule 44 (expression -> expression EQUALS expression .)
    ID              reduce using rule 44 (expression -> expression EQUALS expression .)
    LISTOF          reduce using rule 44 (expression -> expression EQUALS expression .)
    ARRAYOF         reduce using rule 44 (expression -> expression EQUALS expression .)
    READLINE        reduce using rule 44 (expression -> expression EQUALS expression .)
    $end            reduce using rule 44 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 44 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 44 (expression -> expression EQUALS expression .)
    ELSE            reduce using rule 44 (expression -> expression EQUALS expression .)
    ARROW           reduce using rule 44 (expression -> expression EQUALS expression .)
    TO              reduce using rule 44 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 44 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47

  ! PLUS            [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! LESS            [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! GREATER         [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 44 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 78

    (45) expression -> expression NOT_EQUALS expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    EQUALS          reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    NOT_EQUALS      reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    AND             reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    OR              reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    IF              reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    VAR             reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    VAL             reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    FUN             reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    CLASS           reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    FOR             reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    WHEN            reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    PRINTLN         reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    PRINT           reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    RETURN          reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    MAPOF           reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    LPAREN          reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    NUMBER_INT      reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    NUMBER_DOUBLE   reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    STRING          reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    BOOLEAN_TRUE    reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    BOOLEAN_FALSE   reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    ID              reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    LISTOF          reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    ARRAYOF         reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    READLINE        reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    $end            reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    RPAREN          reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    RBRACE          reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    ELSE            reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    ARROW           reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    TO              reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    COMMA           reduce using rule 45 (expression -> expression NOT_EQUALS expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47

  ! PLUS            [ reduce using rule 45 (expression -> expression NOT_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression NOT_EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 45 (expression -> expression NOT_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS            [ reduce using rule 45 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER         [ reduce using rule 45 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 45 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 45 (expression -> expression NOT_EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NOT_EQUALS      [ shift and go to state 49 ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 79

    (46) expression -> expression AND expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    AND             reduce using rule 46 (expression -> expression AND expression .)
    OR              reduce using rule 46 (expression -> expression AND expression .)
    IF              reduce using rule 46 (expression -> expression AND expression .)
    VAR             reduce using rule 46 (expression -> expression AND expression .)
    VAL             reduce using rule 46 (expression -> expression AND expression .)
    FUN             reduce using rule 46 (expression -> expression AND expression .)
    CLASS           reduce using rule 46 (expression -> expression AND expression .)
    FOR             reduce using rule 46 (expression -> expression AND expression .)
    WHEN            reduce using rule 46 (expression -> expression AND expression .)
    PRINTLN         reduce using rule 46 (expression -> expression AND expression .)
    PRINT           reduce using rule 46 (expression -> expression AND expression .)
    RETURN          reduce using rule 46 (expression -> expression AND expression .)
    MAPOF           reduce using rule 46 (expression -> expression AND expression .)
    LPAREN          reduce using rule 46 (expression -> expression AND expression .)
    NUMBER_INT      reduce using rule 46 (expression -> expression AND expression .)
    NUMBER_DOUBLE   reduce using rule 46 (expression -> expression AND expression .)
    STRING          reduce using rule 46 (expression -> expression AND expression .)
    BOOLEAN_TRUE    reduce using rule 46 (expression -> expression AND expression .)
    BOOLEAN_FALSE   reduce using rule 46 (expression -> expression AND expression .)
    ID              reduce using rule 46 (expression -> expression AND expression .)
    LISTOF          reduce using rule 46 (expression -> expression AND expression .)
    ARRAYOF         reduce using rule 46 (expression -> expression AND expression .)
    READLINE        reduce using rule 46 (expression -> expression AND expression .)
    $end            reduce using rule 46 (expression -> expression AND expression .)
    RPAREN          reduce using rule 46 (expression -> expression AND expression .)
    RBRACE          reduce using rule 46 (expression -> expression AND expression .)
    ELSE            reduce using rule 46 (expression -> expression AND expression .)
    ARROW           reduce using rule 46 (expression -> expression AND expression .)
    TO              reduce using rule 46 (expression -> expression AND expression .)
    COMMA           reduce using rule 46 (expression -> expression AND expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49

  ! PLUS            [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! NOT_EQUALS      [ reduce using rule 46 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 50 ]
  ! OR              [ shift and go to state 51 ]


state 80

    (47) expression -> expression OR expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    OR              reduce using rule 47 (expression -> expression OR expression .)
    IF              reduce using rule 47 (expression -> expression OR expression .)
    VAR             reduce using rule 47 (expression -> expression OR expression .)
    VAL             reduce using rule 47 (expression -> expression OR expression .)
    FUN             reduce using rule 47 (expression -> expression OR expression .)
    CLASS           reduce using rule 47 (expression -> expression OR expression .)
    FOR             reduce using rule 47 (expression -> expression OR expression .)
    WHEN            reduce using rule 47 (expression -> expression OR expression .)
    PRINTLN         reduce using rule 47 (expression -> expression OR expression .)
    PRINT           reduce using rule 47 (expression -> expression OR expression .)
    RETURN          reduce using rule 47 (expression -> expression OR expression .)
    MAPOF           reduce using rule 47 (expression -> expression OR expression .)
    LPAREN          reduce using rule 47 (expression -> expression OR expression .)
    NUMBER_INT      reduce using rule 47 (expression -> expression OR expression .)
    NUMBER_DOUBLE   reduce using rule 47 (expression -> expression OR expression .)
    STRING          reduce using rule 47 (expression -> expression OR expression .)
    BOOLEAN_TRUE    reduce using rule 47 (expression -> expression OR expression .)
    BOOLEAN_FALSE   reduce using rule 47 (expression -> expression OR expression .)
    ID              reduce using rule 47 (expression -> expression OR expression .)
    LISTOF          reduce using rule 47 (expression -> expression OR expression .)
    ARRAYOF         reduce using rule 47 (expression -> expression OR expression .)
    READLINE        reduce using rule 47 (expression -> expression OR expression .)
    $end            reduce using rule 47 (expression -> expression OR expression .)
    RPAREN          reduce using rule 47 (expression -> expression OR expression .)
    RBRACE          reduce using rule 47 (expression -> expression OR expression .)
    ELSE            reduce using rule 47 (expression -> expression OR expression .)
    ARROW           reduce using rule 47 (expression -> expression OR expression .)
    TO              reduce using rule 47 (expression -> expression OR expression .)
    COMMA           reduce using rule 47 (expression -> expression OR expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50

  ! PLUS            [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 47 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 51 ]


state 81

    (15) declaration -> VAR ID ASSIGN . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 101

state 82

    (16) declaration -> VAL ID ASSIGN . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 102

state 83

    (17) function_def -> FUN ID LPAREN . param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> FUN ID LPAREN . param_list RPAREN block
    (84) function_def_no_params_no_return -> FUN ID LPAREN . RPAREN block
    (18) param_list_opt -> . param_list
    (19) param_list_opt -> .
    (20) param_list -> . param_list COMMA param
    (21) param_list -> . param
    (22) param -> . ID COLON type

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 105
    ID              shift and go to state 103

  ! RPAREN          [ reduce using rule 19 (param_list_opt -> .) ]

    param_list_opt                 shift and go to state 104
    param_list                     shift and go to state 106
    param                          shift and go to state 107

state 84

    (71) class_def -> CLASS ID LBRACE . class_body RBRACE
    (72) class_body -> . class_body class_member
    (73) class_body -> . class_member
    (74) class_body -> .
    (75) class_member -> . property_def
    (76) class_member -> . method_def
    (77) property_def -> . VAR ID COLON type
    (78) property_def -> . VAL ID COLON type
    (79) property_def -> . VAR ID COLON type ASSIGN expression
    (80) property_def -> . VAL ID COLON type ASSIGN expression
    (81) method_def -> . FUN ID LPAREN param_list_opt RPAREN block

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
    RBRACE          reduce using rule 74 (class_body -> .)
    VAR             shift and go to state 112
    VAL             shift and go to state 113
    FUN             shift and go to state 114

  ! VAR             [ reduce using rule 74 (class_body -> .) ]
  ! VAL             [ reduce using rule 74 (class_body -> .) ]
  ! FUN             [ reduce using rule 74 (class_body -> .) ]

    class_body                     shift and go to state 108
    class_member                   shift and go to state 109
    property_def                   shift and go to state 110
    method_def                     shift and go to state 111

state 85

    (29) for_loop -> FOR LPAREN ID . IN expression RPAREN loop_body

    IN              shift and go to state 115


state 86

    (64) when_stmt -> WHEN LPAREN expression . RPAREN LBRACE when_branches RBRACE
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          shift and go to state 116
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 87

    (69) when_stmt -> WHEN LBRACE when_branches . RBRACE
    (65) when_branches -> when_branches . when_branch
    (67) when_branch -> . expression ARROW statement_list
    (68) when_branch -> . ELSE ARROW statement_list
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    RBRACE          shift and go to state 117
    ELSE            shift and go to state 90
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    when_branch                    shift and go to state 118
    expression                     shift and go to state 89

state 88

    (66) when_branches -> when_branch .

    RBRACE          reduce using rule 66 (when_branches -> when_branch .)
    ELSE            reduce using rule 66 (when_branches -> when_branch .)
    MAPOF           reduce using rule 66 (when_branches -> when_branch .)
    MINUS           reduce using rule 66 (when_branches -> when_branch .)
    LPAREN          reduce using rule 66 (when_branches -> when_branch .)
    NUMBER_INT      reduce using rule 66 (when_branches -> when_branch .)
    NUMBER_DOUBLE   reduce using rule 66 (when_branches -> when_branch .)
    STRING          reduce using rule 66 (when_branches -> when_branch .)
    BOOLEAN_TRUE    reduce using rule 66 (when_branches -> when_branch .)
    BOOLEAN_FALSE   reduce using rule 66 (when_branches -> when_branch .)
    ID              reduce using rule 66 (when_branches -> when_branch .)
    LISTOF          reduce using rule 66 (when_branches -> when_branch .)
    ARRAYOF         reduce using rule 66 (when_branches -> when_branch .)
    READLINE        reduce using rule 66 (when_branches -> when_branch .)


state 89

    (67) when_branch -> expression . ARROW statement_list
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    ARROW           shift and go to state 119
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 90

    (68) when_branch -> ELSE . ARROW statement_list

    ARROW           shift and go to state 120


state 91

    (56) print_stmt -> PRINTLN LPAREN expression . RPAREN
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          shift and go to state 121
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 92

    (57) print_stmt -> PRINT LPAREN expression . RPAREN
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          shift and go to state 122
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 93

    (32) expression -> MAPOF LPAREN map_entries . RPAREN
    (33) map_entries -> map_entries . COMMA map_entry

    RPAREN          shift and go to state 123
    COMMA           shift and go to state 124


state 94

    (34) map_entries -> map_entry .

    RPAREN          reduce using rule 34 (map_entries -> map_entry .)
    COMMA           reduce using rule 34 (map_entries -> map_entry .)


state 95

    (35) map_entry -> expression . TO expression
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    TO              shift and go to state 125
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 96

    (60) expression -> LISTOF LPAREN expression_list . RPAREN
    (61) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 126
    COMMA           shift and go to state 127


state 97

    (62) expression_list -> expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          reduce using rule 62 (expression_list -> expression .)
    COMMA           reduce using rule 62 (expression_list -> expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 98

    (82) expression -> ARRAYOF LPAREN expression_list . RPAREN
    (61) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 128
    COMMA           shift and go to state 127


state 99

    (85) expression -> READLINE LPAREN RPAREN .

    PLUS            reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    MINUS           reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    MULTIPLY        reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    DIVIDE          reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    LESS            reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    GREATER         reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    EQUALS          reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    NOT_EQUALS      reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    AND             reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    OR              reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    IF              reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    VAR             reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    VAL             reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    FUN             reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    CLASS           reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    FOR             reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    WHEN            reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    PRINTLN         reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    PRINT           reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    RETURN          reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    MAPOF           reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    LPAREN          reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    NUMBER_INT      reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    NUMBER_DOUBLE   reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    STRING          reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    BOOLEAN_TRUE    reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    BOOLEAN_FALSE   reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    ID              reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    LISTOF          reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    ARRAYOF         reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    READLINE        reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    $end            reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    RPAREN          reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    RBRACE          reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    ELSE            reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    ARROW           reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    TO              reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)
    COMMA           reduce using rule 85 (expression -> READLINE LPAREN RPAREN .)


state 100

    (83) statement -> IF LPAREN expression RPAREN . block ELSE block
    (58) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 130

    block                          shift and go to state 129

state 101

    (15) declaration -> VAR ID ASSIGN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    IF              reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    VAR             reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    VAL             reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    FUN             reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    CLASS           reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    FOR             reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    WHEN            reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    PRINTLN         reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    PRINT           reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    RETURN          reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    MAPOF           reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    LPAREN          reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    NUMBER_INT      reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    NUMBER_DOUBLE   reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    STRING          reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    BOOLEAN_TRUE    reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    BOOLEAN_FALSE   reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    ID              reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    LISTOF          reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    ARRAYOF         reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    READLINE        reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    $end            reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    RBRACE          reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    ELSE            reduce using rule 15 (declaration -> VAR ID ASSIGN expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51

  ! MINUS           [ reduce using rule 15 (declaration -> VAR ID ASSIGN expression .) ]


state 102

    (16) declaration -> VAL ID ASSIGN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    IF              reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    VAR             reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    VAL             reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    FUN             reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    CLASS           reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    FOR             reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    WHEN            reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    PRINTLN         reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    PRINT           reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    RETURN          reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    MAPOF           reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    LPAREN          reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    NUMBER_INT      reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    NUMBER_DOUBLE   reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    STRING          reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    BOOLEAN_TRUE    reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    BOOLEAN_FALSE   reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    ID              reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    LISTOF          reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    ARRAYOF         reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    READLINE        reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    $end            reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    RBRACE          reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    ELSE            reduce using rule 16 (declaration -> VAL ID ASSIGN expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51

  ! MINUS           [ reduce using rule 16 (declaration -> VAL ID ASSIGN expression .) ]


state 103

    (22) param -> ID . COLON type

    COLON           shift and go to state 131


state 104

    (17) function_def -> FUN ID LPAREN param_list_opt . RPAREN COLON type block

    RPAREN          shift and go to state 132


state 105

    (84) function_def_no_params_no_return -> FUN ID LPAREN RPAREN . block
    (58) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 130

    block                          shift and go to state 133

state 106

    (70) function_def_params_no_return -> FUN ID LPAREN param_list . RPAREN block
    (18) param_list_opt -> param_list .
    (20) param_list -> param_list . COMMA param

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 134
    COMMA           shift and go to state 135

  ! RPAREN          [ reduce using rule 18 (param_list_opt -> param_list .) ]


state 107

    (21) param_list -> param .

    RPAREN          reduce using rule 21 (param_list -> param .)
    COMMA           reduce using rule 21 (param_list -> param .)


state 108

    (71) class_def -> CLASS ID LBRACE class_body . RBRACE
    (72) class_body -> class_body . class_member
    (75) class_member -> . property_def
    (76) class_member -> . method_def
    (77) property_def -> . VAR ID COLON type
    (78) property_def -> . VAL ID COLON type
    (79) property_def -> . VAR ID COLON type ASSIGN expression
    (80) property_def -> . VAL ID COLON type ASSIGN expression
    (81) method_def -> . FUN ID LPAREN param_list_opt RPAREN block

    RBRACE          shift and go to state 136
    VAR             shift and go to state 112
    VAL             shift and go to state 113
    FUN             shift and go to state 114

    class_member                   shift and go to state 137
    property_def                   shift and go to state 110
    method_def                     shift and go to state 111

state 109

    (73) class_body -> class_member .

    RBRACE          reduce using rule 73 (class_body -> class_member .)
    VAR             reduce using rule 73 (class_body -> class_member .)
    VAL             reduce using rule 73 (class_body -> class_member .)
    FUN             reduce using rule 73 (class_body -> class_member .)


state 110

    (75) class_member -> property_def .

    RBRACE          reduce using rule 75 (class_member -> property_def .)
    VAR             reduce using rule 75 (class_member -> property_def .)
    VAL             reduce using rule 75 (class_member -> property_def .)
    FUN             reduce using rule 75 (class_member -> property_def .)


state 111

    (76) class_member -> method_def .

    RBRACE          reduce using rule 76 (class_member -> method_def .)
    VAR             reduce using rule 76 (class_member -> method_def .)
    VAL             reduce using rule 76 (class_member -> method_def .)
    FUN             reduce using rule 76 (class_member -> method_def .)


state 112

    (77) property_def -> VAR . ID COLON type
    (79) property_def -> VAR . ID COLON type ASSIGN expression

    ID              shift and go to state 138


state 113

    (78) property_def -> VAL . ID COLON type
    (80) property_def -> VAL . ID COLON type ASSIGN expression

    ID              shift and go to state 139


state 114

    (81) method_def -> FUN . ID LPAREN param_list_opt RPAREN block

    ID              shift and go to state 140


state 115

    (29) for_loop -> FOR LPAREN ID IN . expression RPAREN loop_body
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 141

state 116

    (64) when_stmt -> WHEN LPAREN expression RPAREN . LBRACE when_branches RBRACE

    LBRACE          shift and go to state 142


state 117

    (69) when_stmt -> WHEN LBRACE when_branches RBRACE .

    IF              reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    VAR             reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    VAL             reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    FUN             reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    CLASS           reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    FOR             reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    WHEN            reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    PRINTLN         reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    PRINT           reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    RETURN          reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    MAPOF           reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    MINUS           reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    LPAREN          reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    NUMBER_INT      reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    NUMBER_DOUBLE   reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    STRING          reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    BOOLEAN_TRUE    reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    BOOLEAN_FALSE   reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    ID              reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    LISTOF          reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    ARRAYOF         reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    READLINE        reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    $end            reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    RBRACE          reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    ELSE            reduce using rule 69 (when_stmt -> WHEN LBRACE when_branches RBRACE .)


state 118

    (65) when_branches -> when_branches when_branch .

    RBRACE          reduce using rule 65 (when_branches -> when_branches when_branch .)
    ELSE            reduce using rule 65 (when_branches -> when_branches when_branch .)
    MAPOF           reduce using rule 65 (when_branches -> when_branches when_branch .)
    MINUS           reduce using rule 65 (when_branches -> when_branches when_branch .)
    LPAREN          reduce using rule 65 (when_branches -> when_branches when_branch .)
    NUMBER_INT      reduce using rule 65 (when_branches -> when_branches when_branch .)
    NUMBER_DOUBLE   reduce using rule 65 (when_branches -> when_branches when_branch .)
    STRING          reduce using rule 65 (when_branches -> when_branches when_branch .)
    BOOLEAN_TRUE    reduce using rule 65 (when_branches -> when_branches when_branch .)
    BOOLEAN_FALSE   reduce using rule 65 (when_branches -> when_branches when_branch .)
    ID              reduce using rule 65 (when_branches -> when_branches when_branch .)
    LISTOF          reduce using rule 65 (when_branches -> when_branches when_branch .)
    ARRAYOF         reduce using rule 65 (when_branches -> when_branches when_branch .)
    READLINE        reduce using rule 65 (when_branches -> when_branches when_branch .)


state 119

    (67) when_branch -> expression ARROW . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . function_def_params_no_return
    (8) statement -> . function_def_no_params_no_return
    (9) statement -> . class_def
    (10) statement -> . for_loop
    (11) statement -> . when_stmt
    (12) statement -> . print_stmt
    (13) statement -> . return_stmt
    (14) statement -> . expression_stmt
    (83) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) declaration -> . VAR ID ASSIGN expression
    (16) declaration -> . VAL ID ASSIGN expression
    (17) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> . FUN ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> . FUN ID LPAREN RPAREN block
    (71) class_def -> . CLASS ID LBRACE class_body RBRACE
    (29) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (64) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (56) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (57) print_stmt -> . PRINT LPAREN expression RPAREN
    (28) return_stmt -> . RETURN expression
    (59) expression_stmt -> . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 4 (statement_list -> .)
    ELSE            reduce using rule 4 (statement_list -> .)
    IF              shift and go to state 14
    VAR             shift and go to state 17
    VAL             shift and go to state 19
    FUN             shift and go to state 20
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

  ! IF              [ reduce using rule 4 (statement_list -> .) ]
  ! VAR             [ reduce using rule 4 (statement_list -> .) ]
  ! VAL             [ reduce using rule 4 (statement_list -> .) ]
  ! FUN             [ reduce using rule 4 (statement_list -> .) ]
  ! CLASS           [ reduce using rule 4 (statement_list -> .) ]
  ! FOR             [ reduce using rule 4 (statement_list -> .) ]
  ! WHEN            [ reduce using rule 4 (statement_list -> .) ]
  ! PRINTLN         [ reduce using rule 4 (statement_list -> .) ]
  ! PRINT           [ reduce using rule 4 (statement_list -> .) ]
  ! RETURN          [ reduce using rule 4 (statement_list -> .) ]
  ! MAPOF           [ reduce using rule 4 (statement_list -> .) ]
  ! MINUS           [ reduce using rule 4 (statement_list -> .) ]
  ! LPAREN          [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_INT      [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 4 (statement_list -> .) ]
  ! STRING          [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 4 (statement_list -> .) ]
  ! ID              [ reduce using rule 4 (statement_list -> .) ]
  ! LISTOF          [ reduce using rule 4 (statement_list -> .) ]
  ! ARRAYOF         [ reduce using rule 4 (statement_list -> .) ]
  ! READLINE        [ reduce using rule 4 (statement_list -> .) ]

    expression                     shift and go to state 16
    statement_list                 shift and go to state 143
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    function_def_params_no_return  shift and go to state 6
    function_def_no_params_no_return shift and go to state 7
    class_def                      shift and go to state 8
    for_loop                       shift and go to state 9
    when_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    expression_stmt                shift and go to state 13

state 120

    (68) when_branch -> ELSE ARROW . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . function_def_params_no_return
    (8) statement -> . function_def_no_params_no_return
    (9) statement -> . class_def
    (10) statement -> . for_loop
    (11) statement -> . when_stmt
    (12) statement -> . print_stmt
    (13) statement -> . return_stmt
    (14) statement -> . expression_stmt
    (83) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) declaration -> . VAR ID ASSIGN expression
    (16) declaration -> . VAL ID ASSIGN expression
    (17) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> . FUN ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> . FUN ID LPAREN RPAREN block
    (71) class_def -> . CLASS ID LBRACE class_body RBRACE
    (29) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (64) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (56) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (57) print_stmt -> . PRINT LPAREN expression RPAREN
    (28) return_stmt -> . RETURN expression
    (59) expression_stmt -> . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 4 (statement_list -> .)
    ELSE            reduce using rule 4 (statement_list -> .)
    IF              shift and go to state 14
    VAR             shift and go to state 17
    VAL             shift and go to state 19
    FUN             shift and go to state 20
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

  ! IF              [ reduce using rule 4 (statement_list -> .) ]
  ! VAR             [ reduce using rule 4 (statement_list -> .) ]
  ! VAL             [ reduce using rule 4 (statement_list -> .) ]
  ! FUN             [ reduce using rule 4 (statement_list -> .) ]
  ! CLASS           [ reduce using rule 4 (statement_list -> .) ]
  ! FOR             [ reduce using rule 4 (statement_list -> .) ]
  ! WHEN            [ reduce using rule 4 (statement_list -> .) ]
  ! PRINTLN         [ reduce using rule 4 (statement_list -> .) ]
  ! PRINT           [ reduce using rule 4 (statement_list -> .) ]
  ! RETURN          [ reduce using rule 4 (statement_list -> .) ]
  ! MAPOF           [ reduce using rule 4 (statement_list -> .) ]
  ! MINUS           [ reduce using rule 4 (statement_list -> .) ]
  ! LPAREN          [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_INT      [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 4 (statement_list -> .) ]
  ! STRING          [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 4 (statement_list -> .) ]
  ! ID              [ reduce using rule 4 (statement_list -> .) ]
  ! LISTOF          [ reduce using rule 4 (statement_list -> .) ]
  ! ARRAYOF         [ reduce using rule 4 (statement_list -> .) ]
  ! READLINE        [ reduce using rule 4 (statement_list -> .) ]

    statement_list                 shift and go to state 144
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    function_def_params_no_return  shift and go to state 6
    function_def_no_params_no_return shift and go to state 7
    class_def                      shift and go to state 8
    for_loop                       shift and go to state 9
    when_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    expression_stmt                shift and go to state 13
    expression                     shift and go to state 16

state 121

    (56) print_stmt -> PRINTLN LPAREN expression RPAREN .

    IF              reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    VAR             reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    VAL             reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    FUN             reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    CLASS           reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    FOR             reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    WHEN            reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    PRINT           reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    RETURN          reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    MAPOF           reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    MINUS           reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    LPAREN          reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    NUMBER_DOUBLE   reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    STRING          reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    BOOLEAN_TRUE    reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    BOOLEAN_FALSE   reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    ID              reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    LISTOF          reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    ARRAYOF         reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    READLINE        reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    RBRACE          reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    ELSE            reduce using rule 56 (print_stmt -> PRINTLN LPAREN expression RPAREN .)


state 122

    (57) print_stmt -> PRINT LPAREN expression RPAREN .

    IF              reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    VAR             reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    VAL             reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    FUN             reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    CLASS           reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    FOR             reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    WHEN            reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    RETURN          reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    MAPOF           reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    MINUS           reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    LPAREN          reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    NUMBER_DOUBLE   reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    STRING          reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    BOOLEAN_TRUE    reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    BOOLEAN_FALSE   reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    ID              reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    LISTOF          reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    ARRAYOF         reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    READLINE        reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    RBRACE          reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)
    ELSE            reduce using rule 57 (print_stmt -> PRINT LPAREN expression RPAREN .)


state 123

    (32) expression -> MAPOF LPAREN map_entries RPAREN .

    PLUS            reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    MINUS           reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    MULTIPLY        reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    LESS            reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    GREATER         reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    LESS_EQUAL      reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    GREATER_EQUAL   reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    EQUALS          reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    NOT_EQUALS      reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    AND             reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    OR              reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    IF              reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    VAR             reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    VAL             reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    FUN             reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    CLASS           reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    FOR             reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    WHEN            reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    PRINTLN         reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    PRINT           reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    RETURN          reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    MAPOF           reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    LPAREN          reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    NUMBER_INT      reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    NUMBER_DOUBLE   reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    STRING          reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    BOOLEAN_TRUE    reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    BOOLEAN_FALSE   reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    ID              reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    LISTOF          reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    ARRAYOF         reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    READLINE        reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    $end            reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    RPAREN          reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    RBRACE          reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    ELSE            reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    ARROW           reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    TO              reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)
    COMMA           reduce using rule 32 (expression -> MAPOF LPAREN map_entries RPAREN .)


state 124

    (33) map_entries -> map_entries COMMA . map_entry
    (35) map_entry -> . expression TO expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    map_entry                      shift and go to state 145
    expression                     shift and go to state 95

state 125

    (35) map_entry -> expression TO . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 146

state 126

    (60) expression -> LISTOF LPAREN expression_list RPAREN .

    PLUS            reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    MULTIPLY        reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    LESS            reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    GREATER         reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    LESS_EQUAL      reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    GREATER_EQUAL   reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    AND             reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    OR              reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    IF              reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    VAR             reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    VAL             reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    FUN             reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    CLASS           reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    FOR             reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    WHEN            reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    PRINTLN         reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    PRINT           reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    RETURN          reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    MAPOF           reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    NUMBER_INT      reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    NUMBER_DOUBLE   reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    STRING          reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    BOOLEAN_TRUE    reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    BOOLEAN_FALSE   reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    ID              reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    LISTOF          reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    ARRAYOF         reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    READLINE        reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    $end            reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    ARROW           reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    TO              reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 60 (expression -> LISTOF LPAREN expression_list RPAREN .)


state 127

    (61) expression_list -> expression_list COMMA . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 147

state 128

    (82) expression -> ARRAYOF LPAREN expression_list RPAREN .

    PLUS            reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    MULTIPLY        reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    LESS            reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    GREATER         reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    LESS_EQUAL      reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    GREATER_EQUAL   reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    AND             reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    OR              reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    IF              reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    VAR             reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    VAL             reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    FUN             reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    CLASS           reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    FOR             reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    WHEN            reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    PRINTLN         reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    PRINT           reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    RETURN          reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    MAPOF           reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    NUMBER_INT      reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    NUMBER_DOUBLE   reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    STRING          reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    BOOLEAN_TRUE    reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    BOOLEAN_FALSE   reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    ID              reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    LISTOF          reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    ARRAYOF         reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    READLINE        reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    $end            reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    ARROW           reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    TO              reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 82 (expression -> ARRAYOF LPAREN expression_list RPAREN .)


state 129

    (83) statement -> IF LPAREN expression RPAREN block . ELSE block

    ELSE            shift and go to state 148


state 130

    (58) block -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . function_def_params_no_return
    (8) statement -> . function_def_no_params_no_return
    (9) statement -> . class_def
    (10) statement -> . for_loop
    (11) statement -> . when_stmt
    (12) statement -> . print_stmt
    (13) statement -> . return_stmt
    (14) statement -> . expression_stmt
    (83) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) declaration -> . VAR ID ASSIGN expression
    (16) declaration -> . VAL ID ASSIGN expression
    (17) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> . FUN ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> . FUN ID LPAREN RPAREN block
    (71) class_def -> . CLASS ID LBRACE class_body RBRACE
    (29) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (64) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (56) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (57) print_stmt -> . PRINT LPAREN expression RPAREN
    (28) return_stmt -> . RETURN expression
    (59) expression_stmt -> . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 4 (statement_list -> .)
    IF              shift and go to state 14
    VAR             shift and go to state 17
    VAL             shift and go to state 19
    FUN             shift and go to state 20
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

  ! IF              [ reduce using rule 4 (statement_list -> .) ]
  ! VAR             [ reduce using rule 4 (statement_list -> .) ]
  ! VAL             [ reduce using rule 4 (statement_list -> .) ]
  ! FUN             [ reduce using rule 4 (statement_list -> .) ]
  ! CLASS           [ reduce using rule 4 (statement_list -> .) ]
  ! FOR             [ reduce using rule 4 (statement_list -> .) ]
  ! WHEN            [ reduce using rule 4 (statement_list -> .) ]
  ! PRINTLN         [ reduce using rule 4 (statement_list -> .) ]
  ! PRINT           [ reduce using rule 4 (statement_list -> .) ]
  ! RETURN          [ reduce using rule 4 (statement_list -> .) ]
  ! MAPOF           [ reduce using rule 4 (statement_list -> .) ]
  ! MINUS           [ reduce using rule 4 (statement_list -> .) ]
  ! LPAREN          [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_INT      [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 4 (statement_list -> .) ]
  ! STRING          [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 4 (statement_list -> .) ]
  ! ID              [ reduce using rule 4 (statement_list -> .) ]
  ! LISTOF          [ reduce using rule 4 (statement_list -> .) ]
  ! ARRAYOF         [ reduce using rule 4 (statement_list -> .) ]
  ! READLINE        [ reduce using rule 4 (statement_list -> .) ]

    statement_list                 shift and go to state 149
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    function_def_params_no_return  shift and go to state 6
    function_def_no_params_no_return shift and go to state 7
    class_def                      shift and go to state 8
    for_loop                       shift and go to state 9
    when_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    expression_stmt                shift and go to state 13
    expression                     shift and go to state 16

state 131

    (22) param -> ID COLON . type
    (23) type -> . TYPE_INT
    (24) type -> . TYPE_DOUBLE
    (25) type -> . TYPE_BOOLEAN
    (26) type -> . TYPE_STRING
    (27) type -> . ID

    TYPE_INT        shift and go to state 152
    TYPE_DOUBLE     shift and go to state 153
    TYPE_BOOLEAN    shift and go to state 154
    TYPE_STRING     shift and go to state 155
    ID              shift and go to state 150

    type                           shift and go to state 151

state 132

    (17) function_def -> FUN ID LPAREN param_list_opt RPAREN . COLON type block

    COLON           shift and go to state 156


state 133

    (84) function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .

    IF              reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    VAR             reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    VAL             reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    FUN             reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    CLASS           reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    FOR             reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    WHEN            reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    PRINTLN         reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    PRINT           reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    RETURN          reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    MAPOF           reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    MINUS           reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    LPAREN          reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    NUMBER_INT      reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    NUMBER_DOUBLE   reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    STRING          reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    BOOLEAN_TRUE    reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    BOOLEAN_FALSE   reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    ID              reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    LISTOF          reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    ARRAYOF         reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    READLINE        reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    $end            reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    RBRACE          reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)
    ELSE            reduce using rule 84 (function_def_no_params_no_return -> FUN ID LPAREN RPAREN block .)


state 134

    (70) function_def_params_no_return -> FUN ID LPAREN param_list RPAREN . block
    (58) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 130

    block                          shift and go to state 157

state 135

    (20) param_list -> param_list COMMA . param
    (22) param -> . ID COLON type

    ID              shift and go to state 103

    param                          shift and go to state 158

state 136

    (71) class_def -> CLASS ID LBRACE class_body RBRACE .

    IF              reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    VAR             reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    VAL             reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    FUN             reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    CLASS           reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    FOR             reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    WHEN            reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    PRINTLN         reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    PRINT           reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    RETURN          reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    MAPOF           reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    MINUS           reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    LPAREN          reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    NUMBER_INT      reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    NUMBER_DOUBLE   reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    STRING          reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    BOOLEAN_TRUE    reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    BOOLEAN_FALSE   reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    ID              reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    LISTOF          reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    ARRAYOF         reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    READLINE        reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    ELSE            reduce using rule 71 (class_def -> CLASS ID LBRACE class_body RBRACE .)


state 137

    (72) class_body -> class_body class_member .

    RBRACE          reduce using rule 72 (class_body -> class_body class_member .)
    VAR             reduce using rule 72 (class_body -> class_body class_member .)
    VAL             reduce using rule 72 (class_body -> class_body class_member .)
    FUN             reduce using rule 72 (class_body -> class_body class_member .)


state 138

    (77) property_def -> VAR ID . COLON type
    (79) property_def -> VAR ID . COLON type ASSIGN expression

    COLON           shift and go to state 159


state 139

    (78) property_def -> VAL ID . COLON type
    (80) property_def -> VAL ID . COLON type ASSIGN expression

    COLON           shift and go to state 160


state 140

    (81) method_def -> FUN ID . LPAREN param_list_opt RPAREN block

    LPAREN          shift and go to state 161


state 141

    (29) for_loop -> FOR LPAREN ID IN expression . RPAREN loop_body
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          shift and go to state 162
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 142

    (64) when_stmt -> WHEN LPAREN expression RPAREN LBRACE . when_branches RBRACE
    (65) when_branches -> . when_branches when_branch
    (66) when_branches -> . when_branch
    (67) when_branch -> . expression ARROW statement_list
    (68) when_branch -> . ELSE ARROW statement_list
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    ELSE            shift and go to state 90
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 89
    when_branches                  shift and go to state 163
    when_branch                    shift and go to state 88

state 143

    (67) when_branch -> expression ARROW statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . function_def_params_no_return
    (8) statement -> . function_def_no_params_no_return
    (9) statement -> . class_def
    (10) statement -> . for_loop
    (11) statement -> . when_stmt
    (12) statement -> . print_stmt
    (13) statement -> . return_stmt
    (14) statement -> . expression_stmt
    (83) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) declaration -> . VAR ID ASSIGN expression
    (16) declaration -> . VAL ID ASSIGN expression
    (17) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> . FUN ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> . FUN ID LPAREN RPAREN block
    (71) class_def -> . CLASS ID LBRACE class_body RBRACE
    (29) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (64) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (56) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (57) print_stmt -> . PRINT LPAREN expression RPAREN
    (28) return_stmt -> . RETURN expression
    (59) expression_stmt -> . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 67 (when_branch -> expression ARROW statement_list .)
    ELSE            reduce using rule 67 (when_branch -> expression ARROW statement_list .)
    IF              shift and go to state 14
    VAR             shift and go to state 17
    VAL             shift and go to state 19
    FUN             shift and go to state 20
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

  ! MAPOF           [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! MINUS           [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! LPAREN          [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! NUMBER_INT      [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! STRING          [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! ID              [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! LISTOF          [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! ARRAYOF         [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]
  ! READLINE        [ reduce using rule 67 (when_branch -> expression ARROW statement_list .) ]

    expression                     shift and go to state 16
    statement                      shift and go to state 37
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    function_def_params_no_return  shift and go to state 6
    function_def_no_params_no_return shift and go to state 7
    class_def                      shift and go to state 8
    for_loop                       shift and go to state 9
    when_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    expression_stmt                shift and go to state 13

state 144

    (68) when_branch -> ELSE ARROW statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . function_def_params_no_return
    (8) statement -> . function_def_no_params_no_return
    (9) statement -> . class_def
    (10) statement -> . for_loop
    (11) statement -> . when_stmt
    (12) statement -> . print_stmt
    (13) statement -> . return_stmt
    (14) statement -> . expression_stmt
    (83) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) declaration -> . VAR ID ASSIGN expression
    (16) declaration -> . VAL ID ASSIGN expression
    (17) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> . FUN ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> . FUN ID LPAREN RPAREN block
    (71) class_def -> . CLASS ID LBRACE class_body RBRACE
    (29) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (64) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (56) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (57) print_stmt -> . PRINT LPAREN expression RPAREN
    (28) return_stmt -> . RETURN expression
    (59) expression_stmt -> . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 68 (when_branch -> ELSE ARROW statement_list .)
    ELSE            reduce using rule 68 (when_branch -> ELSE ARROW statement_list .)
    IF              shift and go to state 14
    VAR             shift and go to state 17
    VAL             shift and go to state 19
    FUN             shift and go to state 20
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

  ! MAPOF           [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! MINUS           [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! LPAREN          [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! NUMBER_INT      [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! STRING          [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! ID              [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! LISTOF          [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! ARRAYOF         [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]
  ! READLINE        [ reduce using rule 68 (when_branch -> ELSE ARROW statement_list .) ]

    statement                      shift and go to state 37
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    function_def_params_no_return  shift and go to state 6
    function_def_no_params_no_return shift and go to state 7
    class_def                      shift and go to state 8
    for_loop                       shift and go to state 9
    when_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    expression_stmt                shift and go to state 13
    expression                     shift and go to state 16

state 145

    (33) map_entries -> map_entries COMMA map_entry .

    RPAREN          reduce using rule 33 (map_entries -> map_entries COMMA map_entry .)
    COMMA           reduce using rule 33 (map_entries -> map_entries COMMA map_entry .)


state 146

    (35) map_entry -> expression TO expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          reduce using rule 35 (map_entry -> expression TO expression .)
    COMMA           reduce using rule 35 (map_entry -> expression TO expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 147

    (61) expression_list -> expression_list COMMA expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RPAREN          reduce using rule 61 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 61 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 148

    (83) statement -> IF LPAREN expression RPAREN block ELSE . block
    (58) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 130

    block                          shift and go to state 164

state 149

    (58) block -> LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . function_def_params_no_return
    (8) statement -> . function_def_no_params_no_return
    (9) statement -> . class_def
    (10) statement -> . for_loop
    (11) statement -> . when_stmt
    (12) statement -> . print_stmt
    (13) statement -> . return_stmt
    (14) statement -> . expression_stmt
    (83) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) declaration -> . VAR ID ASSIGN expression
    (16) declaration -> . VAL ID ASSIGN expression
    (17) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> . FUN ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> . FUN ID LPAREN RPAREN block
    (71) class_def -> . CLASS ID LBRACE class_body RBRACE
    (29) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (64) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (56) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (57) print_stmt -> . PRINT LPAREN expression RPAREN
    (28) return_stmt -> . RETURN expression
    (59) expression_stmt -> . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    RBRACE          shift and go to state 165
    IF              shift and go to state 14
    VAR             shift and go to state 17
    VAL             shift and go to state 19
    FUN             shift and go to state 20
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    statement                      shift and go to state 37
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    function_def_params_no_return  shift and go to state 6
    function_def_no_params_no_return shift and go to state 7
    class_def                      shift and go to state 8
    for_loop                       shift and go to state 9
    when_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    expression_stmt                shift and go to state 13
    expression                     shift and go to state 16

state 150

    (27) type -> ID .

    RPAREN          reduce using rule 27 (type -> ID .)
    COMMA           reduce using rule 27 (type -> ID .)
    LBRACE          reduce using rule 27 (type -> ID .)
    ASSIGN          reduce using rule 27 (type -> ID .)
    RBRACE          reduce using rule 27 (type -> ID .)
    VAR             reduce using rule 27 (type -> ID .)
    VAL             reduce using rule 27 (type -> ID .)
    FUN             reduce using rule 27 (type -> ID .)


state 151

    (22) param -> ID COLON type .

    RPAREN          reduce using rule 22 (param -> ID COLON type .)
    COMMA           reduce using rule 22 (param -> ID COLON type .)


state 152

    (23) type -> TYPE_INT .

    RPAREN          reduce using rule 23 (type -> TYPE_INT .)
    COMMA           reduce using rule 23 (type -> TYPE_INT .)
    LBRACE          reduce using rule 23 (type -> TYPE_INT .)
    ASSIGN          reduce using rule 23 (type -> TYPE_INT .)
    RBRACE          reduce using rule 23 (type -> TYPE_INT .)
    VAR             reduce using rule 23 (type -> TYPE_INT .)
    VAL             reduce using rule 23 (type -> TYPE_INT .)
    FUN             reduce using rule 23 (type -> TYPE_INT .)


state 153

    (24) type -> TYPE_DOUBLE .

    RPAREN          reduce using rule 24 (type -> TYPE_DOUBLE .)
    COMMA           reduce using rule 24 (type -> TYPE_DOUBLE .)
    LBRACE          reduce using rule 24 (type -> TYPE_DOUBLE .)
    ASSIGN          reduce using rule 24 (type -> TYPE_DOUBLE .)
    RBRACE          reduce using rule 24 (type -> TYPE_DOUBLE .)
    VAR             reduce using rule 24 (type -> TYPE_DOUBLE .)
    VAL             reduce using rule 24 (type -> TYPE_DOUBLE .)
    FUN             reduce using rule 24 (type -> TYPE_DOUBLE .)


state 154

    (25) type -> TYPE_BOOLEAN .

    RPAREN          reduce using rule 25 (type -> TYPE_BOOLEAN .)
    COMMA           reduce using rule 25 (type -> TYPE_BOOLEAN .)
    LBRACE          reduce using rule 25 (type -> TYPE_BOOLEAN .)
    ASSIGN          reduce using rule 25 (type -> TYPE_BOOLEAN .)
    RBRACE          reduce using rule 25 (type -> TYPE_BOOLEAN .)
    VAR             reduce using rule 25 (type -> TYPE_BOOLEAN .)
    VAL             reduce using rule 25 (type -> TYPE_BOOLEAN .)
    FUN             reduce using rule 25 (type -> TYPE_BOOLEAN .)


state 155

    (26) type -> TYPE_STRING .

    RPAREN          reduce using rule 26 (type -> TYPE_STRING .)
    COMMA           reduce using rule 26 (type -> TYPE_STRING .)
    LBRACE          reduce using rule 26 (type -> TYPE_STRING .)
    ASSIGN          reduce using rule 26 (type -> TYPE_STRING .)
    RBRACE          reduce using rule 26 (type -> TYPE_STRING .)
    VAR             reduce using rule 26 (type -> TYPE_STRING .)
    VAL             reduce using rule 26 (type -> TYPE_STRING .)
    FUN             reduce using rule 26 (type -> TYPE_STRING .)


state 156

    (17) function_def -> FUN ID LPAREN param_list_opt RPAREN COLON . type block
    (23) type -> . TYPE_INT
    (24) type -> . TYPE_DOUBLE
    (25) type -> . TYPE_BOOLEAN
    (26) type -> . TYPE_STRING
    (27) type -> . ID

    TYPE_INT        shift and go to state 152
    TYPE_DOUBLE     shift and go to state 153
    TYPE_BOOLEAN    shift and go to state 154
    TYPE_STRING     shift and go to state 155
    ID              shift and go to state 150

    type                           shift and go to state 166

state 157

    (70) function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .

    IF              reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    VAR             reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    VAL             reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    FUN             reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    CLASS           reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    FOR             reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    WHEN            reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    PRINTLN         reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    PRINT           reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    RETURN          reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    MAPOF           reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    MINUS           reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    LPAREN          reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    NUMBER_INT      reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    NUMBER_DOUBLE   reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    STRING          reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    BOOLEAN_TRUE    reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    BOOLEAN_FALSE   reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    ID              reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    LISTOF          reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    ARRAYOF         reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    READLINE        reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    $end            reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    RBRACE          reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)
    ELSE            reduce using rule 70 (function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block .)


state 158

    (20) param_list -> param_list COMMA param .

    RPAREN          reduce using rule 20 (param_list -> param_list COMMA param .)
    COMMA           reduce using rule 20 (param_list -> param_list COMMA param .)


state 159

    (77) property_def -> VAR ID COLON . type
    (79) property_def -> VAR ID COLON . type ASSIGN expression
    (23) type -> . TYPE_INT
    (24) type -> . TYPE_DOUBLE
    (25) type -> . TYPE_BOOLEAN
    (26) type -> . TYPE_STRING
    (27) type -> . ID

    TYPE_INT        shift and go to state 152
    TYPE_DOUBLE     shift and go to state 153
    TYPE_BOOLEAN    shift and go to state 154
    TYPE_STRING     shift and go to state 155
    ID              shift and go to state 150

    type                           shift and go to state 167

state 160

    (78) property_def -> VAL ID COLON . type
    (80) property_def -> VAL ID COLON . type ASSIGN expression
    (23) type -> . TYPE_INT
    (24) type -> . TYPE_DOUBLE
    (25) type -> . TYPE_BOOLEAN
    (26) type -> . TYPE_STRING
    (27) type -> . ID

    TYPE_INT        shift and go to state 152
    TYPE_DOUBLE     shift and go to state 153
    TYPE_BOOLEAN    shift and go to state 154
    TYPE_STRING     shift and go to state 155
    ID              shift and go to state 150

    type                           shift and go to state 168

state 161

    (81) method_def -> FUN ID LPAREN . param_list_opt RPAREN block
    (18) param_list_opt -> . param_list
    (19) param_list_opt -> .
    (20) param_list -> . param_list COMMA param
    (21) param_list -> . param
    (22) param -> . ID COLON type

    RPAREN          reduce using rule 19 (param_list_opt -> .)
    ID              shift and go to state 103

    param_list_opt                 shift and go to state 169
    param_list                     shift and go to state 170
    param                          shift and go to state 107

state 162

    (29) for_loop -> FOR LPAREN ID IN expression RPAREN . loop_body
    (30) loop_body -> . block
    (31) loop_body -> . statement
    (58) block -> . LBRACE statement_list RBRACE
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . function_def_params_no_return
    (8) statement -> . function_def_no_params_no_return
    (9) statement -> . class_def
    (10) statement -> . for_loop
    (11) statement -> . when_stmt
    (12) statement -> . print_stmt
    (13) statement -> . return_stmt
    (14) statement -> . expression_stmt
    (83) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) declaration -> . VAR ID ASSIGN expression
    (16) declaration -> . VAL ID ASSIGN expression
    (17) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (70) function_def_params_no_return -> . FUN ID LPAREN param_list RPAREN block
    (84) function_def_no_params_no_return -> . FUN ID LPAREN RPAREN block
    (71) class_def -> . CLASS ID LBRACE class_body RBRACE
    (29) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (64) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (69) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (56) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (57) print_stmt -> . PRINT LPAREN expression RPAREN
    (28) return_stmt -> . RETURN expression
    (59) expression_stmt -> . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    LBRACE          shift and go to state 130
    IF              shift and go to state 14
    VAR             shift and go to state 17
    VAL             shift and go to state 19
    FUN             shift and go to state 20
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 16
    loop_body                      shift and go to state 171
    block                          shift and go to state 172
    statement                      shift and go to state 173
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    function_def_params_no_return  shift and go to state 6
    function_def_no_params_no_return shift and go to state 7
    class_def                      shift and go to state 8
    for_loop                       shift and go to state 9
    when_stmt                      shift and go to state 10
    print_stmt                     shift and go to state 11
    return_stmt                    shift and go to state 12
    expression_stmt                shift and go to state 13

state 163

    (64) when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches . RBRACE
    (65) when_branches -> when_branches . when_branch
    (67) when_branch -> . expression ARROW statement_list
    (68) when_branch -> . ELSE ARROW statement_list
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    RBRACE          shift and go to state 174
    ELSE            shift and go to state 90
    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 89
    when_branch                    shift and go to state 118

state 164

    (83) statement -> IF LPAREN expression RPAREN block ELSE block .

    IF              reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    VAR             reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    VAL             reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    FUN             reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    CLASS           reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    WHEN            reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    PRINTLN         reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    PRINT           reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    MAPOF           reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    MINUS           reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER_INT      reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER_DOUBLE   reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    STRING          reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    BOOLEAN_TRUE    reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    BOOLEAN_FALSE   reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    ID              reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    LISTOF          reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    ARRAYOF         reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    READLINE        reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    $end            reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    RBRACE          reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    ELSE            reduce using rule 83 (statement -> IF LPAREN expression RPAREN block ELSE block .)


state 165

    (58) block -> LBRACE statement_list RBRACE .

    ELSE            reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    VAR             reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    VAL             reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    FUN             reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    CLASS           reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    NUMBER_INT      reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    NUMBER_DOUBLE   reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    BOOLEAN_TRUE    reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    BOOLEAN_FALSE   reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    ARRAYOF         reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 58 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 58 (block -> LBRACE statement_list RBRACE .)


state 166

    (17) function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type . block
    (58) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 130

    block                          shift and go to state 175

state 167

    (77) property_def -> VAR ID COLON type .
    (79) property_def -> VAR ID COLON type . ASSIGN expression

    RBRACE          reduce using rule 77 (property_def -> VAR ID COLON type .)
    VAR             reduce using rule 77 (property_def -> VAR ID COLON type .)
    VAL             reduce using rule 77 (property_def -> VAR ID COLON type .)
    FUN             reduce using rule 77 (property_def -> VAR ID COLON type .)
    ASSIGN          shift and go to state 176


state 168

    (78) property_def -> VAL ID COLON type .
    (80) property_def -> VAL ID COLON type . ASSIGN expression

    RBRACE          reduce using rule 78 (property_def -> VAL ID COLON type .)
    VAR             reduce using rule 78 (property_def -> VAL ID COLON type .)
    VAL             reduce using rule 78 (property_def -> VAL ID COLON type .)
    FUN             reduce using rule 78 (property_def -> VAL ID COLON type .)
    ASSIGN          shift and go to state 177


state 169

    (81) method_def -> FUN ID LPAREN param_list_opt . RPAREN block

    RPAREN          shift and go to state 178


state 170

    (18) param_list_opt -> param_list .
    (20) param_list -> param_list . COMMA param

    RPAREN          reduce using rule 18 (param_list_opt -> param_list .)
    COMMA           shift and go to state 135


state 171

    (29) for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .

    IF              reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    VAR             reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    VAL             reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    FUN             reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    CLASS           reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    FOR             reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    WHEN            reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    PRINTLN         reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    PRINT           reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    RETURN          reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    MAPOF           reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    MINUS           reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    LPAREN          reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    NUMBER_INT      reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    NUMBER_DOUBLE   reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    STRING          reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    BOOLEAN_TRUE    reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    BOOLEAN_FALSE   reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    ID              reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    LISTOF          reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    ARRAYOF         reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    READLINE        reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    $end            reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    RBRACE          reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    ELSE            reduce using rule 29 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)


state 172

    (30) loop_body -> block .

    IF              reduce using rule 30 (loop_body -> block .)
    VAR             reduce using rule 30 (loop_body -> block .)
    VAL             reduce using rule 30 (loop_body -> block .)
    FUN             reduce using rule 30 (loop_body -> block .)
    CLASS           reduce using rule 30 (loop_body -> block .)
    FOR             reduce using rule 30 (loop_body -> block .)
    WHEN            reduce using rule 30 (loop_body -> block .)
    PRINTLN         reduce using rule 30 (loop_body -> block .)
    PRINT           reduce using rule 30 (loop_body -> block .)
    RETURN          reduce using rule 30 (loop_body -> block .)
    MAPOF           reduce using rule 30 (loop_body -> block .)
    MINUS           reduce using rule 30 (loop_body -> block .)
    LPAREN          reduce using rule 30 (loop_body -> block .)
    NUMBER_INT      reduce using rule 30 (loop_body -> block .)
    NUMBER_DOUBLE   reduce using rule 30 (loop_body -> block .)
    STRING          reduce using rule 30 (loop_body -> block .)
    BOOLEAN_TRUE    reduce using rule 30 (loop_body -> block .)
    BOOLEAN_FALSE   reduce using rule 30 (loop_body -> block .)
    ID              reduce using rule 30 (loop_body -> block .)
    LISTOF          reduce using rule 30 (loop_body -> block .)
    ARRAYOF         reduce using rule 30 (loop_body -> block .)
    READLINE        reduce using rule 30 (loop_body -> block .)
    $end            reduce using rule 30 (loop_body -> block .)
    RBRACE          reduce using rule 30 (loop_body -> block .)
    ELSE            reduce using rule 30 (loop_body -> block .)


state 173

    (31) loop_body -> statement .

    IF              reduce using rule 31 (loop_body -> statement .)
    VAR             reduce using rule 31 (loop_body -> statement .)
    VAL             reduce using rule 31 (loop_body -> statement .)
    FUN             reduce using rule 31 (loop_body -> statement .)
    CLASS           reduce using rule 31 (loop_body -> statement .)
    FOR             reduce using rule 31 (loop_body -> statement .)
    WHEN            reduce using rule 31 (loop_body -> statement .)
    PRINTLN         reduce using rule 31 (loop_body -> statement .)
    PRINT           reduce using rule 31 (loop_body -> statement .)
    RETURN          reduce using rule 31 (loop_body -> statement .)
    MAPOF           reduce using rule 31 (loop_body -> statement .)
    MINUS           reduce using rule 31 (loop_body -> statement .)
    LPAREN          reduce using rule 31 (loop_body -> statement .)
    NUMBER_INT      reduce using rule 31 (loop_body -> statement .)
    NUMBER_DOUBLE   reduce using rule 31 (loop_body -> statement .)
    STRING          reduce using rule 31 (loop_body -> statement .)
    BOOLEAN_TRUE    reduce using rule 31 (loop_body -> statement .)
    BOOLEAN_FALSE   reduce using rule 31 (loop_body -> statement .)
    ID              reduce using rule 31 (loop_body -> statement .)
    LISTOF          reduce using rule 31 (loop_body -> statement .)
    ARRAYOF         reduce using rule 31 (loop_body -> statement .)
    READLINE        reduce using rule 31 (loop_body -> statement .)
    $end            reduce using rule 31 (loop_body -> statement .)
    RBRACE          reduce using rule 31 (loop_body -> statement .)
    ELSE            reduce using rule 31 (loop_body -> statement .)


state 174

    (64) when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .

    IF              reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    VAR             reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    VAL             reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    FUN             reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    CLASS           reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    FOR             reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    WHEN            reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    PRINTLN         reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    PRINT           reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    RETURN          reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    MAPOF           reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    MINUS           reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    LPAREN          reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    NUMBER_INT      reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    NUMBER_DOUBLE   reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    STRING          reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    BOOLEAN_TRUE    reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    BOOLEAN_FALSE   reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    ID              reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    LISTOF          reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    ARRAYOF         reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    READLINE        reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    $end            reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    RBRACE          reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    ELSE            reduce using rule 64 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)


state 175

    (17) function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .

    IF              reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    VAR             reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    VAL             reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    FUN             reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    CLASS           reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    FOR             reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    WHEN            reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    PRINTLN         reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    PRINT           reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    RETURN          reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    MAPOF           reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    MINUS           reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    LPAREN          reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    NUMBER_INT      reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    NUMBER_DOUBLE   reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    STRING          reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    BOOLEAN_TRUE    reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    BOOLEAN_FALSE   reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    ID              reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    LISTOF          reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    ARRAYOF         reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    READLINE        reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    $end            reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    RBRACE          reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    ELSE            reduce using rule 17 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)


state 176

    (79) property_def -> VAR ID COLON type ASSIGN . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 179

state 177

    (80) property_def -> VAL ID COLON type ASSIGN . expression
    (32) expression -> . MAPOF LPAREN map_entries RPAREN
    (36) expression -> . expression PLUS expression
    (37) expression -> . expression MINUS expression
    (38) expression -> . expression MULTIPLY expression
    (39) expression -> . expression DIVIDE expression
    (40) expression -> . expression LESS expression
    (41) expression -> . expression GREATER expression
    (42) expression -> . expression LESS_EQUAL expression
    (43) expression -> . expression GREATER_EQUAL expression
    (44) expression -> . expression EQUALS expression
    (45) expression -> . expression NOT_EQUALS expression
    (46) expression -> . expression AND expression
    (47) expression -> . expression OR expression
    (48) expression -> . MINUS expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER_INT
    (51) expression -> . NUMBER_DOUBLE
    (52) expression -> . STRING
    (53) expression -> . BOOLEAN_TRUE
    (54) expression -> . BOOLEAN_FALSE
    (55) expression -> . ID
    (60) expression -> . LISTOF LPAREN expression_list RPAREN
    (82) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (85) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 27
    MINUS           shift and go to state 28
    LPAREN          shift and go to state 15
    NUMBER_INT      shift and go to state 29
    NUMBER_DOUBLE   shift and go to state 30
    STRING          shift and go to state 31
    BOOLEAN_TRUE    shift and go to state 32
    BOOLEAN_FALSE   shift and go to state 33
    ID              shift and go to state 18
    LISTOF          shift and go to state 34
    ARRAYOF         shift and go to state 35
    READLINE        shift and go to state 36

    expression                     shift and go to state 180

state 178

    (81) method_def -> FUN ID LPAREN param_list_opt RPAREN . block
    (58) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 130

    block                          shift and go to state 181

state 179

    (79) property_def -> VAR ID COLON type ASSIGN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RBRACE          reduce using rule 79 (property_def -> VAR ID COLON type ASSIGN expression .)
    VAR             reduce using rule 79 (property_def -> VAR ID COLON type ASSIGN expression .)
    VAL             reduce using rule 79 (property_def -> VAR ID COLON type ASSIGN expression .)
    FUN             reduce using rule 79 (property_def -> VAR ID COLON type ASSIGN expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 180

    (80) property_def -> VAL ID COLON type ASSIGN expression .
    (36) expression -> expression . PLUS expression
    (37) expression -> expression . MINUS expression
    (38) expression -> expression . MULTIPLY expression
    (39) expression -> expression . DIVIDE expression
    (40) expression -> expression . LESS expression
    (41) expression -> expression . GREATER expression
    (42) expression -> expression . LESS_EQUAL expression
    (43) expression -> expression . GREATER_EQUAL expression
    (44) expression -> expression . EQUALS expression
    (45) expression -> expression . NOT_EQUALS expression
    (46) expression -> expression . AND expression
    (47) expression -> expression . OR expression

    RBRACE          reduce using rule 80 (property_def -> VAL ID COLON type ASSIGN expression .)
    VAR             reduce using rule 80 (property_def -> VAL ID COLON type ASSIGN expression .)
    VAL             reduce using rule 80 (property_def -> VAL ID COLON type ASSIGN expression .)
    FUN             reduce using rule 80 (property_def -> VAL ID COLON type ASSIGN expression .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 43
    LESS            shift and go to state 44
    GREATER         shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER_EQUAL   shift and go to state 47
    EQUALS          shift and go to state 48
    NOT_EQUALS      shift and go to state 49
    AND             shift and go to state 50
    OR              shift and go to state 51


state 181

    (81) method_def -> FUN ID LPAREN param_list_opt RPAREN block .

    RBRACE          reduce using rule 81 (method_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    VAR             reduce using rule 81 (method_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    VAL             reduce using rule 81 (method_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    FUN             reduce using rule 81 (method_def -> FUN ID LPAREN param_list_opt RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for VAL in state 0 resolved as shift
WARNING: shift/reduce conflict for FUN in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 0 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 0 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 83 resolved as shift
WARNING: shift/reduce conflict for VAR in state 84 resolved as shift
WARNING: shift/reduce conflict for VAL in state 84 resolved as shift
WARNING: shift/reduce conflict for FUN in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 106 resolved as shift
WARNING: shift/reduce conflict for IF in state 119 resolved as shift
WARNING: shift/reduce conflict for VAR in state 119 resolved as shift
WARNING: shift/reduce conflict for VAL in state 119 resolved as shift
WARNING: shift/reduce conflict for FUN in state 119 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 119 resolved as shift
WARNING: shift/reduce conflict for FOR in state 119 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 119 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 119 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 119 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 119 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 119 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 119 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 119 resolved as shift
WARNING: shift/reduce conflict for STRING in state 119 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 119 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 119 resolved as shift
WARNING: shift/reduce conflict for ID in state 119 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 119 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 119 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 119 resolved as shift
WARNING: shift/reduce conflict for IF in state 120 resolved as shift
WARNING: shift/reduce conflict for VAR in state 120 resolved as shift
WARNING: shift/reduce conflict for VAL in state 120 resolved as shift
WARNING: shift/reduce conflict for FUN in state 120 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 120 resolved as shift
WARNING: shift/reduce conflict for FOR in state 120 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 120 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 120 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 120 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 120 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 120 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 120 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 120 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 120 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 120 resolved as shift
WARNING: shift/reduce conflict for STRING in state 120 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 120 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 120 resolved as shift
WARNING: shift/reduce conflict for ID in state 120 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 120 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 120 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 120 resolved as shift
WARNING: shift/reduce conflict for IF in state 130 resolved as shift
WARNING: shift/reduce conflict for VAR in state 130 resolved as shift
WARNING: shift/reduce conflict for VAL in state 130 resolved as shift
WARNING: shift/reduce conflict for FUN in state 130 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 130 resolved as shift
WARNING: shift/reduce conflict for FOR in state 130 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 130 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 130 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 130 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 130 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 130 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 130 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 130 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 130 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 130 resolved as shift
WARNING: shift/reduce conflict for STRING in state 130 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 130 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 130 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 130 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 130 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 130 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 143 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 143 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 143 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 143 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 143 resolved as shift
WARNING: shift/reduce conflict for STRING in state 143 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 143 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 143 resolved as shift
WARNING: shift/reduce conflict for ID in state 143 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 143 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 143 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 143 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 144 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 144 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 144 resolved as shift
WARNING: shift/reduce conflict for STRING in state 144 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 144 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 144 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 144 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 144 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 144 resolved as shift
