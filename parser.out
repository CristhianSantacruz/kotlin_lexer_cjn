Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    CATCH
    COMPANION
    CONSTRUCTOR
    CONTAINS
    CROSSINLINE
    DATA
    DOT
    ELVIS
    ENUM
    EXTENDS
    FILTER
    FINAL
    FINALLY
    IMPLEMENTS
    INDICES
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    LATEINIT
    LBRACKET
    MODULO
    NOINLINE
    OBJECT
    OPEN
    OUT
    OVERRIDE
    PRIVATE
    PROTECTED
    PUBLIC
    QUESTION
    RANGE
    RBRACKET
    REIFIED
    SEALED
    SEMICOLON
    SUM
    SUPER
    THIS
    TRY
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement_list -> <empty>
Rule 5     statement -> declaration
Rule 6     statement -> function_def
Rule 7     statement -> class_def
Rule 8     statement -> for_loop
Rule 9     statement -> when_stmt
Rule 10    statement -> print_stmt
Rule 11    statement -> return_stmt
Rule 12    statement -> break_stmt
Rule 13    statement -> continue_stmt
Rule 14    statement -> if_else
Rule 15    statement -> expression_stmt
Rule 16    declaration -> VAR ID ASSIGN expression
Rule 17    declaration -> VAL ID ASSIGN expression
Rule 18    declaration -> VAR ID COLON type ASSIGN expression
Rule 19    declaration -> VAL ID COLON type ASSIGN expression
Rule 20    param_list_opt -> param_list
Rule 21    param_list_opt -> <empty>
Rule 22    param_list -> param_list COMMA param
Rule 23    param_list -> param
Rule 24    param -> ID COLON type
Rule 25    type -> TYPE_INT
Rule 26    type -> TYPE_DOUBLE
Rule 27    type -> TYPE_BOOLEAN
Rule 28    type -> TYPE_STRING
Rule 29    type -> ID
Rule 30    return_stmt -> RETURN expression
Rule 31    for_loop -> FOR LPAREN ID IN expression RPAREN loop_body
Rule 32    loop_body -> block
Rule 33    loop_body -> statement
Rule 34    expression -> MAPOF LPAREN map_entries RPAREN
Rule 35    map_entries -> map_entries COMMA map_entry
Rule 36    map_entries -> map_entry
Rule 37    map_entry -> expression TO expression
Rule 38    expression -> expression PLUS expression
Rule 39    expression -> expression MINUS expression
Rule 40    expression -> expression MULTIPLY expression
Rule 41    expression -> expression DIVIDE expression
Rule 42    expression -> expression LESS expression
Rule 43    expression -> expression GREATER expression
Rule 44    expression -> expression LESS_EQUAL expression
Rule 45    expression -> expression GREATER_EQUAL expression
Rule 46    expression -> expression EQUALS expression
Rule 47    expression -> expression NOT_EQUALS expression
Rule 48    expression -> expression AND expression
Rule 49    expression -> expression OR expression
Rule 50    expression -> MINUS expression
Rule 51    expression -> LPAREN expression RPAREN
Rule 52    expression -> NUMBER_INT
Rule 53    expression -> NUMBER_DOUBLE
Rule 54    expression -> STRING
Rule 55    expression -> BOOLEAN_TRUE
Rule 56    expression -> BOOLEAN_FALSE
Rule 57    expression -> ID
Rule 58    print_stmt -> PRINTLN LPAREN expression RPAREN
Rule 59    print_stmt -> PRINT LPAREN expression RPAREN
Rule 60    block -> LBRACE statement_list RBRACE
Rule 61    expression_stmt -> expression
Rule 62    expression -> LISTOF LPAREN expression_list RPAREN
Rule 63    expression_list -> expression_list COMMA expression
Rule 64    expression_list -> expression
Rule 65    expression_list -> <empty>
Rule 66    when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
Rule 67    when_branches -> when_branches when_branch
Rule 68    when_branches -> when_branch
Rule 69    when_branch -> expression ARROW statement_list
Rule 70    when_branch -> ELSE ARROW statement_list
Rule 71    when_stmt -> WHEN LBRACE when_branches RBRACE
Rule 72    class_def -> CLASS ID LBRACE class_body RBRACE
Rule 73    class_body -> class_body class_member
Rule 74    class_body -> class_member
Rule 75    class_body -> <empty>
Rule 76    class_member -> property_def
Rule 77    class_member -> method_def
Rule 78    property_def -> VAR ID COLON type
Rule 79    property_def -> VAL ID COLON type
Rule 80    property_def -> VAR ID COLON type ASSIGN expression
Rule 81    property_def -> VAL ID COLON type ASSIGN expression
Rule 82    method_def -> FUN ID LPAREN param_list_opt RPAREN block
Rule 83    function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block
Rule 84    function_def -> FUN ID LPAREN param_list_opt RPAREN block
Rule 85    break_stmt -> BREAK
Rule 86    continue_stmt -> CONTINUE
Rule 87    expression -> ARRAYOF LPAREN expression_list RPAREN
Rule 88    if_else -> IF LPAREN expression RPAREN block ELSE block
Rule 89    expression -> READLINE LPAREN RPAREN

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 48
ARRAYOF              : 87
ARROW                : 69 70
ASSIGN               : 16 17 18 19 80 81
BOOLEAN_FALSE        : 56
BOOLEAN_TRUE         : 55
BREAK                : 85
CATCH                : 
CLASS                : 72
COLON                : 18 19 24 78 79 80 81 83
COMMA                : 22 35 63
COMPANION            : 
CONSTRUCTOR          : 
CONTAINS             : 
CONTINUE             : 86
CROSSINLINE          : 
DATA                 : 
DIVIDE               : 41
DOT                  : 
ELSE                 : 70 88
ELVIS                : 
ENUM                 : 
EQUALS               : 46
EXTENDS              : 
FILTER               : 
FINAL                : 
FINALLY              : 
FOR                  : 31
FUN                  : 82 83 84
GREATER              : 43
GREATER_EQUAL        : 45
ID                   : 16 17 18 19 24 29 31 57 72 78 79 80 81 82 83 84
IF                   : 88
IMPLEMENTS           : 
IN                   : 31
INDICES              : 
INIT                 : 
INLINE               : 
INNER                : 
INTERFACE            : 
INTERNAL             : 
LATEINIT             : 
LBRACE               : 60 66 71 72
LBRACKET             : 
LESS                 : 42
LESS_EQUAL           : 44
LISTOF               : 62
LPAREN               : 31 34 51 58 59 62 66 82 83 84 87 88 89
MAPOF                : 34
MINUS                : 39 50
MODULO               : 
MULTIPLY             : 40
NOINLINE             : 
NOT_EQUALS           : 47
NUMBER_DOUBLE        : 53
NUMBER_INT           : 52
OBJECT               : 
OPEN                 : 
OR                   : 49
OUT                  : 
OVERRIDE             : 
PLUS                 : 38
PRINT                : 59
PRINTLN              : 58
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
QUESTION             : 
RANGE                : 
RBRACE               : 60 66 71 72
RBRACKET             : 
READLINE             : 89
REIFIED              : 
RETURN               : 30
RPAREN               : 31 34 51 58 59 62 66 82 83 84 87 88 89
SEALED               : 
SEMICOLON            : 
STRING               : 54
SUM                  : 
SUPER                : 
THIS                 : 
TO                   : 37
TRY                  : 
TYPE_BOOLEAN         : 27
TYPE_DOUBLE          : 26
TYPE_INT             : 25
TYPE_STRING          : 28
VAL                  : 17 19 79 81
VAR                  : 16 18 78 80
WHEN                 : 66 71
WHILE                : 
error                : 

Nonterminals, with rules where they appear

block                : 32 82 83 84 88 88
break_stmt           : 12
class_body           : 72 73
class_def            : 7
class_member         : 73 74
continue_stmt        : 13
declaration          : 5
expression           : 16 17 18 19 30 31 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 58 59 61 63 64 66 69 80 81 88
expression_list      : 62 63 87
expression_stmt      : 15
for_loop             : 8
function_def         : 6
if_else              : 14
loop_body            : 31
map_entries          : 34 35
map_entry            : 35 36
method_def           : 77
param                : 22 23
param_list           : 20 22
param_list_opt       : 82 83 84
print_stmt           : 10
program              : 0
property_def         : 76
return_stmt          : 11
statement            : 2 3 33
statement_list       : 1 2 60 69 70
type                 : 18 19 24 78 79 80 81 83
when_branch          : 67 68
when_branches        : 66 67 71
when_stmt            : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . class_def
    (8) statement -> . for_loop
    (9) statement -> . when_stmt
    (10) statement -> . print_stmt
    (11) statement -> . return_stmt
    (12) statement -> . break_stmt
    (13) statement -> . continue_stmt
    (14) statement -> . if_else
    (15) statement -> . expression_stmt
    (16) declaration -> . VAR ID ASSIGN expression
    (17) declaration -> . VAL ID ASSIGN expression
    (18) declaration -> . VAR ID COLON type ASSIGN expression
    (19) declaration -> . VAL ID COLON type ASSIGN expression
    (83) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> . FUN ID LPAREN param_list_opt RPAREN block
    (72) class_def -> . CLASS ID LBRACE class_body RBRACE
    (31) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (66) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (58) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (59) print_stmt -> . PRINT LPAREN expression RPAREN
    (30) return_stmt -> . RETURN expression
    (85) break_stmt -> . BREAK
    (86) continue_stmt -> . CONTINUE
    (88) if_else -> . IF LPAREN expression RPAREN block ELSE block
    (61) expression_stmt -> . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    $end            reduce using rule 4 (statement_list -> .)
    VAR             shift and go to state 15
    VAL             shift and go to state 18
    FUN             shift and go to state 19
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    IF              shift and go to state 29
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

  ! VAR             [ reduce using rule 4 (statement_list -> .) ]
  ! VAL             [ reduce using rule 4 (statement_list -> .) ]
  ! FUN             [ reduce using rule 4 (statement_list -> .) ]
  ! CLASS           [ reduce using rule 4 (statement_list -> .) ]
  ! FOR             [ reduce using rule 4 (statement_list -> .) ]
  ! WHEN            [ reduce using rule 4 (statement_list -> .) ]
  ! PRINTLN         [ reduce using rule 4 (statement_list -> .) ]
  ! PRINT           [ reduce using rule 4 (statement_list -> .) ]
  ! RETURN          [ reduce using rule 4 (statement_list -> .) ]
  ! BREAK           [ reduce using rule 4 (statement_list -> .) ]
  ! CONTINUE        [ reduce using rule 4 (statement_list -> .) ]
  ! IF              [ reduce using rule 4 (statement_list -> .) ]
  ! MAPOF           [ reduce using rule 4 (statement_list -> .) ]
  ! MINUS           [ reduce using rule 4 (statement_list -> .) ]
  ! LPAREN          [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_INT      [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 4 (statement_list -> .) ]
  ! STRING          [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 4 (statement_list -> .) ]
  ! ID              [ reduce using rule 4 (statement_list -> .) ]
  ! LISTOF          [ reduce using rule 4 (statement_list -> .) ]
  ! ARRAYOF         [ reduce using rule 4 (statement_list -> .) ]
  ! READLINE        [ reduce using rule 4 (statement_list -> .) ]

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    class_def                      shift and go to state 6
    for_loop                       shift and go to state 7
    when_stmt                      shift and go to state 8
    print_stmt                     shift and go to state 9
    return_stmt                    shift and go to state 10
    break_stmt                     shift and go to state 11
    continue_stmt                  shift and go to state 12
    if_else                        shift and go to state 13
    expression_stmt                shift and go to state 14
    expression                     shift and go to state 17

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . class_def
    (8) statement -> . for_loop
    (9) statement -> . when_stmt
    (10) statement -> . print_stmt
    (11) statement -> . return_stmt
    (12) statement -> . break_stmt
    (13) statement -> . continue_stmt
    (14) statement -> . if_else
    (15) statement -> . expression_stmt
    (16) declaration -> . VAR ID ASSIGN expression
    (17) declaration -> . VAL ID ASSIGN expression
    (18) declaration -> . VAR ID COLON type ASSIGN expression
    (19) declaration -> . VAL ID COLON type ASSIGN expression
    (83) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> . FUN ID LPAREN param_list_opt RPAREN block
    (72) class_def -> . CLASS ID LBRACE class_body RBRACE
    (31) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (66) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (58) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (59) print_stmt -> . PRINT LPAREN expression RPAREN
    (30) return_stmt -> . RETURN expression
    (85) break_stmt -> . BREAK
    (86) continue_stmt -> . CONTINUE
    (88) if_else -> . IF LPAREN expression RPAREN block ELSE block
    (61) expression_stmt -> . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    $end            reduce using rule 1 (program -> statement_list .)
    VAR             shift and go to state 15
    VAL             shift and go to state 18
    FUN             shift and go to state 19
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    IF              shift and go to state 29
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    statement                      shift and go to state 40
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    class_def                      shift and go to state 6
    for_loop                       shift and go to state 7
    when_stmt                      shift and go to state 8
    print_stmt                     shift and go to state 9
    return_stmt                    shift and go to state 10
    break_stmt                     shift and go to state 11
    continue_stmt                  shift and go to state 12
    if_else                        shift and go to state 13
    expression_stmt                shift and go to state 14
    expression                     shift and go to state 17

state 3

    (3) statement_list -> statement .

    VAR             reduce using rule 3 (statement_list -> statement .)
    VAL             reduce using rule 3 (statement_list -> statement .)
    FUN             reduce using rule 3 (statement_list -> statement .)
    CLASS           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    WHEN            reduce using rule 3 (statement_list -> statement .)
    PRINTLN         reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    BREAK           reduce using rule 3 (statement_list -> statement .)
    CONTINUE        reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    MAPOF           reduce using rule 3 (statement_list -> statement .)
    MINUS           reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER_INT      reduce using rule 3 (statement_list -> statement .)
    NUMBER_DOUBLE   reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    BOOLEAN_TRUE    reduce using rule 3 (statement_list -> statement .)
    BOOLEAN_FALSE   reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    LISTOF          reduce using rule 3 (statement_list -> statement .)
    ARRAYOF         reduce using rule 3 (statement_list -> statement .)
    READLINE        reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)
    ELSE            reduce using rule 3 (statement_list -> statement .)


state 4

    (5) statement -> declaration .

    VAR             reduce using rule 5 (statement -> declaration .)
    VAL             reduce using rule 5 (statement -> declaration .)
    FUN             reduce using rule 5 (statement -> declaration .)
    CLASS           reduce using rule 5 (statement -> declaration .)
    FOR             reduce using rule 5 (statement -> declaration .)
    WHEN            reduce using rule 5 (statement -> declaration .)
    PRINTLN         reduce using rule 5 (statement -> declaration .)
    PRINT           reduce using rule 5 (statement -> declaration .)
    RETURN          reduce using rule 5 (statement -> declaration .)
    BREAK           reduce using rule 5 (statement -> declaration .)
    CONTINUE        reduce using rule 5 (statement -> declaration .)
    IF              reduce using rule 5 (statement -> declaration .)
    MAPOF           reduce using rule 5 (statement -> declaration .)
    MINUS           reduce using rule 5 (statement -> declaration .)
    LPAREN          reduce using rule 5 (statement -> declaration .)
    NUMBER_INT      reduce using rule 5 (statement -> declaration .)
    NUMBER_DOUBLE   reduce using rule 5 (statement -> declaration .)
    STRING          reduce using rule 5 (statement -> declaration .)
    BOOLEAN_TRUE    reduce using rule 5 (statement -> declaration .)
    BOOLEAN_FALSE   reduce using rule 5 (statement -> declaration .)
    ID              reduce using rule 5 (statement -> declaration .)
    LISTOF          reduce using rule 5 (statement -> declaration .)
    ARRAYOF         reduce using rule 5 (statement -> declaration .)
    READLINE        reduce using rule 5 (statement -> declaration .)
    $end            reduce using rule 5 (statement -> declaration .)
    RBRACE          reduce using rule 5 (statement -> declaration .)
    ELSE            reduce using rule 5 (statement -> declaration .)


state 5

    (6) statement -> function_def .

    VAR             reduce using rule 6 (statement -> function_def .)
    VAL             reduce using rule 6 (statement -> function_def .)
    FUN             reduce using rule 6 (statement -> function_def .)
    CLASS           reduce using rule 6 (statement -> function_def .)
    FOR             reduce using rule 6 (statement -> function_def .)
    WHEN            reduce using rule 6 (statement -> function_def .)
    PRINTLN         reduce using rule 6 (statement -> function_def .)
    PRINT           reduce using rule 6 (statement -> function_def .)
    RETURN          reduce using rule 6 (statement -> function_def .)
    BREAK           reduce using rule 6 (statement -> function_def .)
    CONTINUE        reduce using rule 6 (statement -> function_def .)
    IF              reduce using rule 6 (statement -> function_def .)
    MAPOF           reduce using rule 6 (statement -> function_def .)
    MINUS           reduce using rule 6 (statement -> function_def .)
    LPAREN          reduce using rule 6 (statement -> function_def .)
    NUMBER_INT      reduce using rule 6 (statement -> function_def .)
    NUMBER_DOUBLE   reduce using rule 6 (statement -> function_def .)
    STRING          reduce using rule 6 (statement -> function_def .)
    BOOLEAN_TRUE    reduce using rule 6 (statement -> function_def .)
    BOOLEAN_FALSE   reduce using rule 6 (statement -> function_def .)
    ID              reduce using rule 6 (statement -> function_def .)
    LISTOF          reduce using rule 6 (statement -> function_def .)
    ARRAYOF         reduce using rule 6 (statement -> function_def .)
    READLINE        reduce using rule 6 (statement -> function_def .)
    $end            reduce using rule 6 (statement -> function_def .)
    RBRACE          reduce using rule 6 (statement -> function_def .)
    ELSE            reduce using rule 6 (statement -> function_def .)


state 6

    (7) statement -> class_def .

    VAR             reduce using rule 7 (statement -> class_def .)
    VAL             reduce using rule 7 (statement -> class_def .)
    FUN             reduce using rule 7 (statement -> class_def .)
    CLASS           reduce using rule 7 (statement -> class_def .)
    FOR             reduce using rule 7 (statement -> class_def .)
    WHEN            reduce using rule 7 (statement -> class_def .)
    PRINTLN         reduce using rule 7 (statement -> class_def .)
    PRINT           reduce using rule 7 (statement -> class_def .)
    RETURN          reduce using rule 7 (statement -> class_def .)
    BREAK           reduce using rule 7 (statement -> class_def .)
    CONTINUE        reduce using rule 7 (statement -> class_def .)
    IF              reduce using rule 7 (statement -> class_def .)
    MAPOF           reduce using rule 7 (statement -> class_def .)
    MINUS           reduce using rule 7 (statement -> class_def .)
    LPAREN          reduce using rule 7 (statement -> class_def .)
    NUMBER_INT      reduce using rule 7 (statement -> class_def .)
    NUMBER_DOUBLE   reduce using rule 7 (statement -> class_def .)
    STRING          reduce using rule 7 (statement -> class_def .)
    BOOLEAN_TRUE    reduce using rule 7 (statement -> class_def .)
    BOOLEAN_FALSE   reduce using rule 7 (statement -> class_def .)
    ID              reduce using rule 7 (statement -> class_def .)
    LISTOF          reduce using rule 7 (statement -> class_def .)
    ARRAYOF         reduce using rule 7 (statement -> class_def .)
    READLINE        reduce using rule 7 (statement -> class_def .)
    $end            reduce using rule 7 (statement -> class_def .)
    RBRACE          reduce using rule 7 (statement -> class_def .)
    ELSE            reduce using rule 7 (statement -> class_def .)


state 7

    (8) statement -> for_loop .

    VAR             reduce using rule 8 (statement -> for_loop .)
    VAL             reduce using rule 8 (statement -> for_loop .)
    FUN             reduce using rule 8 (statement -> for_loop .)
    CLASS           reduce using rule 8 (statement -> for_loop .)
    FOR             reduce using rule 8 (statement -> for_loop .)
    WHEN            reduce using rule 8 (statement -> for_loop .)
    PRINTLN         reduce using rule 8 (statement -> for_loop .)
    PRINT           reduce using rule 8 (statement -> for_loop .)
    RETURN          reduce using rule 8 (statement -> for_loop .)
    BREAK           reduce using rule 8 (statement -> for_loop .)
    CONTINUE        reduce using rule 8 (statement -> for_loop .)
    IF              reduce using rule 8 (statement -> for_loop .)
    MAPOF           reduce using rule 8 (statement -> for_loop .)
    MINUS           reduce using rule 8 (statement -> for_loop .)
    LPAREN          reduce using rule 8 (statement -> for_loop .)
    NUMBER_INT      reduce using rule 8 (statement -> for_loop .)
    NUMBER_DOUBLE   reduce using rule 8 (statement -> for_loop .)
    STRING          reduce using rule 8 (statement -> for_loop .)
    BOOLEAN_TRUE    reduce using rule 8 (statement -> for_loop .)
    BOOLEAN_FALSE   reduce using rule 8 (statement -> for_loop .)
    ID              reduce using rule 8 (statement -> for_loop .)
    LISTOF          reduce using rule 8 (statement -> for_loop .)
    ARRAYOF         reduce using rule 8 (statement -> for_loop .)
    READLINE        reduce using rule 8 (statement -> for_loop .)
    $end            reduce using rule 8 (statement -> for_loop .)
    RBRACE          reduce using rule 8 (statement -> for_loop .)
    ELSE            reduce using rule 8 (statement -> for_loop .)


state 8

    (9) statement -> when_stmt .

    VAR             reduce using rule 9 (statement -> when_stmt .)
    VAL             reduce using rule 9 (statement -> when_stmt .)
    FUN             reduce using rule 9 (statement -> when_stmt .)
    CLASS           reduce using rule 9 (statement -> when_stmt .)
    FOR             reduce using rule 9 (statement -> when_stmt .)
    WHEN            reduce using rule 9 (statement -> when_stmt .)
    PRINTLN         reduce using rule 9 (statement -> when_stmt .)
    PRINT           reduce using rule 9 (statement -> when_stmt .)
    RETURN          reduce using rule 9 (statement -> when_stmt .)
    BREAK           reduce using rule 9 (statement -> when_stmt .)
    CONTINUE        reduce using rule 9 (statement -> when_stmt .)
    IF              reduce using rule 9 (statement -> when_stmt .)
    MAPOF           reduce using rule 9 (statement -> when_stmt .)
    MINUS           reduce using rule 9 (statement -> when_stmt .)
    LPAREN          reduce using rule 9 (statement -> when_stmt .)
    NUMBER_INT      reduce using rule 9 (statement -> when_stmt .)
    NUMBER_DOUBLE   reduce using rule 9 (statement -> when_stmt .)
    STRING          reduce using rule 9 (statement -> when_stmt .)
    BOOLEAN_TRUE    reduce using rule 9 (statement -> when_stmt .)
    BOOLEAN_FALSE   reduce using rule 9 (statement -> when_stmt .)
    ID              reduce using rule 9 (statement -> when_stmt .)
    LISTOF          reduce using rule 9 (statement -> when_stmt .)
    ARRAYOF         reduce using rule 9 (statement -> when_stmt .)
    READLINE        reduce using rule 9 (statement -> when_stmt .)
    $end            reduce using rule 9 (statement -> when_stmt .)
    RBRACE          reduce using rule 9 (statement -> when_stmt .)
    ELSE            reduce using rule 9 (statement -> when_stmt .)


state 9

    (10) statement -> print_stmt .

    VAR             reduce using rule 10 (statement -> print_stmt .)
    VAL             reduce using rule 10 (statement -> print_stmt .)
    FUN             reduce using rule 10 (statement -> print_stmt .)
    CLASS           reduce using rule 10 (statement -> print_stmt .)
    FOR             reduce using rule 10 (statement -> print_stmt .)
    WHEN            reduce using rule 10 (statement -> print_stmt .)
    PRINTLN         reduce using rule 10 (statement -> print_stmt .)
    PRINT           reduce using rule 10 (statement -> print_stmt .)
    RETURN          reduce using rule 10 (statement -> print_stmt .)
    BREAK           reduce using rule 10 (statement -> print_stmt .)
    CONTINUE        reduce using rule 10 (statement -> print_stmt .)
    IF              reduce using rule 10 (statement -> print_stmt .)
    MAPOF           reduce using rule 10 (statement -> print_stmt .)
    MINUS           reduce using rule 10 (statement -> print_stmt .)
    LPAREN          reduce using rule 10 (statement -> print_stmt .)
    NUMBER_INT      reduce using rule 10 (statement -> print_stmt .)
    NUMBER_DOUBLE   reduce using rule 10 (statement -> print_stmt .)
    STRING          reduce using rule 10 (statement -> print_stmt .)
    BOOLEAN_TRUE    reduce using rule 10 (statement -> print_stmt .)
    BOOLEAN_FALSE   reduce using rule 10 (statement -> print_stmt .)
    ID              reduce using rule 10 (statement -> print_stmt .)
    LISTOF          reduce using rule 10 (statement -> print_stmt .)
    ARRAYOF         reduce using rule 10 (statement -> print_stmt .)
    READLINE        reduce using rule 10 (statement -> print_stmt .)
    $end            reduce using rule 10 (statement -> print_stmt .)
    RBRACE          reduce using rule 10 (statement -> print_stmt .)
    ELSE            reduce using rule 10 (statement -> print_stmt .)


state 10

    (11) statement -> return_stmt .

    VAR             reduce using rule 11 (statement -> return_stmt .)
    VAL             reduce using rule 11 (statement -> return_stmt .)
    FUN             reduce using rule 11 (statement -> return_stmt .)
    CLASS           reduce using rule 11 (statement -> return_stmt .)
    FOR             reduce using rule 11 (statement -> return_stmt .)
    WHEN            reduce using rule 11 (statement -> return_stmt .)
    PRINTLN         reduce using rule 11 (statement -> return_stmt .)
    PRINT           reduce using rule 11 (statement -> return_stmt .)
    RETURN          reduce using rule 11 (statement -> return_stmt .)
    BREAK           reduce using rule 11 (statement -> return_stmt .)
    CONTINUE        reduce using rule 11 (statement -> return_stmt .)
    IF              reduce using rule 11 (statement -> return_stmt .)
    MAPOF           reduce using rule 11 (statement -> return_stmt .)
    MINUS           reduce using rule 11 (statement -> return_stmt .)
    LPAREN          reduce using rule 11 (statement -> return_stmt .)
    NUMBER_INT      reduce using rule 11 (statement -> return_stmt .)
    NUMBER_DOUBLE   reduce using rule 11 (statement -> return_stmt .)
    STRING          reduce using rule 11 (statement -> return_stmt .)
    BOOLEAN_TRUE    reduce using rule 11 (statement -> return_stmt .)
    BOOLEAN_FALSE   reduce using rule 11 (statement -> return_stmt .)
    ID              reduce using rule 11 (statement -> return_stmt .)
    LISTOF          reduce using rule 11 (statement -> return_stmt .)
    ARRAYOF         reduce using rule 11 (statement -> return_stmt .)
    READLINE        reduce using rule 11 (statement -> return_stmt .)
    $end            reduce using rule 11 (statement -> return_stmt .)
    RBRACE          reduce using rule 11 (statement -> return_stmt .)
    ELSE            reduce using rule 11 (statement -> return_stmt .)


state 11

    (12) statement -> break_stmt .

    VAR             reduce using rule 12 (statement -> break_stmt .)
    VAL             reduce using rule 12 (statement -> break_stmt .)
    FUN             reduce using rule 12 (statement -> break_stmt .)
    CLASS           reduce using rule 12 (statement -> break_stmt .)
    FOR             reduce using rule 12 (statement -> break_stmt .)
    WHEN            reduce using rule 12 (statement -> break_stmt .)
    PRINTLN         reduce using rule 12 (statement -> break_stmt .)
    PRINT           reduce using rule 12 (statement -> break_stmt .)
    RETURN          reduce using rule 12 (statement -> break_stmt .)
    BREAK           reduce using rule 12 (statement -> break_stmt .)
    CONTINUE        reduce using rule 12 (statement -> break_stmt .)
    IF              reduce using rule 12 (statement -> break_stmt .)
    MAPOF           reduce using rule 12 (statement -> break_stmt .)
    MINUS           reduce using rule 12 (statement -> break_stmt .)
    LPAREN          reduce using rule 12 (statement -> break_stmt .)
    NUMBER_INT      reduce using rule 12 (statement -> break_stmt .)
    NUMBER_DOUBLE   reduce using rule 12 (statement -> break_stmt .)
    STRING          reduce using rule 12 (statement -> break_stmt .)
    BOOLEAN_TRUE    reduce using rule 12 (statement -> break_stmt .)
    BOOLEAN_FALSE   reduce using rule 12 (statement -> break_stmt .)
    ID              reduce using rule 12 (statement -> break_stmt .)
    LISTOF          reduce using rule 12 (statement -> break_stmt .)
    ARRAYOF         reduce using rule 12 (statement -> break_stmt .)
    READLINE        reduce using rule 12 (statement -> break_stmt .)
    $end            reduce using rule 12 (statement -> break_stmt .)
    RBRACE          reduce using rule 12 (statement -> break_stmt .)
    ELSE            reduce using rule 12 (statement -> break_stmt .)


state 12

    (13) statement -> continue_stmt .

    VAR             reduce using rule 13 (statement -> continue_stmt .)
    VAL             reduce using rule 13 (statement -> continue_stmt .)
    FUN             reduce using rule 13 (statement -> continue_stmt .)
    CLASS           reduce using rule 13 (statement -> continue_stmt .)
    FOR             reduce using rule 13 (statement -> continue_stmt .)
    WHEN            reduce using rule 13 (statement -> continue_stmt .)
    PRINTLN         reduce using rule 13 (statement -> continue_stmt .)
    PRINT           reduce using rule 13 (statement -> continue_stmt .)
    RETURN          reduce using rule 13 (statement -> continue_stmt .)
    BREAK           reduce using rule 13 (statement -> continue_stmt .)
    CONTINUE        reduce using rule 13 (statement -> continue_stmt .)
    IF              reduce using rule 13 (statement -> continue_stmt .)
    MAPOF           reduce using rule 13 (statement -> continue_stmt .)
    MINUS           reduce using rule 13 (statement -> continue_stmt .)
    LPAREN          reduce using rule 13 (statement -> continue_stmt .)
    NUMBER_INT      reduce using rule 13 (statement -> continue_stmt .)
    NUMBER_DOUBLE   reduce using rule 13 (statement -> continue_stmt .)
    STRING          reduce using rule 13 (statement -> continue_stmt .)
    BOOLEAN_TRUE    reduce using rule 13 (statement -> continue_stmt .)
    BOOLEAN_FALSE   reduce using rule 13 (statement -> continue_stmt .)
    ID              reduce using rule 13 (statement -> continue_stmt .)
    LISTOF          reduce using rule 13 (statement -> continue_stmt .)
    ARRAYOF         reduce using rule 13 (statement -> continue_stmt .)
    READLINE        reduce using rule 13 (statement -> continue_stmt .)
    $end            reduce using rule 13 (statement -> continue_stmt .)
    RBRACE          reduce using rule 13 (statement -> continue_stmt .)
    ELSE            reduce using rule 13 (statement -> continue_stmt .)


state 13

    (14) statement -> if_else .

    VAR             reduce using rule 14 (statement -> if_else .)
    VAL             reduce using rule 14 (statement -> if_else .)
    FUN             reduce using rule 14 (statement -> if_else .)
    CLASS           reduce using rule 14 (statement -> if_else .)
    FOR             reduce using rule 14 (statement -> if_else .)
    WHEN            reduce using rule 14 (statement -> if_else .)
    PRINTLN         reduce using rule 14 (statement -> if_else .)
    PRINT           reduce using rule 14 (statement -> if_else .)
    RETURN          reduce using rule 14 (statement -> if_else .)
    BREAK           reduce using rule 14 (statement -> if_else .)
    CONTINUE        reduce using rule 14 (statement -> if_else .)
    IF              reduce using rule 14 (statement -> if_else .)
    MAPOF           reduce using rule 14 (statement -> if_else .)
    MINUS           reduce using rule 14 (statement -> if_else .)
    LPAREN          reduce using rule 14 (statement -> if_else .)
    NUMBER_INT      reduce using rule 14 (statement -> if_else .)
    NUMBER_DOUBLE   reduce using rule 14 (statement -> if_else .)
    STRING          reduce using rule 14 (statement -> if_else .)
    BOOLEAN_TRUE    reduce using rule 14 (statement -> if_else .)
    BOOLEAN_FALSE   reduce using rule 14 (statement -> if_else .)
    ID              reduce using rule 14 (statement -> if_else .)
    LISTOF          reduce using rule 14 (statement -> if_else .)
    ARRAYOF         reduce using rule 14 (statement -> if_else .)
    READLINE        reduce using rule 14 (statement -> if_else .)
    $end            reduce using rule 14 (statement -> if_else .)
    RBRACE          reduce using rule 14 (statement -> if_else .)
    ELSE            reduce using rule 14 (statement -> if_else .)


state 14

    (15) statement -> expression_stmt .

    VAR             reduce using rule 15 (statement -> expression_stmt .)
    VAL             reduce using rule 15 (statement -> expression_stmt .)
    FUN             reduce using rule 15 (statement -> expression_stmt .)
    CLASS           reduce using rule 15 (statement -> expression_stmt .)
    FOR             reduce using rule 15 (statement -> expression_stmt .)
    WHEN            reduce using rule 15 (statement -> expression_stmt .)
    PRINTLN         reduce using rule 15 (statement -> expression_stmt .)
    PRINT           reduce using rule 15 (statement -> expression_stmt .)
    RETURN          reduce using rule 15 (statement -> expression_stmt .)
    BREAK           reduce using rule 15 (statement -> expression_stmt .)
    CONTINUE        reduce using rule 15 (statement -> expression_stmt .)
    IF              reduce using rule 15 (statement -> expression_stmt .)
    MAPOF           reduce using rule 15 (statement -> expression_stmt .)
    MINUS           reduce using rule 15 (statement -> expression_stmt .)
    LPAREN          reduce using rule 15 (statement -> expression_stmt .)
    NUMBER_INT      reduce using rule 15 (statement -> expression_stmt .)
    NUMBER_DOUBLE   reduce using rule 15 (statement -> expression_stmt .)
    STRING          reduce using rule 15 (statement -> expression_stmt .)
    BOOLEAN_TRUE    reduce using rule 15 (statement -> expression_stmt .)
    BOOLEAN_FALSE   reduce using rule 15 (statement -> expression_stmt .)
    ID              reduce using rule 15 (statement -> expression_stmt .)
    LISTOF          reduce using rule 15 (statement -> expression_stmt .)
    ARRAYOF         reduce using rule 15 (statement -> expression_stmt .)
    READLINE        reduce using rule 15 (statement -> expression_stmt .)
    $end            reduce using rule 15 (statement -> expression_stmt .)
    RBRACE          reduce using rule 15 (statement -> expression_stmt .)
    ELSE            reduce using rule 15 (statement -> expression_stmt .)


state 15

    (16) declaration -> VAR . ID ASSIGN expression
    (18) declaration -> VAR . ID COLON type ASSIGN expression

    ID              shift and go to state 41


state 16

    (57) expression -> ID .

    PLUS            reduce using rule 57 (expression -> ID .)
    MINUS           reduce using rule 57 (expression -> ID .)
    MULTIPLY        reduce using rule 57 (expression -> ID .)
    DIVIDE          reduce using rule 57 (expression -> ID .)
    LESS            reduce using rule 57 (expression -> ID .)
    GREATER         reduce using rule 57 (expression -> ID .)
    LESS_EQUAL      reduce using rule 57 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 57 (expression -> ID .)
    EQUALS          reduce using rule 57 (expression -> ID .)
    NOT_EQUALS      reduce using rule 57 (expression -> ID .)
    AND             reduce using rule 57 (expression -> ID .)
    OR              reduce using rule 57 (expression -> ID .)
    VAR             reduce using rule 57 (expression -> ID .)
    VAL             reduce using rule 57 (expression -> ID .)
    FUN             reduce using rule 57 (expression -> ID .)
    CLASS           reduce using rule 57 (expression -> ID .)
    FOR             reduce using rule 57 (expression -> ID .)
    WHEN            reduce using rule 57 (expression -> ID .)
    PRINTLN         reduce using rule 57 (expression -> ID .)
    PRINT           reduce using rule 57 (expression -> ID .)
    RETURN          reduce using rule 57 (expression -> ID .)
    BREAK           reduce using rule 57 (expression -> ID .)
    CONTINUE        reduce using rule 57 (expression -> ID .)
    IF              reduce using rule 57 (expression -> ID .)
    MAPOF           reduce using rule 57 (expression -> ID .)
    LPAREN          reduce using rule 57 (expression -> ID .)
    NUMBER_INT      reduce using rule 57 (expression -> ID .)
    NUMBER_DOUBLE   reduce using rule 57 (expression -> ID .)
    STRING          reduce using rule 57 (expression -> ID .)
    BOOLEAN_TRUE    reduce using rule 57 (expression -> ID .)
    BOOLEAN_FALSE   reduce using rule 57 (expression -> ID .)
    ID              reduce using rule 57 (expression -> ID .)
    LISTOF          reduce using rule 57 (expression -> ID .)
    ARRAYOF         reduce using rule 57 (expression -> ID .)
    READLINE        reduce using rule 57 (expression -> ID .)
    $end            reduce using rule 57 (expression -> ID .)
    RPAREN          reduce using rule 57 (expression -> ID .)
    RBRACE          reduce using rule 57 (expression -> ID .)
    ELSE            reduce using rule 57 (expression -> ID .)
    ARROW           reduce using rule 57 (expression -> ID .)
    TO              reduce using rule 57 (expression -> ID .)
    COMMA           reduce using rule 57 (expression -> ID .)


state 17

    (61) expression_stmt -> expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    VAR             reduce using rule 61 (expression_stmt -> expression .)
    VAL             reduce using rule 61 (expression_stmt -> expression .)
    FUN             reduce using rule 61 (expression_stmt -> expression .)
    CLASS           reduce using rule 61 (expression_stmt -> expression .)
    FOR             reduce using rule 61 (expression_stmt -> expression .)
    WHEN            reduce using rule 61 (expression_stmt -> expression .)
    PRINTLN         reduce using rule 61 (expression_stmt -> expression .)
    PRINT           reduce using rule 61 (expression_stmt -> expression .)
    RETURN          reduce using rule 61 (expression_stmt -> expression .)
    BREAK           reduce using rule 61 (expression_stmt -> expression .)
    CONTINUE        reduce using rule 61 (expression_stmt -> expression .)
    IF              reduce using rule 61 (expression_stmt -> expression .)
    MAPOF           reduce using rule 61 (expression_stmt -> expression .)
    LPAREN          reduce using rule 61 (expression_stmt -> expression .)
    NUMBER_INT      reduce using rule 61 (expression_stmt -> expression .)
    NUMBER_DOUBLE   reduce using rule 61 (expression_stmt -> expression .)
    STRING          reduce using rule 61 (expression_stmt -> expression .)
    BOOLEAN_TRUE    reduce using rule 61 (expression_stmt -> expression .)
    BOOLEAN_FALSE   reduce using rule 61 (expression_stmt -> expression .)
    ID              reduce using rule 61 (expression_stmt -> expression .)
    LISTOF          reduce using rule 61 (expression_stmt -> expression .)
    ARRAYOF         reduce using rule 61 (expression_stmt -> expression .)
    READLINE        reduce using rule 61 (expression_stmt -> expression .)
    $end            reduce using rule 61 (expression_stmt -> expression .)
    RBRACE          reduce using rule 61 (expression_stmt -> expression .)
    ELSE            reduce using rule 61 (expression_stmt -> expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MINUS           [ reduce using rule 61 (expression_stmt -> expression .) ]


state 18

    (17) declaration -> VAL . ID ASSIGN expression
    (19) declaration -> VAL . ID COLON type ASSIGN expression

    ID              shift and go to state 54


state 19

    (83) function_def -> FUN . ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> FUN . ID LPAREN param_list_opt RPAREN block

    ID              shift and go to state 55


state 20

    (51) expression -> LPAREN . expression RPAREN
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 56

state 21

    (72) class_def -> CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 57


state 22

    (31) for_loop -> FOR . LPAREN ID IN expression RPAREN loop_body

    LPAREN          shift and go to state 58


state 23

    (66) when_stmt -> WHEN . LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> WHEN . LBRACE when_branches RBRACE

    LPAREN          shift and go to state 59
    LBRACE          shift and go to state 60


state 24

    (58) print_stmt -> PRINTLN . LPAREN expression RPAREN

    LPAREN          shift and go to state 61


state 25

    (59) print_stmt -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 62


state 26

    (30) return_stmt -> RETURN . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 63

state 27

    (85) break_stmt -> BREAK .

    VAR             reduce using rule 85 (break_stmt -> BREAK .)
    VAL             reduce using rule 85 (break_stmt -> BREAK .)
    FUN             reduce using rule 85 (break_stmt -> BREAK .)
    CLASS           reduce using rule 85 (break_stmt -> BREAK .)
    FOR             reduce using rule 85 (break_stmt -> BREAK .)
    WHEN            reduce using rule 85 (break_stmt -> BREAK .)
    PRINTLN         reduce using rule 85 (break_stmt -> BREAK .)
    PRINT           reduce using rule 85 (break_stmt -> BREAK .)
    RETURN          reduce using rule 85 (break_stmt -> BREAK .)
    BREAK           reduce using rule 85 (break_stmt -> BREAK .)
    CONTINUE        reduce using rule 85 (break_stmt -> BREAK .)
    IF              reduce using rule 85 (break_stmt -> BREAK .)
    MAPOF           reduce using rule 85 (break_stmt -> BREAK .)
    MINUS           reduce using rule 85 (break_stmt -> BREAK .)
    LPAREN          reduce using rule 85 (break_stmt -> BREAK .)
    NUMBER_INT      reduce using rule 85 (break_stmt -> BREAK .)
    NUMBER_DOUBLE   reduce using rule 85 (break_stmt -> BREAK .)
    STRING          reduce using rule 85 (break_stmt -> BREAK .)
    BOOLEAN_TRUE    reduce using rule 85 (break_stmt -> BREAK .)
    BOOLEAN_FALSE   reduce using rule 85 (break_stmt -> BREAK .)
    ID              reduce using rule 85 (break_stmt -> BREAK .)
    LISTOF          reduce using rule 85 (break_stmt -> BREAK .)
    ARRAYOF         reduce using rule 85 (break_stmt -> BREAK .)
    READLINE        reduce using rule 85 (break_stmt -> BREAK .)
    $end            reduce using rule 85 (break_stmt -> BREAK .)
    RBRACE          reduce using rule 85 (break_stmt -> BREAK .)
    ELSE            reduce using rule 85 (break_stmt -> BREAK .)


state 28

    (86) continue_stmt -> CONTINUE .

    VAR             reduce using rule 86 (continue_stmt -> CONTINUE .)
    VAL             reduce using rule 86 (continue_stmt -> CONTINUE .)
    FUN             reduce using rule 86 (continue_stmt -> CONTINUE .)
    CLASS           reduce using rule 86 (continue_stmt -> CONTINUE .)
    FOR             reduce using rule 86 (continue_stmt -> CONTINUE .)
    WHEN            reduce using rule 86 (continue_stmt -> CONTINUE .)
    PRINTLN         reduce using rule 86 (continue_stmt -> CONTINUE .)
    PRINT           reduce using rule 86 (continue_stmt -> CONTINUE .)
    RETURN          reduce using rule 86 (continue_stmt -> CONTINUE .)
    BREAK           reduce using rule 86 (continue_stmt -> CONTINUE .)
    CONTINUE        reduce using rule 86 (continue_stmt -> CONTINUE .)
    IF              reduce using rule 86 (continue_stmt -> CONTINUE .)
    MAPOF           reduce using rule 86 (continue_stmt -> CONTINUE .)
    MINUS           reduce using rule 86 (continue_stmt -> CONTINUE .)
    LPAREN          reduce using rule 86 (continue_stmt -> CONTINUE .)
    NUMBER_INT      reduce using rule 86 (continue_stmt -> CONTINUE .)
    NUMBER_DOUBLE   reduce using rule 86 (continue_stmt -> CONTINUE .)
    STRING          reduce using rule 86 (continue_stmt -> CONTINUE .)
    BOOLEAN_TRUE    reduce using rule 86 (continue_stmt -> CONTINUE .)
    BOOLEAN_FALSE   reduce using rule 86 (continue_stmt -> CONTINUE .)
    ID              reduce using rule 86 (continue_stmt -> CONTINUE .)
    LISTOF          reduce using rule 86 (continue_stmt -> CONTINUE .)
    ARRAYOF         reduce using rule 86 (continue_stmt -> CONTINUE .)
    READLINE        reduce using rule 86 (continue_stmt -> CONTINUE .)
    $end            reduce using rule 86 (continue_stmt -> CONTINUE .)
    RBRACE          reduce using rule 86 (continue_stmt -> CONTINUE .)
    ELSE            reduce using rule 86 (continue_stmt -> CONTINUE .)


state 29

    (88) if_else -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 64


state 30

    (34) expression -> MAPOF . LPAREN map_entries RPAREN

    LPAREN          shift and go to state 65


state 31

    (50) expression -> MINUS . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 66

state 32

    (52) expression -> NUMBER_INT .

    PLUS            reduce using rule 52 (expression -> NUMBER_INT .)
    MINUS           reduce using rule 52 (expression -> NUMBER_INT .)
    MULTIPLY        reduce using rule 52 (expression -> NUMBER_INT .)
    DIVIDE          reduce using rule 52 (expression -> NUMBER_INT .)
    LESS            reduce using rule 52 (expression -> NUMBER_INT .)
    GREATER         reduce using rule 52 (expression -> NUMBER_INT .)
    LESS_EQUAL      reduce using rule 52 (expression -> NUMBER_INT .)
    GREATER_EQUAL   reduce using rule 52 (expression -> NUMBER_INT .)
    EQUALS          reduce using rule 52 (expression -> NUMBER_INT .)
    NOT_EQUALS      reduce using rule 52 (expression -> NUMBER_INT .)
    AND             reduce using rule 52 (expression -> NUMBER_INT .)
    OR              reduce using rule 52 (expression -> NUMBER_INT .)
    VAR             reduce using rule 52 (expression -> NUMBER_INT .)
    VAL             reduce using rule 52 (expression -> NUMBER_INT .)
    FUN             reduce using rule 52 (expression -> NUMBER_INT .)
    CLASS           reduce using rule 52 (expression -> NUMBER_INT .)
    FOR             reduce using rule 52 (expression -> NUMBER_INT .)
    WHEN            reduce using rule 52 (expression -> NUMBER_INT .)
    PRINTLN         reduce using rule 52 (expression -> NUMBER_INT .)
    PRINT           reduce using rule 52 (expression -> NUMBER_INT .)
    RETURN          reduce using rule 52 (expression -> NUMBER_INT .)
    BREAK           reduce using rule 52 (expression -> NUMBER_INT .)
    CONTINUE        reduce using rule 52 (expression -> NUMBER_INT .)
    IF              reduce using rule 52 (expression -> NUMBER_INT .)
    MAPOF           reduce using rule 52 (expression -> NUMBER_INT .)
    LPAREN          reduce using rule 52 (expression -> NUMBER_INT .)
    NUMBER_INT      reduce using rule 52 (expression -> NUMBER_INT .)
    NUMBER_DOUBLE   reduce using rule 52 (expression -> NUMBER_INT .)
    STRING          reduce using rule 52 (expression -> NUMBER_INT .)
    BOOLEAN_TRUE    reduce using rule 52 (expression -> NUMBER_INT .)
    BOOLEAN_FALSE   reduce using rule 52 (expression -> NUMBER_INT .)
    ID              reduce using rule 52 (expression -> NUMBER_INT .)
    LISTOF          reduce using rule 52 (expression -> NUMBER_INT .)
    ARRAYOF         reduce using rule 52 (expression -> NUMBER_INT .)
    READLINE        reduce using rule 52 (expression -> NUMBER_INT .)
    $end            reduce using rule 52 (expression -> NUMBER_INT .)
    RPAREN          reduce using rule 52 (expression -> NUMBER_INT .)
    RBRACE          reduce using rule 52 (expression -> NUMBER_INT .)
    ELSE            reduce using rule 52 (expression -> NUMBER_INT .)
    ARROW           reduce using rule 52 (expression -> NUMBER_INT .)
    TO              reduce using rule 52 (expression -> NUMBER_INT .)
    COMMA           reduce using rule 52 (expression -> NUMBER_INT .)


state 33

    (53) expression -> NUMBER_DOUBLE .

    PLUS            reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    MINUS           reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    MULTIPLY        reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    DIVIDE          reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    LESS            reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    GREATER         reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    LESS_EQUAL      reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    GREATER_EQUAL   reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    EQUALS          reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    NOT_EQUALS      reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    AND             reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    OR              reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    VAR             reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    VAL             reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    FUN             reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    CLASS           reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    FOR             reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    WHEN            reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    PRINTLN         reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    PRINT           reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    RETURN          reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    BREAK           reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    CONTINUE        reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    IF              reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    MAPOF           reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    LPAREN          reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    NUMBER_INT      reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    NUMBER_DOUBLE   reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    STRING          reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    BOOLEAN_TRUE    reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    BOOLEAN_FALSE   reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    ID              reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    LISTOF          reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    ARRAYOF         reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    READLINE        reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    $end            reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    RPAREN          reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    RBRACE          reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    ELSE            reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    ARROW           reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    TO              reduce using rule 53 (expression -> NUMBER_DOUBLE .)
    COMMA           reduce using rule 53 (expression -> NUMBER_DOUBLE .)


state 34

    (54) expression -> STRING .

    PLUS            reduce using rule 54 (expression -> STRING .)
    MINUS           reduce using rule 54 (expression -> STRING .)
    MULTIPLY        reduce using rule 54 (expression -> STRING .)
    DIVIDE          reduce using rule 54 (expression -> STRING .)
    LESS            reduce using rule 54 (expression -> STRING .)
    GREATER         reduce using rule 54 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 54 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 54 (expression -> STRING .)
    EQUALS          reduce using rule 54 (expression -> STRING .)
    NOT_EQUALS      reduce using rule 54 (expression -> STRING .)
    AND             reduce using rule 54 (expression -> STRING .)
    OR              reduce using rule 54 (expression -> STRING .)
    VAR             reduce using rule 54 (expression -> STRING .)
    VAL             reduce using rule 54 (expression -> STRING .)
    FUN             reduce using rule 54 (expression -> STRING .)
    CLASS           reduce using rule 54 (expression -> STRING .)
    FOR             reduce using rule 54 (expression -> STRING .)
    WHEN            reduce using rule 54 (expression -> STRING .)
    PRINTLN         reduce using rule 54 (expression -> STRING .)
    PRINT           reduce using rule 54 (expression -> STRING .)
    RETURN          reduce using rule 54 (expression -> STRING .)
    BREAK           reduce using rule 54 (expression -> STRING .)
    CONTINUE        reduce using rule 54 (expression -> STRING .)
    IF              reduce using rule 54 (expression -> STRING .)
    MAPOF           reduce using rule 54 (expression -> STRING .)
    LPAREN          reduce using rule 54 (expression -> STRING .)
    NUMBER_INT      reduce using rule 54 (expression -> STRING .)
    NUMBER_DOUBLE   reduce using rule 54 (expression -> STRING .)
    STRING          reduce using rule 54 (expression -> STRING .)
    BOOLEAN_TRUE    reduce using rule 54 (expression -> STRING .)
    BOOLEAN_FALSE   reduce using rule 54 (expression -> STRING .)
    ID              reduce using rule 54 (expression -> STRING .)
    LISTOF          reduce using rule 54 (expression -> STRING .)
    ARRAYOF         reduce using rule 54 (expression -> STRING .)
    READLINE        reduce using rule 54 (expression -> STRING .)
    $end            reduce using rule 54 (expression -> STRING .)
    RPAREN          reduce using rule 54 (expression -> STRING .)
    RBRACE          reduce using rule 54 (expression -> STRING .)
    ELSE            reduce using rule 54 (expression -> STRING .)
    ARROW           reduce using rule 54 (expression -> STRING .)
    TO              reduce using rule 54 (expression -> STRING .)
    COMMA           reduce using rule 54 (expression -> STRING .)


state 35

    (55) expression -> BOOLEAN_TRUE .

    PLUS            reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    MINUS           reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    MULTIPLY        reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    DIVIDE          reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    LESS            reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    GREATER         reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    LESS_EQUAL      reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    GREATER_EQUAL   reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    EQUALS          reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    NOT_EQUALS      reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    AND             reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    OR              reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    VAR             reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    VAL             reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    FUN             reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    CLASS           reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    FOR             reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    WHEN            reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    PRINTLN         reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    PRINT           reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    RETURN          reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    BREAK           reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    CONTINUE        reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    IF              reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    MAPOF           reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    LPAREN          reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    NUMBER_INT      reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    NUMBER_DOUBLE   reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    STRING          reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    BOOLEAN_TRUE    reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    BOOLEAN_FALSE   reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    ID              reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    LISTOF          reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    ARRAYOF         reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    READLINE        reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    $end            reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    RPAREN          reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    RBRACE          reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    ELSE            reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    ARROW           reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    TO              reduce using rule 55 (expression -> BOOLEAN_TRUE .)
    COMMA           reduce using rule 55 (expression -> BOOLEAN_TRUE .)


state 36

    (56) expression -> BOOLEAN_FALSE .

    PLUS            reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    MINUS           reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    MULTIPLY        reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    DIVIDE          reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    LESS            reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    GREATER         reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    LESS_EQUAL      reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    GREATER_EQUAL   reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    EQUALS          reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    NOT_EQUALS      reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    AND             reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    OR              reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    VAR             reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    VAL             reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    FUN             reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    CLASS           reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    FOR             reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    WHEN            reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    PRINTLN         reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    PRINT           reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    RETURN          reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    BREAK           reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    CONTINUE        reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    IF              reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    MAPOF           reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    LPAREN          reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    NUMBER_INT      reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    NUMBER_DOUBLE   reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    STRING          reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    BOOLEAN_TRUE    reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    BOOLEAN_FALSE   reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    ID              reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    LISTOF          reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    ARRAYOF         reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    READLINE        reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    $end            reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    RPAREN          reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    RBRACE          reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    ELSE            reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    ARROW           reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    TO              reduce using rule 56 (expression -> BOOLEAN_FALSE .)
    COMMA           reduce using rule 56 (expression -> BOOLEAN_FALSE .)


state 37

    (62) expression -> LISTOF . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 67


state 38

    (87) expression -> ARRAYOF . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 68


state 39

    (89) expression -> READLINE . LPAREN RPAREN

    LPAREN          shift and go to state 69


state 40

    (2) statement_list -> statement_list statement .

    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    VAL             reduce using rule 2 (statement_list -> statement_list statement .)
    FUN             reduce using rule 2 (statement_list -> statement_list statement .)
    CLASS           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    WHEN            reduce using rule 2 (statement_list -> statement_list statement .)
    PRINTLN         reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 2 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    MAPOF           reduce using rule 2 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_INT      reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER_DOUBLE   reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN_TRUE    reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN_FALSE   reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    LISTOF          reduce using rule 2 (statement_list -> statement_list statement .)
    ARRAYOF         reduce using rule 2 (statement_list -> statement_list statement .)
    READLINE        reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    ELSE            reduce using rule 2 (statement_list -> statement_list statement .)


state 41

    (16) declaration -> VAR ID . ASSIGN expression
    (18) declaration -> VAR ID . COLON type ASSIGN expression

    ASSIGN          shift and go to state 70
    COLON           shift and go to state 71


state 42

    (38) expression -> expression PLUS . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 72

state 43

    (39) expression -> expression MINUS . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 73

state 44

    (40) expression -> expression MULTIPLY . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 74

state 45

    (41) expression -> expression DIVIDE . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 75

state 46

    (42) expression -> expression LESS . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 76

state 47

    (43) expression -> expression GREATER . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 77

state 48

    (44) expression -> expression LESS_EQUAL . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 78

state 49

    (45) expression -> expression GREATER_EQUAL . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 79

state 50

    (46) expression -> expression EQUALS . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 80

state 51

    (47) expression -> expression NOT_EQUALS . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 81

state 52

    (48) expression -> expression AND . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 82

state 53

    (49) expression -> expression OR . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 83

state 54

    (17) declaration -> VAL ID . ASSIGN expression
    (19) declaration -> VAL ID . COLON type ASSIGN expression

    ASSIGN          shift and go to state 84
    COLON           shift and go to state 85


state 55

    (83) function_def -> FUN ID . LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> FUN ID . LPAREN param_list_opt RPAREN block

    LPAREN          shift and go to state 86


state 56

    (51) expression -> LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 87
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 57

    (72) class_def -> CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 88


state 58

    (31) for_loop -> FOR LPAREN . ID IN expression RPAREN loop_body

    ID              shift and go to state 89


state 59

    (66) when_stmt -> WHEN LPAREN . expression RPAREN LBRACE when_branches RBRACE
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 90

state 60

    (71) when_stmt -> WHEN LBRACE . when_branches RBRACE
    (67) when_branches -> . when_branches when_branch
    (68) when_branches -> . when_branch
    (69) when_branch -> . expression ARROW statement_list
    (70) when_branch -> . ELSE ARROW statement_list
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    ELSE            shift and go to state 94
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    when_branches                  shift and go to state 91
    when_branch                    shift and go to state 92
    expression                     shift and go to state 93

state 61

    (58) print_stmt -> PRINTLN LPAREN . expression RPAREN
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 95

state 62

    (59) print_stmt -> PRINT LPAREN . expression RPAREN
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 96

state 63

    (30) return_stmt -> RETURN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    VAR             reduce using rule 30 (return_stmt -> RETURN expression .)
    VAL             reduce using rule 30 (return_stmt -> RETURN expression .)
    FUN             reduce using rule 30 (return_stmt -> RETURN expression .)
    CLASS           reduce using rule 30 (return_stmt -> RETURN expression .)
    FOR             reduce using rule 30 (return_stmt -> RETURN expression .)
    WHEN            reduce using rule 30 (return_stmt -> RETURN expression .)
    PRINTLN         reduce using rule 30 (return_stmt -> RETURN expression .)
    PRINT           reduce using rule 30 (return_stmt -> RETURN expression .)
    RETURN          reduce using rule 30 (return_stmt -> RETURN expression .)
    BREAK           reduce using rule 30 (return_stmt -> RETURN expression .)
    CONTINUE        reduce using rule 30 (return_stmt -> RETURN expression .)
    IF              reduce using rule 30 (return_stmt -> RETURN expression .)
    MAPOF           reduce using rule 30 (return_stmt -> RETURN expression .)
    LPAREN          reduce using rule 30 (return_stmt -> RETURN expression .)
    NUMBER_INT      reduce using rule 30 (return_stmt -> RETURN expression .)
    NUMBER_DOUBLE   reduce using rule 30 (return_stmt -> RETURN expression .)
    STRING          reduce using rule 30 (return_stmt -> RETURN expression .)
    BOOLEAN_TRUE    reduce using rule 30 (return_stmt -> RETURN expression .)
    BOOLEAN_FALSE   reduce using rule 30 (return_stmt -> RETURN expression .)
    ID              reduce using rule 30 (return_stmt -> RETURN expression .)
    LISTOF          reduce using rule 30 (return_stmt -> RETURN expression .)
    ARRAYOF         reduce using rule 30 (return_stmt -> RETURN expression .)
    READLINE        reduce using rule 30 (return_stmt -> RETURN expression .)
    $end            reduce using rule 30 (return_stmt -> RETURN expression .)
    RBRACE          reduce using rule 30 (return_stmt -> RETURN expression .)
    ELSE            reduce using rule 30 (return_stmt -> RETURN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MINUS           [ reduce using rule 30 (return_stmt -> RETURN expression .) ]


state 64

    (88) if_else -> IF LPAREN . expression RPAREN block ELSE block
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 97

state 65

    (34) expression -> MAPOF LPAREN . map_entries RPAREN
    (35) map_entries -> . map_entries COMMA map_entry
    (36) map_entries -> . map_entry
    (37) map_entry -> . expression TO expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    map_entries                    shift and go to state 98
    map_entry                      shift and go to state 99
    expression                     shift and go to state 100

state 66

    (50) expression -> MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 50 (expression -> MINUS expression .)
    MINUS           reduce using rule 50 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 50 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 50 (expression -> MINUS expression .)
    LESS            reduce using rule 50 (expression -> MINUS expression .)
    GREATER         reduce using rule 50 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 50 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 50 (expression -> MINUS expression .)
    EQUALS          reduce using rule 50 (expression -> MINUS expression .)
    NOT_EQUALS      reduce using rule 50 (expression -> MINUS expression .)
    AND             reduce using rule 50 (expression -> MINUS expression .)
    OR              reduce using rule 50 (expression -> MINUS expression .)
    VAR             reduce using rule 50 (expression -> MINUS expression .)
    VAL             reduce using rule 50 (expression -> MINUS expression .)
    FUN             reduce using rule 50 (expression -> MINUS expression .)
    CLASS           reduce using rule 50 (expression -> MINUS expression .)
    FOR             reduce using rule 50 (expression -> MINUS expression .)
    WHEN            reduce using rule 50 (expression -> MINUS expression .)
    PRINTLN         reduce using rule 50 (expression -> MINUS expression .)
    PRINT           reduce using rule 50 (expression -> MINUS expression .)
    RETURN          reduce using rule 50 (expression -> MINUS expression .)
    BREAK           reduce using rule 50 (expression -> MINUS expression .)
    CONTINUE        reduce using rule 50 (expression -> MINUS expression .)
    IF              reduce using rule 50 (expression -> MINUS expression .)
    MAPOF           reduce using rule 50 (expression -> MINUS expression .)
    LPAREN          reduce using rule 50 (expression -> MINUS expression .)
    NUMBER_INT      reduce using rule 50 (expression -> MINUS expression .)
    NUMBER_DOUBLE   reduce using rule 50 (expression -> MINUS expression .)
    STRING          reduce using rule 50 (expression -> MINUS expression .)
    BOOLEAN_TRUE    reduce using rule 50 (expression -> MINUS expression .)
    BOOLEAN_FALSE   reduce using rule 50 (expression -> MINUS expression .)
    ID              reduce using rule 50 (expression -> MINUS expression .)
    LISTOF          reduce using rule 50 (expression -> MINUS expression .)
    ARRAYOF         reduce using rule 50 (expression -> MINUS expression .)
    READLINE        reduce using rule 50 (expression -> MINUS expression .)
    $end            reduce using rule 50 (expression -> MINUS expression .)
    RPAREN          reduce using rule 50 (expression -> MINUS expression .)
    RBRACE          reduce using rule 50 (expression -> MINUS expression .)
    ELSE            reduce using rule 50 (expression -> MINUS expression .)
    ARROW           reduce using rule 50 (expression -> MINUS expression .)
    TO              reduce using rule 50 (expression -> MINUS expression .)
    COMMA           reduce using rule 50 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! MULTIPLY        [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! LESS_EQUAL      [ shift and go to state 48 ]
  ! GREATER_EQUAL   [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 67

    (62) expression -> LISTOF LPAREN . expression_list RPAREN
    (63) expression_list -> . expression_list COMMA expression
    (64) expression_list -> . expression
    (65) expression_list -> .
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    RPAREN          reduce using rule 65 (expression_list -> .)
    COMMA           reduce using rule 65 (expression_list -> .)
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression_list                shift and go to state 101
    expression                     shift and go to state 102

state 68

    (87) expression -> ARRAYOF LPAREN . expression_list RPAREN
    (63) expression_list -> . expression_list COMMA expression
    (64) expression_list -> . expression
    (65) expression_list -> .
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    RPAREN          reduce using rule 65 (expression_list -> .)
    COMMA           reduce using rule 65 (expression_list -> .)
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression_list                shift and go to state 103
    expression                     shift and go to state 102

state 69

    (89) expression -> READLINE LPAREN . RPAREN

    RPAREN          shift and go to state 104


state 70

    (16) declaration -> VAR ID ASSIGN . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 105

state 71

    (18) declaration -> VAR ID COLON . type ASSIGN expression
    (25) type -> . TYPE_INT
    (26) type -> . TYPE_DOUBLE
    (27) type -> . TYPE_BOOLEAN
    (28) type -> . TYPE_STRING
    (29) type -> . ID

    TYPE_INT        shift and go to state 108
    TYPE_DOUBLE     shift and go to state 109
    TYPE_BOOLEAN    shift and go to state 110
    TYPE_STRING     shift and go to state 111
    ID              shift and go to state 106

    type                           shift and go to state 107

state 72

    (38) expression -> expression PLUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 38 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 38 (expression -> expression PLUS expression .)
    LESS            reduce using rule 38 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 38 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 38 (expression -> expression PLUS expression .)
    NOT_EQUALS      reduce using rule 38 (expression -> expression PLUS expression .)
    AND             reduce using rule 38 (expression -> expression PLUS expression .)
    OR              reduce using rule 38 (expression -> expression PLUS expression .)
    VAR             reduce using rule 38 (expression -> expression PLUS expression .)
    VAL             reduce using rule 38 (expression -> expression PLUS expression .)
    FUN             reduce using rule 38 (expression -> expression PLUS expression .)
    CLASS           reduce using rule 38 (expression -> expression PLUS expression .)
    FOR             reduce using rule 38 (expression -> expression PLUS expression .)
    WHEN            reduce using rule 38 (expression -> expression PLUS expression .)
    PRINTLN         reduce using rule 38 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 38 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 38 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 38 (expression -> expression PLUS expression .)
    CONTINUE        reduce using rule 38 (expression -> expression PLUS expression .)
    IF              reduce using rule 38 (expression -> expression PLUS expression .)
    MAPOF           reduce using rule 38 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 38 (expression -> expression PLUS expression .)
    NUMBER_INT      reduce using rule 38 (expression -> expression PLUS expression .)
    NUMBER_DOUBLE   reduce using rule 38 (expression -> expression PLUS expression .)
    STRING          reduce using rule 38 (expression -> expression PLUS expression .)
    BOOLEAN_TRUE    reduce using rule 38 (expression -> expression PLUS expression .)
    BOOLEAN_FALSE   reduce using rule 38 (expression -> expression PLUS expression .)
    ID              reduce using rule 38 (expression -> expression PLUS expression .)
    LISTOF          reduce using rule 38 (expression -> expression PLUS expression .)
    ARRAYOF         reduce using rule 38 (expression -> expression PLUS expression .)
    READLINE        reduce using rule 38 (expression -> expression PLUS expression .)
    $end            reduce using rule 38 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 38 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 38 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 38 (expression -> expression PLUS expression .)
    ARROW           reduce using rule 38 (expression -> expression PLUS expression .)
    TO              reduce using rule 38 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 38 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45

  ! MULTIPLY        [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! LESS_EQUAL      [ shift and go to state 48 ]
  ! GREATER_EQUAL   [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 73

    (39) expression -> expression MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 39 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 39 (expression -> expression MINUS expression .)
    LESS            reduce using rule 39 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 39 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 39 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 39 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 39 (expression -> expression MINUS expression .)
    NOT_EQUALS      reduce using rule 39 (expression -> expression MINUS expression .)
    AND             reduce using rule 39 (expression -> expression MINUS expression .)
    OR              reduce using rule 39 (expression -> expression MINUS expression .)
    VAR             reduce using rule 39 (expression -> expression MINUS expression .)
    VAL             reduce using rule 39 (expression -> expression MINUS expression .)
    FUN             reduce using rule 39 (expression -> expression MINUS expression .)
    CLASS           reduce using rule 39 (expression -> expression MINUS expression .)
    FOR             reduce using rule 39 (expression -> expression MINUS expression .)
    WHEN            reduce using rule 39 (expression -> expression MINUS expression .)
    PRINTLN         reduce using rule 39 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 39 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 39 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 39 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 39 (expression -> expression MINUS expression .)
    IF              reduce using rule 39 (expression -> expression MINUS expression .)
    MAPOF           reduce using rule 39 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 39 (expression -> expression MINUS expression .)
    NUMBER_INT      reduce using rule 39 (expression -> expression MINUS expression .)
    NUMBER_DOUBLE   reduce using rule 39 (expression -> expression MINUS expression .)
    STRING          reduce using rule 39 (expression -> expression MINUS expression .)
    BOOLEAN_TRUE    reduce using rule 39 (expression -> expression MINUS expression .)
    BOOLEAN_FALSE   reduce using rule 39 (expression -> expression MINUS expression .)
    ID              reduce using rule 39 (expression -> expression MINUS expression .)
    LISTOF          reduce using rule 39 (expression -> expression MINUS expression .)
    ARRAYOF         reduce using rule 39 (expression -> expression MINUS expression .)
    READLINE        reduce using rule 39 (expression -> expression MINUS expression .)
    $end            reduce using rule 39 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 39 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 39 (expression -> expression MINUS expression .)
    ARROW           reduce using rule 39 (expression -> expression MINUS expression .)
    TO              reduce using rule 39 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 39 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45

  ! MULTIPLY        [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! LESS_EQUAL      [ shift and go to state 48 ]
  ! GREATER_EQUAL   [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 74

    (40) expression -> expression MULTIPLY expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 40 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 40 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 40 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 40 (expression -> expression MULTIPLY expression .)
    LESS            reduce using rule 40 (expression -> expression MULTIPLY expression .)
    GREATER         reduce using rule 40 (expression -> expression MULTIPLY expression .)
    LESS_EQUAL      reduce using rule 40 (expression -> expression MULTIPLY expression .)
    GREATER_EQUAL   reduce using rule 40 (expression -> expression MULTIPLY expression .)
    EQUALS          reduce using rule 40 (expression -> expression MULTIPLY expression .)
    NOT_EQUALS      reduce using rule 40 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 40 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 40 (expression -> expression MULTIPLY expression .)
    VAR             reduce using rule 40 (expression -> expression MULTIPLY expression .)
    VAL             reduce using rule 40 (expression -> expression MULTIPLY expression .)
    FUN             reduce using rule 40 (expression -> expression MULTIPLY expression .)
    CLASS           reduce using rule 40 (expression -> expression MULTIPLY expression .)
    FOR             reduce using rule 40 (expression -> expression MULTIPLY expression .)
    WHEN            reduce using rule 40 (expression -> expression MULTIPLY expression .)
    PRINTLN         reduce using rule 40 (expression -> expression MULTIPLY expression .)
    PRINT           reduce using rule 40 (expression -> expression MULTIPLY expression .)
    RETURN          reduce using rule 40 (expression -> expression MULTIPLY expression .)
    BREAK           reduce using rule 40 (expression -> expression MULTIPLY expression .)
    CONTINUE        reduce using rule 40 (expression -> expression MULTIPLY expression .)
    IF              reduce using rule 40 (expression -> expression MULTIPLY expression .)
    MAPOF           reduce using rule 40 (expression -> expression MULTIPLY expression .)
    LPAREN          reduce using rule 40 (expression -> expression MULTIPLY expression .)
    NUMBER_INT      reduce using rule 40 (expression -> expression MULTIPLY expression .)
    NUMBER_DOUBLE   reduce using rule 40 (expression -> expression MULTIPLY expression .)
    STRING          reduce using rule 40 (expression -> expression MULTIPLY expression .)
    BOOLEAN_TRUE    reduce using rule 40 (expression -> expression MULTIPLY expression .)
    BOOLEAN_FALSE   reduce using rule 40 (expression -> expression MULTIPLY expression .)
    ID              reduce using rule 40 (expression -> expression MULTIPLY expression .)
    LISTOF          reduce using rule 40 (expression -> expression MULTIPLY expression .)
    ARRAYOF         reduce using rule 40 (expression -> expression MULTIPLY expression .)
    READLINE        reduce using rule 40 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 40 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 40 (expression -> expression MULTIPLY expression .)
    RBRACE          reduce using rule 40 (expression -> expression MULTIPLY expression .)
    ELSE            reduce using rule 40 (expression -> expression MULTIPLY expression .)
    ARROW           reduce using rule 40 (expression -> expression MULTIPLY expression .)
    TO              reduce using rule 40 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 40 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! MULTIPLY        [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! LESS_EQUAL      [ shift and go to state 48 ]
  ! GREATER_EQUAL   [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 75

    (41) expression -> expression DIVIDE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 41 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 41 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 41 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 41 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 41 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 41 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 41 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 41 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 41 (expression -> expression DIVIDE expression .)
    NOT_EQUALS      reduce using rule 41 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 41 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 41 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 41 (expression -> expression DIVIDE expression .)
    VAL             reduce using rule 41 (expression -> expression DIVIDE expression .)
    FUN             reduce using rule 41 (expression -> expression DIVIDE expression .)
    CLASS           reduce using rule 41 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 41 (expression -> expression DIVIDE expression .)
    WHEN            reduce using rule 41 (expression -> expression DIVIDE expression .)
    PRINTLN         reduce using rule 41 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 41 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 41 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 41 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 41 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 41 (expression -> expression DIVIDE expression .)
    MAPOF           reduce using rule 41 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 41 (expression -> expression DIVIDE expression .)
    NUMBER_INT      reduce using rule 41 (expression -> expression DIVIDE expression .)
    NUMBER_DOUBLE   reduce using rule 41 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 41 (expression -> expression DIVIDE expression .)
    BOOLEAN_TRUE    reduce using rule 41 (expression -> expression DIVIDE expression .)
    BOOLEAN_FALSE   reduce using rule 41 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 41 (expression -> expression DIVIDE expression .)
    LISTOF          reduce using rule 41 (expression -> expression DIVIDE expression .)
    ARRAYOF         reduce using rule 41 (expression -> expression DIVIDE expression .)
    READLINE        reduce using rule 41 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 41 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 41 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 41 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 41 (expression -> expression DIVIDE expression .)
    ARROW           reduce using rule 41 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 41 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 41 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! MULTIPLY        [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! LESS_EQUAL      [ shift and go to state 48 ]
  ! GREATER_EQUAL   [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 76

    (42) expression -> expression LESS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LESS            reduce using rule 42 (expression -> expression LESS expression .)
    GREATER         reduce using rule 42 (expression -> expression LESS expression .)
    LESS_EQUAL      reduce using rule 42 (expression -> expression LESS expression .)
    GREATER_EQUAL   reduce using rule 42 (expression -> expression LESS expression .)
    EQUALS          reduce using rule 42 (expression -> expression LESS expression .)
    NOT_EQUALS      reduce using rule 42 (expression -> expression LESS expression .)
    AND             reduce using rule 42 (expression -> expression LESS expression .)
    OR              reduce using rule 42 (expression -> expression LESS expression .)
    VAR             reduce using rule 42 (expression -> expression LESS expression .)
    VAL             reduce using rule 42 (expression -> expression LESS expression .)
    FUN             reduce using rule 42 (expression -> expression LESS expression .)
    CLASS           reduce using rule 42 (expression -> expression LESS expression .)
    FOR             reduce using rule 42 (expression -> expression LESS expression .)
    WHEN            reduce using rule 42 (expression -> expression LESS expression .)
    PRINTLN         reduce using rule 42 (expression -> expression LESS expression .)
    PRINT           reduce using rule 42 (expression -> expression LESS expression .)
    RETURN          reduce using rule 42 (expression -> expression LESS expression .)
    BREAK           reduce using rule 42 (expression -> expression LESS expression .)
    CONTINUE        reduce using rule 42 (expression -> expression LESS expression .)
    IF              reduce using rule 42 (expression -> expression LESS expression .)
    MAPOF           reduce using rule 42 (expression -> expression LESS expression .)
    LPAREN          reduce using rule 42 (expression -> expression LESS expression .)
    NUMBER_INT      reduce using rule 42 (expression -> expression LESS expression .)
    NUMBER_DOUBLE   reduce using rule 42 (expression -> expression LESS expression .)
    STRING          reduce using rule 42 (expression -> expression LESS expression .)
    BOOLEAN_TRUE    reduce using rule 42 (expression -> expression LESS expression .)
    BOOLEAN_FALSE   reduce using rule 42 (expression -> expression LESS expression .)
    ID              reduce using rule 42 (expression -> expression LESS expression .)
    LISTOF          reduce using rule 42 (expression -> expression LESS expression .)
    ARRAYOF         reduce using rule 42 (expression -> expression LESS expression .)
    READLINE        reduce using rule 42 (expression -> expression LESS expression .)
    $end            reduce using rule 42 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 42 (expression -> expression LESS expression .)
    RBRACE          reduce using rule 42 (expression -> expression LESS expression .)
    ELSE            reduce using rule 42 (expression -> expression LESS expression .)
    ARROW           reduce using rule 42 (expression -> expression LESS expression .)
    TO              reduce using rule 42 (expression -> expression LESS expression .)
    COMMA           reduce using rule 42 (expression -> expression LESS expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45

  ! PLUS            [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! MULTIPLY        [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! LESS_EQUAL      [ shift and go to state 48 ]
  ! GREATER_EQUAL   [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 77

    (43) expression -> expression GREATER expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LESS            reduce using rule 43 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 43 (expression -> expression GREATER expression .)
    LESS_EQUAL      reduce using rule 43 (expression -> expression GREATER expression .)
    GREATER_EQUAL   reduce using rule 43 (expression -> expression GREATER expression .)
    EQUALS          reduce using rule 43 (expression -> expression GREATER expression .)
    NOT_EQUALS      reduce using rule 43 (expression -> expression GREATER expression .)
    AND             reduce using rule 43 (expression -> expression GREATER expression .)
    OR              reduce using rule 43 (expression -> expression GREATER expression .)
    VAR             reduce using rule 43 (expression -> expression GREATER expression .)
    VAL             reduce using rule 43 (expression -> expression GREATER expression .)
    FUN             reduce using rule 43 (expression -> expression GREATER expression .)
    CLASS           reduce using rule 43 (expression -> expression GREATER expression .)
    FOR             reduce using rule 43 (expression -> expression GREATER expression .)
    WHEN            reduce using rule 43 (expression -> expression GREATER expression .)
    PRINTLN         reduce using rule 43 (expression -> expression GREATER expression .)
    PRINT           reduce using rule 43 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 43 (expression -> expression GREATER expression .)
    BREAK           reduce using rule 43 (expression -> expression GREATER expression .)
    CONTINUE        reduce using rule 43 (expression -> expression GREATER expression .)
    IF              reduce using rule 43 (expression -> expression GREATER expression .)
    MAPOF           reduce using rule 43 (expression -> expression GREATER expression .)
    LPAREN          reduce using rule 43 (expression -> expression GREATER expression .)
    NUMBER_INT      reduce using rule 43 (expression -> expression GREATER expression .)
    NUMBER_DOUBLE   reduce using rule 43 (expression -> expression GREATER expression .)
    STRING          reduce using rule 43 (expression -> expression GREATER expression .)
    BOOLEAN_TRUE    reduce using rule 43 (expression -> expression GREATER expression .)
    BOOLEAN_FALSE   reduce using rule 43 (expression -> expression GREATER expression .)
    ID              reduce using rule 43 (expression -> expression GREATER expression .)
    LISTOF          reduce using rule 43 (expression -> expression GREATER expression .)
    ARRAYOF         reduce using rule 43 (expression -> expression GREATER expression .)
    READLINE        reduce using rule 43 (expression -> expression GREATER expression .)
    $end            reduce using rule 43 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 43 (expression -> expression GREATER expression .)
    RBRACE          reduce using rule 43 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 43 (expression -> expression GREATER expression .)
    ARROW           reduce using rule 43 (expression -> expression GREATER expression .)
    TO              reduce using rule 43 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 43 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45

  ! PLUS            [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! MULTIPLY        [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! LESS_EQUAL      [ shift and go to state 48 ]
  ! GREATER_EQUAL   [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 78

    (44) expression -> expression LESS_EQUAL expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LESS            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    GREATER         reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    EQUALS          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUALS      reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    AND             reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    OR              reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    VAR             reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    VAL             reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    FUN             reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    CLASS           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    WHEN            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    PRINTLN         reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    PRINT           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    RETURN          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    BREAK           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    CONTINUE        reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    MAPOF           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    LPAREN          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    NUMBER_INT      reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    NUMBER_DOUBLE   reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN_TRUE    reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN_FALSE   reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ID              reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    LISTOF          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ARRAYOF         reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    READLINE        reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    RBRACE          reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    ARROW           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    TO              reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 44 (expression -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45

  ! PLUS            [ reduce using rule 44 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression LESS_EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 44 (expression -> expression LESS_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression LESS_EQUAL expression .) ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! LESS_EQUAL      [ shift and go to state 48 ]
  ! GREATER_EQUAL   [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 79

    (45) expression -> expression GREATER_EQUAL expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LESS            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    GREATER         reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    EQUALS          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUALS      reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    OR              reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    VAR             reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    VAL             reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    FUN             reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    CLASS           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    WHEN            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    PRINTLN         reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    PRINT           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    RETURN          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    BREAK           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    CONTINUE        reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    MAPOF           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    LPAREN          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    NUMBER_INT      reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    NUMBER_DOUBLE   reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN_TRUE    reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN_FALSE   reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ID              reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    LISTOF          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ARRAYOF         reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    READLINE        reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    RBRACE          reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    ARROW           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    TO              reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 45 (expression -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45

  ! PLUS            [ reduce using rule 45 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression GREATER_EQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 45 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression GREATER_EQUAL expression .) ]
  ! LESS            [ shift and go to state 46 ]
  ! GREATER         [ shift and go to state 47 ]
  ! LESS_EQUAL      [ shift and go to state 48 ]
  ! GREATER_EQUAL   [ shift and go to state 49 ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 80

    (46) expression -> expression EQUALS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    EQUALS          reduce using rule 46 (expression -> expression EQUALS expression .)
    NOT_EQUALS      reduce using rule 46 (expression -> expression EQUALS expression .)
    AND             reduce using rule 46 (expression -> expression EQUALS expression .)
    OR              reduce using rule 46 (expression -> expression EQUALS expression .)
    VAR             reduce using rule 46 (expression -> expression EQUALS expression .)
    VAL             reduce using rule 46 (expression -> expression EQUALS expression .)
    FUN             reduce using rule 46 (expression -> expression EQUALS expression .)
    CLASS           reduce using rule 46 (expression -> expression EQUALS expression .)
    FOR             reduce using rule 46 (expression -> expression EQUALS expression .)
    WHEN            reduce using rule 46 (expression -> expression EQUALS expression .)
    PRINTLN         reduce using rule 46 (expression -> expression EQUALS expression .)
    PRINT           reduce using rule 46 (expression -> expression EQUALS expression .)
    RETURN          reduce using rule 46 (expression -> expression EQUALS expression .)
    BREAK           reduce using rule 46 (expression -> expression EQUALS expression .)
    CONTINUE        reduce using rule 46 (expression -> expression EQUALS expression .)
    IF              reduce using rule 46 (expression -> expression EQUALS expression .)
    MAPOF           reduce using rule 46 (expression -> expression EQUALS expression .)
    LPAREN          reduce using rule 46 (expression -> expression EQUALS expression .)
    NUMBER_INT      reduce using rule 46 (expression -> expression EQUALS expression .)
    NUMBER_DOUBLE   reduce using rule 46 (expression -> expression EQUALS expression .)
    STRING          reduce using rule 46 (expression -> expression EQUALS expression .)
    BOOLEAN_TRUE    reduce using rule 46 (expression -> expression EQUALS expression .)
    BOOLEAN_FALSE   reduce using rule 46 (expression -> expression EQUALS expression .)
    ID              reduce using rule 46 (expression -> expression EQUALS expression .)
    LISTOF          reduce using rule 46 (expression -> expression EQUALS expression .)
    ARRAYOF         reduce using rule 46 (expression -> expression EQUALS expression .)
    READLINE        reduce using rule 46 (expression -> expression EQUALS expression .)
    $end            reduce using rule 46 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 46 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 46 (expression -> expression EQUALS expression .)
    ELSE            reduce using rule 46 (expression -> expression EQUALS expression .)
    ARROW           reduce using rule 46 (expression -> expression EQUALS expression .)
    TO              reduce using rule 46 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 46 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49

  ! PLUS            [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! LESS            [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! GREATER         [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 46 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 81

    (47) expression -> expression NOT_EQUALS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    EQUALS          reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    NOT_EQUALS      reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    AND             reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    OR              reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    VAR             reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    VAL             reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    FUN             reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    CLASS           reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    FOR             reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    WHEN            reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    PRINTLN         reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    PRINT           reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    RETURN          reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    BREAK           reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    CONTINUE        reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    IF              reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    MAPOF           reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    LPAREN          reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    NUMBER_INT      reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    NUMBER_DOUBLE   reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    STRING          reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    BOOLEAN_TRUE    reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    BOOLEAN_FALSE   reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    ID              reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    LISTOF          reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    ARRAYOF         reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    READLINE        reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    $end            reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    RPAREN          reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    RBRACE          reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    ELSE            reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    ARROW           reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    TO              reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    COMMA           reduce using rule 47 (expression -> expression NOT_EQUALS expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49

  ! PLUS            [ reduce using rule 47 (expression -> expression NOT_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression NOT_EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 47 (expression -> expression NOT_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS            [ reduce using rule 47 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER         [ reduce using rule 47 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 47 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 47 (expression -> expression NOT_EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 50 ]
  ! NOT_EQUALS      [ shift and go to state 51 ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 82

    (48) expression -> expression AND expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    AND             reduce using rule 48 (expression -> expression AND expression .)
    OR              reduce using rule 48 (expression -> expression AND expression .)
    VAR             reduce using rule 48 (expression -> expression AND expression .)
    VAL             reduce using rule 48 (expression -> expression AND expression .)
    FUN             reduce using rule 48 (expression -> expression AND expression .)
    CLASS           reduce using rule 48 (expression -> expression AND expression .)
    FOR             reduce using rule 48 (expression -> expression AND expression .)
    WHEN            reduce using rule 48 (expression -> expression AND expression .)
    PRINTLN         reduce using rule 48 (expression -> expression AND expression .)
    PRINT           reduce using rule 48 (expression -> expression AND expression .)
    RETURN          reduce using rule 48 (expression -> expression AND expression .)
    BREAK           reduce using rule 48 (expression -> expression AND expression .)
    CONTINUE        reduce using rule 48 (expression -> expression AND expression .)
    IF              reduce using rule 48 (expression -> expression AND expression .)
    MAPOF           reduce using rule 48 (expression -> expression AND expression .)
    LPAREN          reduce using rule 48 (expression -> expression AND expression .)
    NUMBER_INT      reduce using rule 48 (expression -> expression AND expression .)
    NUMBER_DOUBLE   reduce using rule 48 (expression -> expression AND expression .)
    STRING          reduce using rule 48 (expression -> expression AND expression .)
    BOOLEAN_TRUE    reduce using rule 48 (expression -> expression AND expression .)
    BOOLEAN_FALSE   reduce using rule 48 (expression -> expression AND expression .)
    ID              reduce using rule 48 (expression -> expression AND expression .)
    LISTOF          reduce using rule 48 (expression -> expression AND expression .)
    ARRAYOF         reduce using rule 48 (expression -> expression AND expression .)
    READLINE        reduce using rule 48 (expression -> expression AND expression .)
    $end            reduce using rule 48 (expression -> expression AND expression .)
    RPAREN          reduce using rule 48 (expression -> expression AND expression .)
    RBRACE          reduce using rule 48 (expression -> expression AND expression .)
    ELSE            reduce using rule 48 (expression -> expression AND expression .)
    ARROW           reduce using rule 48 (expression -> expression AND expression .)
    TO              reduce using rule 48 (expression -> expression AND expression .)
    COMMA           reduce using rule 48 (expression -> expression AND expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51

  ! PLUS            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! NOT_EQUALS      [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 52 ]
  ! OR              [ shift and go to state 53 ]


state 83

    (49) expression -> expression OR expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    OR              reduce using rule 49 (expression -> expression OR expression .)
    VAR             reduce using rule 49 (expression -> expression OR expression .)
    VAL             reduce using rule 49 (expression -> expression OR expression .)
    FUN             reduce using rule 49 (expression -> expression OR expression .)
    CLASS           reduce using rule 49 (expression -> expression OR expression .)
    FOR             reduce using rule 49 (expression -> expression OR expression .)
    WHEN            reduce using rule 49 (expression -> expression OR expression .)
    PRINTLN         reduce using rule 49 (expression -> expression OR expression .)
    PRINT           reduce using rule 49 (expression -> expression OR expression .)
    RETURN          reduce using rule 49 (expression -> expression OR expression .)
    BREAK           reduce using rule 49 (expression -> expression OR expression .)
    CONTINUE        reduce using rule 49 (expression -> expression OR expression .)
    IF              reduce using rule 49 (expression -> expression OR expression .)
    MAPOF           reduce using rule 49 (expression -> expression OR expression .)
    LPAREN          reduce using rule 49 (expression -> expression OR expression .)
    NUMBER_INT      reduce using rule 49 (expression -> expression OR expression .)
    NUMBER_DOUBLE   reduce using rule 49 (expression -> expression OR expression .)
    STRING          reduce using rule 49 (expression -> expression OR expression .)
    BOOLEAN_TRUE    reduce using rule 49 (expression -> expression OR expression .)
    BOOLEAN_FALSE   reduce using rule 49 (expression -> expression OR expression .)
    ID              reduce using rule 49 (expression -> expression OR expression .)
    LISTOF          reduce using rule 49 (expression -> expression OR expression .)
    ARRAYOF         reduce using rule 49 (expression -> expression OR expression .)
    READLINE        reduce using rule 49 (expression -> expression OR expression .)
    $end            reduce using rule 49 (expression -> expression OR expression .)
    RPAREN          reduce using rule 49 (expression -> expression OR expression .)
    RBRACE          reduce using rule 49 (expression -> expression OR expression .)
    ELSE            reduce using rule 49 (expression -> expression OR expression .)
    ARROW           reduce using rule 49 (expression -> expression OR expression .)
    TO              reduce using rule 49 (expression -> expression OR expression .)
    COMMA           reduce using rule 49 (expression -> expression OR expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52

  ! PLUS            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 53 ]


state 84

    (17) declaration -> VAL ID ASSIGN . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 112

state 85

    (19) declaration -> VAL ID COLON . type ASSIGN expression
    (25) type -> . TYPE_INT
    (26) type -> . TYPE_DOUBLE
    (27) type -> . TYPE_BOOLEAN
    (28) type -> . TYPE_STRING
    (29) type -> . ID

    TYPE_INT        shift and go to state 108
    TYPE_DOUBLE     shift and go to state 109
    TYPE_BOOLEAN    shift and go to state 110
    TYPE_STRING     shift and go to state 111
    ID              shift and go to state 106

    type                           shift and go to state 113

state 86

    (83) function_def -> FUN ID LPAREN . param_list_opt RPAREN COLON type block
    (84) function_def -> FUN ID LPAREN . param_list_opt RPAREN block
    (20) param_list_opt -> . param_list
    (21) param_list_opt -> .
    (22) param_list -> . param_list COMMA param
    (23) param_list -> . param
    (24) param -> . ID COLON type

    RPAREN          reduce using rule 21 (param_list_opt -> .)
    ID              shift and go to state 114

    param_list_opt                 shift and go to state 115
    param_list                     shift and go to state 116
    param                          shift and go to state 117

state 87

    (51) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LESS_EQUAL      reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL   reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NOT_EQUALS      reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    VAL             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    FUN             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    CLASS           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    WHEN            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    MAPOF           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    NUMBER_DOUBLE   reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    BOOLEAN_TRUE    reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    BOOLEAN_FALSE   reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    LISTOF          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    ARRAYOF         reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    READLINE        reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    ARROW           reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 51 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 51 (expression -> LPAREN expression RPAREN .)


state 88

    (72) class_def -> CLASS ID LBRACE . class_body RBRACE
    (73) class_body -> . class_body class_member
    (74) class_body -> . class_member
    (75) class_body -> .
    (76) class_member -> . property_def
    (77) class_member -> . method_def
    (78) property_def -> . VAR ID COLON type
    (79) property_def -> . VAL ID COLON type
    (80) property_def -> . VAR ID COLON type ASSIGN expression
    (81) property_def -> . VAL ID COLON type ASSIGN expression
    (82) method_def -> . FUN ID LPAREN param_list_opt RPAREN block

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
    RBRACE          reduce using rule 75 (class_body -> .)
    VAR             shift and go to state 122
    VAL             shift and go to state 123
    FUN             shift and go to state 124

  ! VAR             [ reduce using rule 75 (class_body -> .) ]
  ! VAL             [ reduce using rule 75 (class_body -> .) ]
  ! FUN             [ reduce using rule 75 (class_body -> .) ]

    class_body                     shift and go to state 118
    class_member                   shift and go to state 119
    property_def                   shift and go to state 120
    method_def                     shift and go to state 121

state 89

    (31) for_loop -> FOR LPAREN ID . IN expression RPAREN loop_body

    IN              shift and go to state 125


state 90

    (66) when_stmt -> WHEN LPAREN expression . RPAREN LBRACE when_branches RBRACE
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 126
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 91

    (71) when_stmt -> WHEN LBRACE when_branches . RBRACE
    (67) when_branches -> when_branches . when_branch
    (69) when_branch -> . expression ARROW statement_list
    (70) when_branch -> . ELSE ARROW statement_list
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    RBRACE          shift and go to state 127
    ELSE            shift and go to state 94
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    when_branch                    shift and go to state 128
    expression                     shift and go to state 93

state 92

    (68) when_branches -> when_branch .

    RBRACE          reduce using rule 68 (when_branches -> when_branch .)
    ELSE            reduce using rule 68 (when_branches -> when_branch .)
    MAPOF           reduce using rule 68 (when_branches -> when_branch .)
    MINUS           reduce using rule 68 (when_branches -> when_branch .)
    LPAREN          reduce using rule 68 (when_branches -> when_branch .)
    NUMBER_INT      reduce using rule 68 (when_branches -> when_branch .)
    NUMBER_DOUBLE   reduce using rule 68 (when_branches -> when_branch .)
    STRING          reduce using rule 68 (when_branches -> when_branch .)
    BOOLEAN_TRUE    reduce using rule 68 (when_branches -> when_branch .)
    BOOLEAN_FALSE   reduce using rule 68 (when_branches -> when_branch .)
    ID              reduce using rule 68 (when_branches -> when_branch .)
    LISTOF          reduce using rule 68 (when_branches -> when_branch .)
    ARRAYOF         reduce using rule 68 (when_branches -> when_branch .)
    READLINE        reduce using rule 68 (when_branches -> when_branch .)


state 93

    (69) when_branch -> expression . ARROW statement_list
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    ARROW           shift and go to state 129
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 94

    (70) when_branch -> ELSE . ARROW statement_list

    ARROW           shift and go to state 130


state 95

    (58) print_stmt -> PRINTLN LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 131
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 96

    (59) print_stmt -> PRINT LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 132
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 97

    (88) if_else -> IF LPAREN expression . RPAREN block ELSE block
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 133
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 98

    (34) expression -> MAPOF LPAREN map_entries . RPAREN
    (35) map_entries -> map_entries . COMMA map_entry

    RPAREN          shift and go to state 134
    COMMA           shift and go to state 135


state 99

    (36) map_entries -> map_entry .

    RPAREN          reduce using rule 36 (map_entries -> map_entry .)
    COMMA           reduce using rule 36 (map_entries -> map_entry .)


state 100

    (37) map_entry -> expression . TO expression
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    TO              shift and go to state 136
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 101

    (62) expression -> LISTOF LPAREN expression_list . RPAREN
    (63) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 137
    COMMA           shift and go to state 138


state 102

    (64) expression_list -> expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 64 (expression_list -> expression .)
    COMMA           reduce using rule 64 (expression_list -> expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 103

    (87) expression -> ARRAYOF LPAREN expression_list . RPAREN
    (63) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 139
    COMMA           shift and go to state 138


state 104

    (89) expression -> READLINE LPAREN RPAREN .

    PLUS            reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    MINUS           reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    MULTIPLY        reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    DIVIDE          reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    LESS            reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    GREATER         reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    EQUALS          reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    NOT_EQUALS      reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    AND             reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    OR              reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    VAR             reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    VAL             reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    FUN             reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    CLASS           reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    FOR             reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    WHEN            reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    PRINTLN         reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    PRINT           reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    RETURN          reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    BREAK           reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    CONTINUE        reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    IF              reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    MAPOF           reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    LPAREN          reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    NUMBER_INT      reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    NUMBER_DOUBLE   reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    STRING          reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    BOOLEAN_TRUE    reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    BOOLEAN_FALSE   reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    ID              reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    LISTOF          reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    ARRAYOF         reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    READLINE        reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    $end            reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    RPAREN          reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    RBRACE          reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    ELSE            reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    ARROW           reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    TO              reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)
    COMMA           reduce using rule 89 (expression -> READLINE LPAREN RPAREN .)


state 105

    (16) declaration -> VAR ID ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    VAR             reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    VAL             reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    FUN             reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    CLASS           reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    FOR             reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    WHEN            reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    PRINTLN         reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    PRINT           reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    RETURN          reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    BREAK           reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    CONTINUE        reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    IF              reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    MAPOF           reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    LPAREN          reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    NUMBER_INT      reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    NUMBER_DOUBLE   reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    STRING          reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    BOOLEAN_TRUE    reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    BOOLEAN_FALSE   reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    ID              reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    LISTOF          reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    ARRAYOF         reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    READLINE        reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    $end            reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    RBRACE          reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    ELSE            reduce using rule 16 (declaration -> VAR ID ASSIGN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MINUS           [ reduce using rule 16 (declaration -> VAR ID ASSIGN expression .) ]


state 106

    (29) type -> ID .

    ASSIGN          reduce using rule 29 (type -> ID .)
    COMMA           reduce using rule 29 (type -> ID .)
    RPAREN          reduce using rule 29 (type -> ID .)
    LBRACE          reduce using rule 29 (type -> ID .)
    RBRACE          reduce using rule 29 (type -> ID .)
    VAR             reduce using rule 29 (type -> ID .)
    VAL             reduce using rule 29 (type -> ID .)
    FUN             reduce using rule 29 (type -> ID .)


state 107

    (18) declaration -> VAR ID COLON type . ASSIGN expression

    ASSIGN          shift and go to state 140


state 108

    (25) type -> TYPE_INT .

    ASSIGN          reduce using rule 25 (type -> TYPE_INT .)
    COMMA           reduce using rule 25 (type -> TYPE_INT .)
    RPAREN          reduce using rule 25 (type -> TYPE_INT .)
    LBRACE          reduce using rule 25 (type -> TYPE_INT .)
    RBRACE          reduce using rule 25 (type -> TYPE_INT .)
    VAR             reduce using rule 25 (type -> TYPE_INT .)
    VAL             reduce using rule 25 (type -> TYPE_INT .)
    FUN             reduce using rule 25 (type -> TYPE_INT .)


state 109

    (26) type -> TYPE_DOUBLE .

    ASSIGN          reduce using rule 26 (type -> TYPE_DOUBLE .)
    COMMA           reduce using rule 26 (type -> TYPE_DOUBLE .)
    RPAREN          reduce using rule 26 (type -> TYPE_DOUBLE .)
    LBRACE          reduce using rule 26 (type -> TYPE_DOUBLE .)
    RBRACE          reduce using rule 26 (type -> TYPE_DOUBLE .)
    VAR             reduce using rule 26 (type -> TYPE_DOUBLE .)
    VAL             reduce using rule 26 (type -> TYPE_DOUBLE .)
    FUN             reduce using rule 26 (type -> TYPE_DOUBLE .)


state 110

    (27) type -> TYPE_BOOLEAN .

    ASSIGN          reduce using rule 27 (type -> TYPE_BOOLEAN .)
    COMMA           reduce using rule 27 (type -> TYPE_BOOLEAN .)
    RPAREN          reduce using rule 27 (type -> TYPE_BOOLEAN .)
    LBRACE          reduce using rule 27 (type -> TYPE_BOOLEAN .)
    RBRACE          reduce using rule 27 (type -> TYPE_BOOLEAN .)
    VAR             reduce using rule 27 (type -> TYPE_BOOLEAN .)
    VAL             reduce using rule 27 (type -> TYPE_BOOLEAN .)
    FUN             reduce using rule 27 (type -> TYPE_BOOLEAN .)


state 111

    (28) type -> TYPE_STRING .

    ASSIGN          reduce using rule 28 (type -> TYPE_STRING .)
    COMMA           reduce using rule 28 (type -> TYPE_STRING .)
    RPAREN          reduce using rule 28 (type -> TYPE_STRING .)
    LBRACE          reduce using rule 28 (type -> TYPE_STRING .)
    RBRACE          reduce using rule 28 (type -> TYPE_STRING .)
    VAR             reduce using rule 28 (type -> TYPE_STRING .)
    VAL             reduce using rule 28 (type -> TYPE_STRING .)
    FUN             reduce using rule 28 (type -> TYPE_STRING .)


state 112

    (17) declaration -> VAL ID ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    VAR             reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    VAL             reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    FUN             reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    CLASS           reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    FOR             reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    WHEN            reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    PRINTLN         reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    PRINT           reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    RETURN          reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    BREAK           reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    CONTINUE        reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    IF              reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    MAPOF           reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    LPAREN          reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    NUMBER_INT      reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    NUMBER_DOUBLE   reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    STRING          reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    BOOLEAN_TRUE    reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    BOOLEAN_FALSE   reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    ID              reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    LISTOF          reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    ARRAYOF         reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    READLINE        reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    $end            reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    RBRACE          reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    ELSE            reduce using rule 17 (declaration -> VAL ID ASSIGN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MINUS           [ reduce using rule 17 (declaration -> VAL ID ASSIGN expression .) ]


state 113

    (19) declaration -> VAL ID COLON type . ASSIGN expression

    ASSIGN          shift and go to state 141


state 114

    (24) param -> ID . COLON type

    COLON           shift and go to state 142


state 115

    (83) function_def -> FUN ID LPAREN param_list_opt . RPAREN COLON type block
    (84) function_def -> FUN ID LPAREN param_list_opt . RPAREN block

    RPAREN          shift and go to state 143


state 116

    (20) param_list_opt -> param_list .
    (22) param_list -> param_list . COMMA param

    RPAREN          reduce using rule 20 (param_list_opt -> param_list .)
    COMMA           shift and go to state 144


state 117

    (23) param_list -> param .

    COMMA           reduce using rule 23 (param_list -> param .)
    RPAREN          reduce using rule 23 (param_list -> param .)


state 118

    (72) class_def -> CLASS ID LBRACE class_body . RBRACE
    (73) class_body -> class_body . class_member
    (76) class_member -> . property_def
    (77) class_member -> . method_def
    (78) property_def -> . VAR ID COLON type
    (79) property_def -> . VAL ID COLON type
    (80) property_def -> . VAR ID COLON type ASSIGN expression
    (81) property_def -> . VAL ID COLON type ASSIGN expression
    (82) method_def -> . FUN ID LPAREN param_list_opt RPAREN block

    RBRACE          shift and go to state 145
    VAR             shift and go to state 122
    VAL             shift and go to state 123
    FUN             shift and go to state 124

    class_member                   shift and go to state 146
    property_def                   shift and go to state 120
    method_def                     shift and go to state 121

state 119

    (74) class_body -> class_member .

    RBRACE          reduce using rule 74 (class_body -> class_member .)
    VAR             reduce using rule 74 (class_body -> class_member .)
    VAL             reduce using rule 74 (class_body -> class_member .)
    FUN             reduce using rule 74 (class_body -> class_member .)


state 120

    (76) class_member -> property_def .

    RBRACE          reduce using rule 76 (class_member -> property_def .)
    VAR             reduce using rule 76 (class_member -> property_def .)
    VAL             reduce using rule 76 (class_member -> property_def .)
    FUN             reduce using rule 76 (class_member -> property_def .)


state 121

    (77) class_member -> method_def .

    RBRACE          reduce using rule 77 (class_member -> method_def .)
    VAR             reduce using rule 77 (class_member -> method_def .)
    VAL             reduce using rule 77 (class_member -> method_def .)
    FUN             reduce using rule 77 (class_member -> method_def .)


state 122

    (78) property_def -> VAR . ID COLON type
    (80) property_def -> VAR . ID COLON type ASSIGN expression

    ID              shift and go to state 147


state 123

    (79) property_def -> VAL . ID COLON type
    (81) property_def -> VAL . ID COLON type ASSIGN expression

    ID              shift and go to state 148


state 124

    (82) method_def -> FUN . ID LPAREN param_list_opt RPAREN block

    ID              shift and go to state 149


state 125

    (31) for_loop -> FOR LPAREN ID IN . expression RPAREN loop_body
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 150

state 126

    (66) when_stmt -> WHEN LPAREN expression RPAREN . LBRACE when_branches RBRACE

    LBRACE          shift and go to state 151


state 127

    (71) when_stmt -> WHEN LBRACE when_branches RBRACE .

    VAR             reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    VAL             reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    FUN             reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    CLASS           reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    FOR             reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    WHEN            reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    PRINTLN         reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    PRINT           reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    RETURN          reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    BREAK           reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    CONTINUE        reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    IF              reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    MAPOF           reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    MINUS           reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    LPAREN          reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    NUMBER_INT      reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    NUMBER_DOUBLE   reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    STRING          reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    BOOLEAN_TRUE    reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    BOOLEAN_FALSE   reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    ID              reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    LISTOF          reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    ARRAYOF         reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    READLINE        reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    $end            reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    RBRACE          reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)
    ELSE            reduce using rule 71 (when_stmt -> WHEN LBRACE when_branches RBRACE .)


state 128

    (67) when_branches -> when_branches when_branch .

    RBRACE          reduce using rule 67 (when_branches -> when_branches when_branch .)
    ELSE            reduce using rule 67 (when_branches -> when_branches when_branch .)
    MAPOF           reduce using rule 67 (when_branches -> when_branches when_branch .)
    MINUS           reduce using rule 67 (when_branches -> when_branches when_branch .)
    LPAREN          reduce using rule 67 (when_branches -> when_branches when_branch .)
    NUMBER_INT      reduce using rule 67 (when_branches -> when_branches when_branch .)
    NUMBER_DOUBLE   reduce using rule 67 (when_branches -> when_branches when_branch .)
    STRING          reduce using rule 67 (when_branches -> when_branches when_branch .)
    BOOLEAN_TRUE    reduce using rule 67 (when_branches -> when_branches when_branch .)
    BOOLEAN_FALSE   reduce using rule 67 (when_branches -> when_branches when_branch .)
    ID              reduce using rule 67 (when_branches -> when_branches when_branch .)
    LISTOF          reduce using rule 67 (when_branches -> when_branches when_branch .)
    ARRAYOF         reduce using rule 67 (when_branches -> when_branches when_branch .)
    READLINE        reduce using rule 67 (when_branches -> when_branches when_branch .)


state 129

    (69) when_branch -> expression ARROW . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . class_def
    (8) statement -> . for_loop
    (9) statement -> . when_stmt
    (10) statement -> . print_stmt
    (11) statement -> . return_stmt
    (12) statement -> . break_stmt
    (13) statement -> . continue_stmt
    (14) statement -> . if_else
    (15) statement -> . expression_stmt
    (16) declaration -> . VAR ID ASSIGN expression
    (17) declaration -> . VAL ID ASSIGN expression
    (18) declaration -> . VAR ID COLON type ASSIGN expression
    (19) declaration -> . VAL ID COLON type ASSIGN expression
    (83) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> . FUN ID LPAREN param_list_opt RPAREN block
    (72) class_def -> . CLASS ID LBRACE class_body RBRACE
    (31) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (66) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (58) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (59) print_stmt -> . PRINT LPAREN expression RPAREN
    (30) return_stmt -> . RETURN expression
    (85) break_stmt -> . BREAK
    (86) continue_stmt -> . CONTINUE
    (88) if_else -> . IF LPAREN expression RPAREN block ELSE block
    (61) expression_stmt -> . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 4 (statement_list -> .)
    ELSE            reduce using rule 4 (statement_list -> .)
    VAR             shift and go to state 15
    VAL             shift and go to state 18
    FUN             shift and go to state 19
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    IF              shift and go to state 29
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

  ! VAR             [ reduce using rule 4 (statement_list -> .) ]
  ! VAL             [ reduce using rule 4 (statement_list -> .) ]
  ! FUN             [ reduce using rule 4 (statement_list -> .) ]
  ! CLASS           [ reduce using rule 4 (statement_list -> .) ]
  ! FOR             [ reduce using rule 4 (statement_list -> .) ]
  ! WHEN            [ reduce using rule 4 (statement_list -> .) ]
  ! PRINTLN         [ reduce using rule 4 (statement_list -> .) ]
  ! PRINT           [ reduce using rule 4 (statement_list -> .) ]
  ! RETURN          [ reduce using rule 4 (statement_list -> .) ]
  ! BREAK           [ reduce using rule 4 (statement_list -> .) ]
  ! CONTINUE        [ reduce using rule 4 (statement_list -> .) ]
  ! IF              [ reduce using rule 4 (statement_list -> .) ]
  ! MAPOF           [ reduce using rule 4 (statement_list -> .) ]
  ! MINUS           [ reduce using rule 4 (statement_list -> .) ]
  ! LPAREN          [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_INT      [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 4 (statement_list -> .) ]
  ! STRING          [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 4 (statement_list -> .) ]
  ! ID              [ reduce using rule 4 (statement_list -> .) ]
  ! LISTOF          [ reduce using rule 4 (statement_list -> .) ]
  ! ARRAYOF         [ reduce using rule 4 (statement_list -> .) ]
  ! READLINE        [ reduce using rule 4 (statement_list -> .) ]

    expression                     shift and go to state 17
    statement_list                 shift and go to state 152
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    class_def                      shift and go to state 6
    for_loop                       shift and go to state 7
    when_stmt                      shift and go to state 8
    print_stmt                     shift and go to state 9
    return_stmt                    shift and go to state 10
    break_stmt                     shift and go to state 11
    continue_stmt                  shift and go to state 12
    if_else                        shift and go to state 13
    expression_stmt                shift and go to state 14

state 130

    (70) when_branch -> ELSE ARROW . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . class_def
    (8) statement -> . for_loop
    (9) statement -> . when_stmt
    (10) statement -> . print_stmt
    (11) statement -> . return_stmt
    (12) statement -> . break_stmt
    (13) statement -> . continue_stmt
    (14) statement -> . if_else
    (15) statement -> . expression_stmt
    (16) declaration -> . VAR ID ASSIGN expression
    (17) declaration -> . VAL ID ASSIGN expression
    (18) declaration -> . VAR ID COLON type ASSIGN expression
    (19) declaration -> . VAL ID COLON type ASSIGN expression
    (83) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> . FUN ID LPAREN param_list_opt RPAREN block
    (72) class_def -> . CLASS ID LBRACE class_body RBRACE
    (31) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (66) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (58) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (59) print_stmt -> . PRINT LPAREN expression RPAREN
    (30) return_stmt -> . RETURN expression
    (85) break_stmt -> . BREAK
    (86) continue_stmt -> . CONTINUE
    (88) if_else -> . IF LPAREN expression RPAREN block ELSE block
    (61) expression_stmt -> . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 4 (statement_list -> .)
    ELSE            reduce using rule 4 (statement_list -> .)
    VAR             shift and go to state 15
    VAL             shift and go to state 18
    FUN             shift and go to state 19
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    IF              shift and go to state 29
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

  ! VAR             [ reduce using rule 4 (statement_list -> .) ]
  ! VAL             [ reduce using rule 4 (statement_list -> .) ]
  ! FUN             [ reduce using rule 4 (statement_list -> .) ]
  ! CLASS           [ reduce using rule 4 (statement_list -> .) ]
  ! FOR             [ reduce using rule 4 (statement_list -> .) ]
  ! WHEN            [ reduce using rule 4 (statement_list -> .) ]
  ! PRINTLN         [ reduce using rule 4 (statement_list -> .) ]
  ! PRINT           [ reduce using rule 4 (statement_list -> .) ]
  ! RETURN          [ reduce using rule 4 (statement_list -> .) ]
  ! BREAK           [ reduce using rule 4 (statement_list -> .) ]
  ! CONTINUE        [ reduce using rule 4 (statement_list -> .) ]
  ! IF              [ reduce using rule 4 (statement_list -> .) ]
  ! MAPOF           [ reduce using rule 4 (statement_list -> .) ]
  ! MINUS           [ reduce using rule 4 (statement_list -> .) ]
  ! LPAREN          [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_INT      [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 4 (statement_list -> .) ]
  ! STRING          [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 4 (statement_list -> .) ]
  ! ID              [ reduce using rule 4 (statement_list -> .) ]
  ! LISTOF          [ reduce using rule 4 (statement_list -> .) ]
  ! ARRAYOF         [ reduce using rule 4 (statement_list -> .) ]
  ! READLINE        [ reduce using rule 4 (statement_list -> .) ]

    statement_list                 shift and go to state 153
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    class_def                      shift and go to state 6
    for_loop                       shift and go to state 7
    when_stmt                      shift and go to state 8
    print_stmt                     shift and go to state 9
    return_stmt                    shift and go to state 10
    break_stmt                     shift and go to state 11
    continue_stmt                  shift and go to state 12
    if_else                        shift and go to state 13
    expression_stmt                shift and go to state 14
    expression                     shift and go to state 17

state 131

    (58) print_stmt -> PRINTLN LPAREN expression RPAREN .

    VAR             reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    VAL             reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    FUN             reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    CLASS           reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    FOR             reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    WHEN            reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    PRINT           reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    RETURN          reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    BREAK           reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    IF              reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    MAPOF           reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    MINUS           reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    LPAREN          reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    NUMBER_DOUBLE   reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    STRING          reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    BOOLEAN_TRUE    reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    BOOLEAN_FALSE   reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    ID              reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    LISTOF          reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    ARRAYOF         reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    READLINE        reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    $end            reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    RBRACE          reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)
    ELSE            reduce using rule 58 (print_stmt -> PRINTLN LPAREN expression RPAREN .)


state 132

    (59) print_stmt -> PRINT LPAREN expression RPAREN .

    VAR             reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    VAL             reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    FUN             reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    CLASS           reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    FOR             reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    WHEN            reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    PRINTLN         reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    RETURN          reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    BREAK           reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    MAPOF           reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    MINUS           reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    LPAREN          reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    NUMBER_INT      reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    NUMBER_DOUBLE   reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    STRING          reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    BOOLEAN_TRUE    reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    BOOLEAN_FALSE   reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    ID              reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    LISTOF          reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    ARRAYOF         reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    READLINE        reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    RBRACE          reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)
    ELSE            reduce using rule 59 (print_stmt -> PRINT LPAREN expression RPAREN .)


state 133

    (88) if_else -> IF LPAREN expression RPAREN . block ELSE block
    (60) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 155

    block                          shift and go to state 154

state 134

    (34) expression -> MAPOF LPAREN map_entries RPAREN .

    PLUS            reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    MINUS           reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    MULTIPLY        reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    DIVIDE          reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    LESS            reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    GREATER         reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    LESS_EQUAL      reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    GREATER_EQUAL   reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    EQUALS          reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    NOT_EQUALS      reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    AND             reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    OR              reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    VAR             reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    VAL             reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    FUN             reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    CLASS           reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    FOR             reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    WHEN            reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    PRINTLN         reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    PRINT           reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    RETURN          reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    BREAK           reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    CONTINUE        reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    IF              reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    MAPOF           reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    LPAREN          reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    NUMBER_INT      reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    NUMBER_DOUBLE   reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    STRING          reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    BOOLEAN_TRUE    reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    BOOLEAN_FALSE   reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    ID              reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    LISTOF          reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    ARRAYOF         reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    READLINE        reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    $end            reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    RPAREN          reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    RBRACE          reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    ELSE            reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    ARROW           reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    TO              reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)
    COMMA           reduce using rule 34 (expression -> MAPOF LPAREN map_entries RPAREN .)


state 135

    (35) map_entries -> map_entries COMMA . map_entry
    (37) map_entry -> . expression TO expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    map_entry                      shift and go to state 156
    expression                     shift and go to state 100

state 136

    (37) map_entry -> expression TO . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 157

state 137

    (62) expression -> LISTOF LPAREN expression_list RPAREN .

    PLUS            reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    MULTIPLY        reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    LESS            reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    GREATER         reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    LESS_EQUAL      reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    GREATER_EQUAL   reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    AND             reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    OR              reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    VAR             reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    VAL             reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    FUN             reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    CLASS           reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    FOR             reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    WHEN            reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    PRINTLN         reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    PRINT           reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    RETURN          reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    BREAK           reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    CONTINUE        reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    IF              reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    MAPOF           reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    NUMBER_INT      reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    NUMBER_DOUBLE   reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    STRING          reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    BOOLEAN_TRUE    reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    BOOLEAN_FALSE   reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    ID              reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    LISTOF          reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    ARRAYOF         reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    READLINE        reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    $end            reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    ARROW           reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    TO              reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 62 (expression -> LISTOF LPAREN expression_list RPAREN .)


state 138

    (63) expression_list -> expression_list COMMA . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 158

state 139

    (87) expression -> ARRAYOF LPAREN expression_list RPAREN .

    PLUS            reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    MULTIPLY        reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    LESS            reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    GREATER         reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    LESS_EQUAL      reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    GREATER_EQUAL   reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    AND             reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    OR              reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    VAR             reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    VAL             reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    FUN             reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    CLASS           reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    FOR             reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    WHEN            reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    PRINTLN         reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    PRINT           reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    RETURN          reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    BREAK           reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    CONTINUE        reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    IF              reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    MAPOF           reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    NUMBER_INT      reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    NUMBER_DOUBLE   reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    STRING          reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    BOOLEAN_TRUE    reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    BOOLEAN_FALSE   reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    ID              reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    LISTOF          reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    ARRAYOF         reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    READLINE        reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    $end            reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    ARROW           reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    TO              reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 87 (expression -> ARRAYOF LPAREN expression_list RPAREN .)


state 140

    (18) declaration -> VAR ID COLON type ASSIGN . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 159

state 141

    (19) declaration -> VAL ID COLON type ASSIGN . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 160

state 142

    (24) param -> ID COLON . type
    (25) type -> . TYPE_INT
    (26) type -> . TYPE_DOUBLE
    (27) type -> . TYPE_BOOLEAN
    (28) type -> . TYPE_STRING
    (29) type -> . ID

    TYPE_INT        shift and go to state 108
    TYPE_DOUBLE     shift and go to state 109
    TYPE_BOOLEAN    shift and go to state 110
    TYPE_STRING     shift and go to state 111
    ID              shift and go to state 106

    type                           shift and go to state 161

state 143

    (83) function_def -> FUN ID LPAREN param_list_opt RPAREN . COLON type block
    (84) function_def -> FUN ID LPAREN param_list_opt RPAREN . block
    (60) block -> . LBRACE statement_list RBRACE

    COLON           shift and go to state 162
    LBRACE          shift and go to state 155

    block                          shift and go to state 163

state 144

    (22) param_list -> param_list COMMA . param
    (24) param -> . ID COLON type

    ID              shift and go to state 114

    param                          shift and go to state 164

state 145

    (72) class_def -> CLASS ID LBRACE class_body RBRACE .

    VAR             reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    VAL             reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    FUN             reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    CLASS           reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    FOR             reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    WHEN            reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    PRINTLN         reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    PRINT           reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    RETURN          reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    BREAK           reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    CONTINUE        reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    IF              reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    MAPOF           reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    MINUS           reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    LPAREN          reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    NUMBER_INT      reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    NUMBER_DOUBLE   reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    STRING          reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    BOOLEAN_TRUE    reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    BOOLEAN_FALSE   reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    ID              reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    LISTOF          reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    ARRAYOF         reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    READLINE        reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    RBRACE          reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)
    ELSE            reduce using rule 72 (class_def -> CLASS ID LBRACE class_body RBRACE .)


state 146

    (73) class_body -> class_body class_member .

    RBRACE          reduce using rule 73 (class_body -> class_body class_member .)
    VAR             reduce using rule 73 (class_body -> class_body class_member .)
    VAL             reduce using rule 73 (class_body -> class_body class_member .)
    FUN             reduce using rule 73 (class_body -> class_body class_member .)


state 147

    (78) property_def -> VAR ID . COLON type
    (80) property_def -> VAR ID . COLON type ASSIGN expression

    COLON           shift and go to state 165


state 148

    (79) property_def -> VAL ID . COLON type
    (81) property_def -> VAL ID . COLON type ASSIGN expression

    COLON           shift and go to state 166


state 149

    (82) method_def -> FUN ID . LPAREN param_list_opt RPAREN block

    LPAREN          shift and go to state 167


state 150

    (31) for_loop -> FOR LPAREN ID IN expression . RPAREN loop_body
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 168
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 151

    (66) when_stmt -> WHEN LPAREN expression RPAREN LBRACE . when_branches RBRACE
    (67) when_branches -> . when_branches when_branch
    (68) when_branches -> . when_branch
    (69) when_branch -> . expression ARROW statement_list
    (70) when_branch -> . ELSE ARROW statement_list
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    ELSE            shift and go to state 94
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 93
    when_branches                  shift and go to state 169
    when_branch                    shift and go to state 92

state 152

    (69) when_branch -> expression ARROW statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . class_def
    (8) statement -> . for_loop
    (9) statement -> . when_stmt
    (10) statement -> . print_stmt
    (11) statement -> . return_stmt
    (12) statement -> . break_stmt
    (13) statement -> . continue_stmt
    (14) statement -> . if_else
    (15) statement -> . expression_stmt
    (16) declaration -> . VAR ID ASSIGN expression
    (17) declaration -> . VAL ID ASSIGN expression
    (18) declaration -> . VAR ID COLON type ASSIGN expression
    (19) declaration -> . VAL ID COLON type ASSIGN expression
    (83) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> . FUN ID LPAREN param_list_opt RPAREN block
    (72) class_def -> . CLASS ID LBRACE class_body RBRACE
    (31) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (66) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (58) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (59) print_stmt -> . PRINT LPAREN expression RPAREN
    (30) return_stmt -> . RETURN expression
    (85) break_stmt -> . BREAK
    (86) continue_stmt -> . CONTINUE
    (88) if_else -> . IF LPAREN expression RPAREN block ELSE block
    (61) expression_stmt -> . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 69 (when_branch -> expression ARROW statement_list .)
    ELSE            reduce using rule 69 (when_branch -> expression ARROW statement_list .)
    VAR             shift and go to state 15
    VAL             shift and go to state 18
    FUN             shift and go to state 19
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    IF              shift and go to state 29
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

  ! MAPOF           [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! MINUS           [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! LPAREN          [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! NUMBER_INT      [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! STRING          [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! ID              [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! LISTOF          [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! ARRAYOF         [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]
  ! READLINE        [ reduce using rule 69 (when_branch -> expression ARROW statement_list .) ]

    expression                     shift and go to state 17
    statement                      shift and go to state 40
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    class_def                      shift and go to state 6
    for_loop                       shift and go to state 7
    when_stmt                      shift and go to state 8
    print_stmt                     shift and go to state 9
    return_stmt                    shift and go to state 10
    break_stmt                     shift and go to state 11
    continue_stmt                  shift and go to state 12
    if_else                        shift and go to state 13
    expression_stmt                shift and go to state 14

state 153

    (70) when_branch -> ELSE ARROW statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . class_def
    (8) statement -> . for_loop
    (9) statement -> . when_stmt
    (10) statement -> . print_stmt
    (11) statement -> . return_stmt
    (12) statement -> . break_stmt
    (13) statement -> . continue_stmt
    (14) statement -> . if_else
    (15) statement -> . expression_stmt
    (16) declaration -> . VAR ID ASSIGN expression
    (17) declaration -> . VAL ID ASSIGN expression
    (18) declaration -> . VAR ID COLON type ASSIGN expression
    (19) declaration -> . VAL ID COLON type ASSIGN expression
    (83) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> . FUN ID LPAREN param_list_opt RPAREN block
    (72) class_def -> . CLASS ID LBRACE class_body RBRACE
    (31) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (66) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (58) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (59) print_stmt -> . PRINT LPAREN expression RPAREN
    (30) return_stmt -> . RETURN expression
    (85) break_stmt -> . BREAK
    (86) continue_stmt -> . CONTINUE
    (88) if_else -> . IF LPAREN expression RPAREN block ELSE block
    (61) expression_stmt -> . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 70 (when_branch -> ELSE ARROW statement_list .)
    ELSE            reduce using rule 70 (when_branch -> ELSE ARROW statement_list .)
    VAR             shift and go to state 15
    VAL             shift and go to state 18
    FUN             shift and go to state 19
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    IF              shift and go to state 29
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

  ! MAPOF           [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! MINUS           [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! LPAREN          [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! NUMBER_INT      [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! STRING          [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! ID              [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! LISTOF          [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! ARRAYOF         [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]
  ! READLINE        [ reduce using rule 70 (when_branch -> ELSE ARROW statement_list .) ]

    statement                      shift and go to state 40
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    class_def                      shift and go to state 6
    for_loop                       shift and go to state 7
    when_stmt                      shift and go to state 8
    print_stmt                     shift and go to state 9
    return_stmt                    shift and go to state 10
    break_stmt                     shift and go to state 11
    continue_stmt                  shift and go to state 12
    if_else                        shift and go to state 13
    expression_stmt                shift and go to state 14
    expression                     shift and go to state 17

state 154

    (88) if_else -> IF LPAREN expression RPAREN block . ELSE block

    ELSE            shift and go to state 170


state 155

    (60) block -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . class_def
    (8) statement -> . for_loop
    (9) statement -> . when_stmt
    (10) statement -> . print_stmt
    (11) statement -> . return_stmt
    (12) statement -> . break_stmt
    (13) statement -> . continue_stmt
    (14) statement -> . if_else
    (15) statement -> . expression_stmt
    (16) declaration -> . VAR ID ASSIGN expression
    (17) declaration -> . VAL ID ASSIGN expression
    (18) declaration -> . VAR ID COLON type ASSIGN expression
    (19) declaration -> . VAL ID COLON type ASSIGN expression
    (83) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> . FUN ID LPAREN param_list_opt RPAREN block
    (72) class_def -> . CLASS ID LBRACE class_body RBRACE
    (31) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (66) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (58) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (59) print_stmt -> . PRINT LPAREN expression RPAREN
    (30) return_stmt -> . RETURN expression
    (85) break_stmt -> . BREAK
    (86) continue_stmt -> . CONTINUE
    (88) if_else -> . IF LPAREN expression RPAREN block ELSE block
    (61) expression_stmt -> . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MAPOF resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER_INT resolved as shift
  ! shift/reduce conflict for NUMBER_DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN_TRUE resolved as shift
  ! shift/reduce conflict for BOOLEAN_FALSE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LISTOF resolved as shift
  ! shift/reduce conflict for ARRAYOF resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
    RBRACE          reduce using rule 4 (statement_list -> .)
    VAR             shift and go to state 15
    VAL             shift and go to state 18
    FUN             shift and go to state 19
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    IF              shift and go to state 29
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

  ! VAR             [ reduce using rule 4 (statement_list -> .) ]
  ! VAL             [ reduce using rule 4 (statement_list -> .) ]
  ! FUN             [ reduce using rule 4 (statement_list -> .) ]
  ! CLASS           [ reduce using rule 4 (statement_list -> .) ]
  ! FOR             [ reduce using rule 4 (statement_list -> .) ]
  ! WHEN            [ reduce using rule 4 (statement_list -> .) ]
  ! PRINTLN         [ reduce using rule 4 (statement_list -> .) ]
  ! PRINT           [ reduce using rule 4 (statement_list -> .) ]
  ! RETURN          [ reduce using rule 4 (statement_list -> .) ]
  ! BREAK           [ reduce using rule 4 (statement_list -> .) ]
  ! CONTINUE        [ reduce using rule 4 (statement_list -> .) ]
  ! IF              [ reduce using rule 4 (statement_list -> .) ]
  ! MAPOF           [ reduce using rule 4 (statement_list -> .) ]
  ! MINUS           [ reduce using rule 4 (statement_list -> .) ]
  ! LPAREN          [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_INT      [ reduce using rule 4 (statement_list -> .) ]
  ! NUMBER_DOUBLE   [ reduce using rule 4 (statement_list -> .) ]
  ! STRING          [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_TRUE    [ reduce using rule 4 (statement_list -> .) ]
  ! BOOLEAN_FALSE   [ reduce using rule 4 (statement_list -> .) ]
  ! ID              [ reduce using rule 4 (statement_list -> .) ]
  ! LISTOF          [ reduce using rule 4 (statement_list -> .) ]
  ! ARRAYOF         [ reduce using rule 4 (statement_list -> .) ]
  ! READLINE        [ reduce using rule 4 (statement_list -> .) ]

    statement_list                 shift and go to state 171
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    class_def                      shift and go to state 6
    for_loop                       shift and go to state 7
    when_stmt                      shift and go to state 8
    print_stmt                     shift and go to state 9
    return_stmt                    shift and go to state 10
    break_stmt                     shift and go to state 11
    continue_stmt                  shift and go to state 12
    if_else                        shift and go to state 13
    expression_stmt                shift and go to state 14
    expression                     shift and go to state 17

state 156

    (35) map_entries -> map_entries COMMA map_entry .

    RPAREN          reduce using rule 35 (map_entries -> map_entries COMMA map_entry .)
    COMMA           reduce using rule 35 (map_entries -> map_entries COMMA map_entry .)


state 157

    (37) map_entry -> expression TO expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 37 (map_entry -> expression TO expression .)
    COMMA           reduce using rule 37 (map_entry -> expression TO expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 158

    (63) expression_list -> expression_list COMMA expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 63 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 63 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 159

    (18) declaration -> VAR ID COLON type ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    VAR             reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    VAL             reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    FUN             reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    CLASS           reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    FOR             reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    WHEN            reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    PRINTLN         reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    PRINT           reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    RETURN          reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    BREAK           reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    CONTINUE        reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    IF              reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    MAPOF           reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    LPAREN          reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    NUMBER_INT      reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    NUMBER_DOUBLE   reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    STRING          reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    BOOLEAN_TRUE    reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    BOOLEAN_FALSE   reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    ID              reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    LISTOF          reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    ARRAYOF         reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    READLINE        reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    $end            reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    RBRACE          reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    ELSE            reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MINUS           [ reduce using rule 18 (declaration -> VAR ID COLON type ASSIGN expression .) ]


state 160

    (19) declaration -> VAL ID COLON type ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for MINUS resolved as shift
    VAR             reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    VAL             reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    FUN             reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    CLASS           reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    FOR             reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    WHEN            reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    PRINTLN         reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    PRINT           reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    RETURN          reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    BREAK           reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    CONTINUE        reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    IF              reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    MAPOF           reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    LPAREN          reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    NUMBER_INT      reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    NUMBER_DOUBLE   reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    STRING          reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    BOOLEAN_TRUE    reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    BOOLEAN_FALSE   reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    ID              reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    LISTOF          reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    ARRAYOF         reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    READLINE        reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    $end            reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    RBRACE          reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    ELSE            reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53

  ! MINUS           [ reduce using rule 19 (declaration -> VAL ID COLON type ASSIGN expression .) ]


state 161

    (24) param -> ID COLON type .

    COMMA           reduce using rule 24 (param -> ID COLON type .)
    RPAREN          reduce using rule 24 (param -> ID COLON type .)


state 162

    (83) function_def -> FUN ID LPAREN param_list_opt RPAREN COLON . type block
    (25) type -> . TYPE_INT
    (26) type -> . TYPE_DOUBLE
    (27) type -> . TYPE_BOOLEAN
    (28) type -> . TYPE_STRING
    (29) type -> . ID

    TYPE_INT        shift and go to state 108
    TYPE_DOUBLE     shift and go to state 109
    TYPE_BOOLEAN    shift and go to state 110
    TYPE_STRING     shift and go to state 111
    ID              shift and go to state 106

    type                           shift and go to state 172

state 163

    (84) function_def -> FUN ID LPAREN param_list_opt RPAREN block .

    VAR             reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    VAL             reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    FUN             reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    CLASS           reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    FOR             reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    WHEN            reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    PRINTLN         reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    PRINT           reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    RETURN          reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    BREAK           reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    CONTINUE        reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    IF              reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    MAPOF           reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    MINUS           reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    LPAREN          reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    NUMBER_INT      reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    NUMBER_DOUBLE   reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    STRING          reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    BOOLEAN_TRUE    reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    BOOLEAN_FALSE   reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    ID              reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    LISTOF          reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    ARRAYOF         reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    READLINE        reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    $end            reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    RBRACE          reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    ELSE            reduce using rule 84 (function_def -> FUN ID LPAREN param_list_opt RPAREN block .)


state 164

    (22) param_list -> param_list COMMA param .

    COMMA           reduce using rule 22 (param_list -> param_list COMMA param .)
    RPAREN          reduce using rule 22 (param_list -> param_list COMMA param .)


state 165

    (78) property_def -> VAR ID COLON . type
    (80) property_def -> VAR ID COLON . type ASSIGN expression
    (25) type -> . TYPE_INT
    (26) type -> . TYPE_DOUBLE
    (27) type -> . TYPE_BOOLEAN
    (28) type -> . TYPE_STRING
    (29) type -> . ID

    TYPE_INT        shift and go to state 108
    TYPE_DOUBLE     shift and go to state 109
    TYPE_BOOLEAN    shift and go to state 110
    TYPE_STRING     shift and go to state 111
    ID              shift and go to state 106

    type                           shift and go to state 173

state 166

    (79) property_def -> VAL ID COLON . type
    (81) property_def -> VAL ID COLON . type ASSIGN expression
    (25) type -> . TYPE_INT
    (26) type -> . TYPE_DOUBLE
    (27) type -> . TYPE_BOOLEAN
    (28) type -> . TYPE_STRING
    (29) type -> . ID

    TYPE_INT        shift and go to state 108
    TYPE_DOUBLE     shift and go to state 109
    TYPE_BOOLEAN    shift and go to state 110
    TYPE_STRING     shift and go to state 111
    ID              shift and go to state 106

    type                           shift and go to state 174

state 167

    (82) method_def -> FUN ID LPAREN . param_list_opt RPAREN block
    (20) param_list_opt -> . param_list
    (21) param_list_opt -> .
    (22) param_list -> . param_list COMMA param
    (23) param_list -> . param
    (24) param -> . ID COLON type

    RPAREN          reduce using rule 21 (param_list_opt -> .)
    ID              shift and go to state 114

    param_list_opt                 shift and go to state 175
    param_list                     shift and go to state 116
    param                          shift and go to state 117

state 168

    (31) for_loop -> FOR LPAREN ID IN expression RPAREN . loop_body
    (32) loop_body -> . block
    (33) loop_body -> . statement
    (60) block -> . LBRACE statement_list RBRACE
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . class_def
    (8) statement -> . for_loop
    (9) statement -> . when_stmt
    (10) statement -> . print_stmt
    (11) statement -> . return_stmt
    (12) statement -> . break_stmt
    (13) statement -> . continue_stmt
    (14) statement -> . if_else
    (15) statement -> . expression_stmt
    (16) declaration -> . VAR ID ASSIGN expression
    (17) declaration -> . VAL ID ASSIGN expression
    (18) declaration -> . VAR ID COLON type ASSIGN expression
    (19) declaration -> . VAL ID COLON type ASSIGN expression
    (83) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> . FUN ID LPAREN param_list_opt RPAREN block
    (72) class_def -> . CLASS ID LBRACE class_body RBRACE
    (31) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (66) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (58) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (59) print_stmt -> . PRINT LPAREN expression RPAREN
    (30) return_stmt -> . RETURN expression
    (85) break_stmt -> . BREAK
    (86) continue_stmt -> . CONTINUE
    (88) if_else -> . IF LPAREN expression RPAREN block ELSE block
    (61) expression_stmt -> . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    LBRACE          shift and go to state 155
    VAR             shift and go to state 15
    VAL             shift and go to state 18
    FUN             shift and go to state 19
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    IF              shift and go to state 29
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 17
    loop_body                      shift and go to state 176
    block                          shift and go to state 177
    statement                      shift and go to state 178
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    class_def                      shift and go to state 6
    for_loop                       shift and go to state 7
    when_stmt                      shift and go to state 8
    print_stmt                     shift and go to state 9
    return_stmt                    shift and go to state 10
    break_stmt                     shift and go to state 11
    continue_stmt                  shift and go to state 12
    if_else                        shift and go to state 13
    expression_stmt                shift and go to state 14

state 169

    (66) when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches . RBRACE
    (67) when_branches -> when_branches . when_branch
    (69) when_branch -> . expression ARROW statement_list
    (70) when_branch -> . ELSE ARROW statement_list
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    RBRACE          shift and go to state 179
    ELSE            shift and go to state 94
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 93
    when_branch                    shift and go to state 128

state 170

    (88) if_else -> IF LPAREN expression RPAREN block ELSE . block
    (60) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 155

    block                          shift and go to state 180

state 171

    (60) block -> LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (5) statement -> . declaration
    (6) statement -> . function_def
    (7) statement -> . class_def
    (8) statement -> . for_loop
    (9) statement -> . when_stmt
    (10) statement -> . print_stmt
    (11) statement -> . return_stmt
    (12) statement -> . break_stmt
    (13) statement -> . continue_stmt
    (14) statement -> . if_else
    (15) statement -> . expression_stmt
    (16) declaration -> . VAR ID ASSIGN expression
    (17) declaration -> . VAL ID ASSIGN expression
    (18) declaration -> . VAR ID COLON type ASSIGN expression
    (19) declaration -> . VAL ID COLON type ASSIGN expression
    (83) function_def -> . FUN ID LPAREN param_list_opt RPAREN COLON type block
    (84) function_def -> . FUN ID LPAREN param_list_opt RPAREN block
    (72) class_def -> . CLASS ID LBRACE class_body RBRACE
    (31) for_loop -> . FOR LPAREN ID IN expression RPAREN loop_body
    (66) when_stmt -> . WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
    (71) when_stmt -> . WHEN LBRACE when_branches RBRACE
    (58) print_stmt -> . PRINTLN LPAREN expression RPAREN
    (59) print_stmt -> . PRINT LPAREN expression RPAREN
    (30) return_stmt -> . RETURN expression
    (85) break_stmt -> . BREAK
    (86) continue_stmt -> . CONTINUE
    (88) if_else -> . IF LPAREN expression RPAREN block ELSE block
    (61) expression_stmt -> . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    RBRACE          shift and go to state 181
    VAR             shift and go to state 15
    VAL             shift and go to state 18
    FUN             shift and go to state 19
    CLASS           shift and go to state 21
    FOR             shift and go to state 22
    WHEN            shift and go to state 23
    PRINTLN         shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    IF              shift and go to state 29
    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    statement                      shift and go to state 40
    declaration                    shift and go to state 4
    function_def                   shift and go to state 5
    class_def                      shift and go to state 6
    for_loop                       shift and go to state 7
    when_stmt                      shift and go to state 8
    print_stmt                     shift and go to state 9
    return_stmt                    shift and go to state 10
    break_stmt                     shift and go to state 11
    continue_stmt                  shift and go to state 12
    if_else                        shift and go to state 13
    expression_stmt                shift and go to state 14
    expression                     shift and go to state 17

state 172

    (83) function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type . block
    (60) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 155

    block                          shift and go to state 182

state 173

    (78) property_def -> VAR ID COLON type .
    (80) property_def -> VAR ID COLON type . ASSIGN expression

    RBRACE          reduce using rule 78 (property_def -> VAR ID COLON type .)
    VAR             reduce using rule 78 (property_def -> VAR ID COLON type .)
    VAL             reduce using rule 78 (property_def -> VAR ID COLON type .)
    FUN             reduce using rule 78 (property_def -> VAR ID COLON type .)
    ASSIGN          shift and go to state 183


state 174

    (79) property_def -> VAL ID COLON type .
    (81) property_def -> VAL ID COLON type . ASSIGN expression

    RBRACE          reduce using rule 79 (property_def -> VAL ID COLON type .)
    VAR             reduce using rule 79 (property_def -> VAL ID COLON type .)
    VAL             reduce using rule 79 (property_def -> VAL ID COLON type .)
    FUN             reduce using rule 79 (property_def -> VAL ID COLON type .)
    ASSIGN          shift and go to state 184


state 175

    (82) method_def -> FUN ID LPAREN param_list_opt . RPAREN block

    RPAREN          shift and go to state 185


state 176

    (31) for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .

    VAR             reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    VAL             reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    FUN             reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    CLASS           reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    FOR             reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    WHEN            reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    PRINTLN         reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    PRINT           reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    RETURN          reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    BREAK           reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    CONTINUE        reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    IF              reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    MAPOF           reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    MINUS           reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    LPAREN          reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    NUMBER_INT      reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    NUMBER_DOUBLE   reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    STRING          reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    BOOLEAN_TRUE    reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    BOOLEAN_FALSE   reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    ID              reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    LISTOF          reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    ARRAYOF         reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    READLINE        reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    $end            reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    RBRACE          reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)
    ELSE            reduce using rule 31 (for_loop -> FOR LPAREN ID IN expression RPAREN loop_body .)


state 177

    (32) loop_body -> block .

    VAR             reduce using rule 32 (loop_body -> block .)
    VAL             reduce using rule 32 (loop_body -> block .)
    FUN             reduce using rule 32 (loop_body -> block .)
    CLASS           reduce using rule 32 (loop_body -> block .)
    FOR             reduce using rule 32 (loop_body -> block .)
    WHEN            reduce using rule 32 (loop_body -> block .)
    PRINTLN         reduce using rule 32 (loop_body -> block .)
    PRINT           reduce using rule 32 (loop_body -> block .)
    RETURN          reduce using rule 32 (loop_body -> block .)
    BREAK           reduce using rule 32 (loop_body -> block .)
    CONTINUE        reduce using rule 32 (loop_body -> block .)
    IF              reduce using rule 32 (loop_body -> block .)
    MAPOF           reduce using rule 32 (loop_body -> block .)
    MINUS           reduce using rule 32 (loop_body -> block .)
    LPAREN          reduce using rule 32 (loop_body -> block .)
    NUMBER_INT      reduce using rule 32 (loop_body -> block .)
    NUMBER_DOUBLE   reduce using rule 32 (loop_body -> block .)
    STRING          reduce using rule 32 (loop_body -> block .)
    BOOLEAN_TRUE    reduce using rule 32 (loop_body -> block .)
    BOOLEAN_FALSE   reduce using rule 32 (loop_body -> block .)
    ID              reduce using rule 32 (loop_body -> block .)
    LISTOF          reduce using rule 32 (loop_body -> block .)
    ARRAYOF         reduce using rule 32 (loop_body -> block .)
    READLINE        reduce using rule 32 (loop_body -> block .)
    $end            reduce using rule 32 (loop_body -> block .)
    RBRACE          reduce using rule 32 (loop_body -> block .)
    ELSE            reduce using rule 32 (loop_body -> block .)


state 178

    (33) loop_body -> statement .

    VAR             reduce using rule 33 (loop_body -> statement .)
    VAL             reduce using rule 33 (loop_body -> statement .)
    FUN             reduce using rule 33 (loop_body -> statement .)
    CLASS           reduce using rule 33 (loop_body -> statement .)
    FOR             reduce using rule 33 (loop_body -> statement .)
    WHEN            reduce using rule 33 (loop_body -> statement .)
    PRINTLN         reduce using rule 33 (loop_body -> statement .)
    PRINT           reduce using rule 33 (loop_body -> statement .)
    RETURN          reduce using rule 33 (loop_body -> statement .)
    BREAK           reduce using rule 33 (loop_body -> statement .)
    CONTINUE        reduce using rule 33 (loop_body -> statement .)
    IF              reduce using rule 33 (loop_body -> statement .)
    MAPOF           reduce using rule 33 (loop_body -> statement .)
    MINUS           reduce using rule 33 (loop_body -> statement .)
    LPAREN          reduce using rule 33 (loop_body -> statement .)
    NUMBER_INT      reduce using rule 33 (loop_body -> statement .)
    NUMBER_DOUBLE   reduce using rule 33 (loop_body -> statement .)
    STRING          reduce using rule 33 (loop_body -> statement .)
    BOOLEAN_TRUE    reduce using rule 33 (loop_body -> statement .)
    BOOLEAN_FALSE   reduce using rule 33 (loop_body -> statement .)
    ID              reduce using rule 33 (loop_body -> statement .)
    LISTOF          reduce using rule 33 (loop_body -> statement .)
    ARRAYOF         reduce using rule 33 (loop_body -> statement .)
    READLINE        reduce using rule 33 (loop_body -> statement .)
    $end            reduce using rule 33 (loop_body -> statement .)
    RBRACE          reduce using rule 33 (loop_body -> statement .)
    ELSE            reduce using rule 33 (loop_body -> statement .)


state 179

    (66) when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .

    VAR             reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    VAL             reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    FUN             reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    CLASS           reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    FOR             reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    WHEN            reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    PRINTLN         reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    PRINT           reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    RETURN          reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    BREAK           reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    CONTINUE        reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    IF              reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    MAPOF           reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    MINUS           reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    LPAREN          reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    NUMBER_INT      reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    NUMBER_DOUBLE   reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    STRING          reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    BOOLEAN_TRUE    reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    BOOLEAN_FALSE   reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    ID              reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    LISTOF          reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    ARRAYOF         reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    READLINE        reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    $end            reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    RBRACE          reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)
    ELSE            reduce using rule 66 (when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE .)


state 180

    (88) if_else -> IF LPAREN expression RPAREN block ELSE block .

    VAR             reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    VAL             reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    FUN             reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    CLASS           reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    WHEN            reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    PRINTLN         reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    PRINT           reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    BREAK           reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    CONTINUE        reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    MAPOF           reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    MINUS           reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER_INT      reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER_DOUBLE   reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    STRING          reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    BOOLEAN_TRUE    reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    BOOLEAN_FALSE   reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    ID              reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    LISTOF          reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    ARRAYOF         reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    READLINE        reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    $end            reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    RBRACE          reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)
    ELSE            reduce using rule 88 (if_else -> IF LPAREN expression RPAREN block ELSE block .)


state 181

    (60) block -> LBRACE statement_list RBRACE .

    ELSE            reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    VAR             reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    VAL             reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    FUN             reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    CLASS           reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    WHEN            reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    PRINTLN         reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    MAPOF           reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    NUMBER_INT      reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    NUMBER_DOUBLE   reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    BOOLEAN_TRUE    reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    BOOLEAN_FALSE   reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    LISTOF          reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    ARRAYOF         reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    READLINE        reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 60 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 60 (block -> LBRACE statement_list RBRACE .)


state 182

    (83) function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .

    VAR             reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    VAL             reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    FUN             reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    CLASS           reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    FOR             reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    WHEN            reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    PRINTLN         reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    PRINT           reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    RETURN          reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    BREAK           reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    CONTINUE        reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    IF              reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    MAPOF           reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    MINUS           reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    LPAREN          reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    NUMBER_INT      reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    NUMBER_DOUBLE   reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    STRING          reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    BOOLEAN_TRUE    reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    BOOLEAN_FALSE   reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    ID              reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    LISTOF          reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    ARRAYOF         reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    READLINE        reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    $end            reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    RBRACE          reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)
    ELSE            reduce using rule 83 (function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block .)


state 183

    (80) property_def -> VAR ID COLON type ASSIGN . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 186

state 184

    (81) property_def -> VAL ID COLON type ASSIGN . expression
    (34) expression -> . MAPOF LPAREN map_entries RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression MULTIPLY expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESS_EQUAL expression
    (45) expression -> . expression GREATER_EQUAL expression
    (46) expression -> . expression EQUALS expression
    (47) expression -> . expression NOT_EQUALS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . LPAREN expression RPAREN
    (52) expression -> . NUMBER_INT
    (53) expression -> . NUMBER_DOUBLE
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN_TRUE
    (56) expression -> . BOOLEAN_FALSE
    (57) expression -> . ID
    (62) expression -> . LISTOF LPAREN expression_list RPAREN
    (87) expression -> . ARRAYOF LPAREN expression_list RPAREN
    (89) expression -> . READLINE LPAREN RPAREN

    MAPOF           shift and go to state 30
    MINUS           shift and go to state 31
    LPAREN          shift and go to state 20
    NUMBER_INT      shift and go to state 32
    NUMBER_DOUBLE   shift and go to state 33
    STRING          shift and go to state 34
    BOOLEAN_TRUE    shift and go to state 35
    BOOLEAN_FALSE   shift and go to state 36
    ID              shift and go to state 16
    LISTOF          shift and go to state 37
    ARRAYOF         shift and go to state 38
    READLINE        shift and go to state 39

    expression                     shift and go to state 187

state 185

    (82) method_def -> FUN ID LPAREN param_list_opt RPAREN . block
    (60) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 155

    block                          shift and go to state 188

state 186

    (80) property_def -> VAR ID COLON type ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RBRACE          reduce using rule 80 (property_def -> VAR ID COLON type ASSIGN expression .)
    VAR             reduce using rule 80 (property_def -> VAR ID COLON type ASSIGN expression .)
    VAL             reduce using rule 80 (property_def -> VAR ID COLON type ASSIGN expression .)
    FUN             reduce using rule 80 (property_def -> VAR ID COLON type ASSIGN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 187

    (81) property_def -> VAL ID COLON type ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . MULTIPLY expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESS_EQUAL expression
    (45) expression -> expression . GREATER_EQUAL expression
    (46) expression -> expression . EQUALS expression
    (47) expression -> expression . NOT_EQUALS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RBRACE          reduce using rule 81 (property_def -> VAL ID COLON type ASSIGN expression .)
    VAR             reduce using rule 81 (property_def -> VAL ID COLON type ASSIGN expression .)
    VAL             reduce using rule 81 (property_def -> VAL ID COLON type ASSIGN expression .)
    FUN             reduce using rule 81 (property_def -> VAL ID COLON type ASSIGN expression .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    MULTIPLY        shift and go to state 44
    DIVIDE          shift and go to state 45
    LESS            shift and go to state 46
    GREATER         shift and go to state 47
    LESS_EQUAL      shift and go to state 48
    GREATER_EQUAL   shift and go to state 49
    EQUALS          shift and go to state 50
    NOT_EQUALS      shift and go to state 51
    AND             shift and go to state 52
    OR              shift and go to state 53


state 188

    (82) method_def -> FUN ID LPAREN param_list_opt RPAREN block .

    RBRACE          reduce using rule 82 (method_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    VAR             reduce using rule 82 (method_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    VAL             reduce using rule 82 (method_def -> FUN ID LPAREN param_list_opt RPAREN block .)
    FUN             reduce using rule 82 (method_def -> FUN ID LPAREN param_list_opt RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for VAL in state 0 resolved as shift
WARNING: shift/reduce conflict for FUN in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 0 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 0 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 0 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 0 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 0 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for VAR in state 88 resolved as shift
WARNING: shift/reduce conflict for VAL in state 88 resolved as shift
WARNING: shift/reduce conflict for FUN in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for VAR in state 129 resolved as shift
WARNING: shift/reduce conflict for VAL in state 129 resolved as shift
WARNING: shift/reduce conflict for FUN in state 129 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 129 resolved as shift
WARNING: shift/reduce conflict for FOR in state 129 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 129 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 129 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 129 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 129 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 129 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 129 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 129 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 129 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 129 resolved as shift
WARNING: shift/reduce conflict for STRING in state 129 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 129 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 129 resolved as shift
WARNING: shift/reduce conflict for ID in state 129 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 129 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 129 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 129 resolved as shift
WARNING: shift/reduce conflict for VAR in state 130 resolved as shift
WARNING: shift/reduce conflict for VAL in state 130 resolved as shift
WARNING: shift/reduce conflict for FUN in state 130 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 130 resolved as shift
WARNING: shift/reduce conflict for FOR in state 130 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 130 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 130 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 130 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 130 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 130 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 130 resolved as shift
WARNING: shift/reduce conflict for IF in state 130 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 130 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 130 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 130 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 130 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 130 resolved as shift
WARNING: shift/reduce conflict for STRING in state 130 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 130 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 130 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 130 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 130 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 130 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 152 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 152 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 152 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 152 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 152 resolved as shift
WARNING: shift/reduce conflict for STRING in state 152 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 152 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 152 resolved as shift
WARNING: shift/reduce conflict for ID in state 152 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 152 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 152 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 152 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 153 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 153 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 153 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 153 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 153 resolved as shift
WARNING: shift/reduce conflict for STRING in state 153 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 153 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 153 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 153 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 153 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 153 resolved as shift
WARNING: shift/reduce conflict for VAR in state 155 resolved as shift
WARNING: shift/reduce conflict for VAL in state 155 resolved as shift
WARNING: shift/reduce conflict for FUN in state 155 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 155 resolved as shift
WARNING: shift/reduce conflict for FOR in state 155 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 155 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 155 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 155 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 155 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 155 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 155 resolved as shift
WARNING: shift/reduce conflict for IF in state 155 resolved as shift
WARNING: shift/reduce conflict for MAPOF in state 155 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 155 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 155 resolved as shift
WARNING: shift/reduce conflict for NUMBER_INT in state 155 resolved as shift
WARNING: shift/reduce conflict for NUMBER_DOUBLE in state 155 resolved as shift
WARNING: shift/reduce conflict for STRING in state 155 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_TRUE in state 155 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_FALSE in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 155 resolved as shift
WARNING: shift/reduce conflict for LISTOF in state 155 resolved as shift
WARNING: shift/reduce conflict for ARRAYOF in state 155 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 155 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 159 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 160 resolved as shift
