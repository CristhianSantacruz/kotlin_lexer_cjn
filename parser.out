Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    CATCH
    COMPANION
    CONSTRUCTOR
    CONTAINS
    CROSSINLINE
    DATA
    DOT
    ELVIS
    ENUM
    EXTENDS
    FILTER
    FINAL
    FINALLY
    IMPLEMENTS
    INDICES
    INIT
    INLINE
    INNER
    INTERFACE
    INTERNAL
    LATEINIT
    LBRACKET
    MODULO
    NOINLINE
    OBJECT
    OPEN
    OUT
    OVERRIDE
    PRIVATE
    PROTECTED
    PUBLIC
    QUESTION
    RANGE
    RBRACKET
    REIFIED
    SEALED
    SEMICOLON
    SUM
    SUPER
    THIS
    TRY
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement_list -> <empty>
Rule 5     statement -> declaration
Rule 6     statement -> function_def
Rule 7     statement -> function_def_params_no_return
Rule 8     statement -> function_def_no_params_no_return
Rule 9     statement -> function_def_no_params_with_return
Rule 10    statement -> class_def
Rule 11    statement -> for_loop
Rule 12    statement -> when_stmt
Rule 13    statement -> print_stmt
Rule 14    statement -> return_stmt
Rule 15    statement -> break_stmt
Rule 16    statement -> continue_stmt
Rule 17    statement -> if_else
Rule 18    statement -> expression_stmt
Rule 19    declaration -> VAR ID ASSIGN expression
Rule 20    declaration -> VAL ID ASSIGN expression
Rule 21    param_list_opt -> param_list
Rule 22    param_list_opt -> <empty>
Rule 23    param_list -> param_list COMMA param
Rule 24    param_list -> param
Rule 25    param -> ID COLON type
Rule 26    type -> TYPE_INT
Rule 27    type -> TYPE_DOUBLE
Rule 28    type -> TYPE_BOOLEAN
Rule 29    type -> TYPE_STRING
Rule 30    type -> ID
Rule 31    return_stmt -> RETURN expression
Rule 32    for_loop -> FOR LPAREN ID IN expression RPAREN loop_body
Rule 33    loop_body -> block
Rule 34    loop_body -> statement
Rule 35    expression -> MAPOF LPAREN map_entries RPAREN
Rule 36    map_entries -> map_entries COMMA map_entry
Rule 37    map_entries -> map_entry
Rule 38    map_entry -> expression TO expression
Rule 39    expression -> expression PLUS expression
Rule 40    expression -> expression MINUS expression
Rule 41    expression -> expression MULTIPLY expression
Rule 42    expression -> expression DIVIDE expression
Rule 43    expression -> expression LESS expression
Rule 44    expression -> expression GREATER expression
Rule 45    expression -> expression LESS_EQUAL expression
Rule 46    expression -> expression GREATER_EQUAL expression
Rule 47    expression -> expression EQUALS expression
Rule 48    expression -> expression NOT_EQUALS expression
Rule 49    expression -> expression AND expression
Rule 50    expression -> expression OR expression
Rule 51    expression -> MINUS expression
Rule 52    expression -> LPAREN expression RPAREN
Rule 53    expression -> NUMBER_INT
Rule 54    expression -> NUMBER_DOUBLE
Rule 55    expression -> STRING
Rule 56    expression -> BOOLEAN_TRUE
Rule 57    expression -> BOOLEAN_FALSE
Rule 58    expression -> ID
Rule 59    print_stmt -> PRINTLN LPAREN expression RPAREN
Rule 60    print_stmt -> PRINT LPAREN expression RPAREN
Rule 61    block -> LBRACE statement_list RBRACE
Rule 62    expression_stmt -> expression
Rule 63    expression -> LISTOF LPAREN expression_list RPAREN
Rule 64    expression_list -> expression_list COMMA expression
Rule 65    expression_list -> expression
Rule 66    expression_list -> <empty>
Rule 67    when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE
Rule 68    when_branches -> when_branches when_branch
Rule 69    when_branches -> when_branch
Rule 70    when_branch -> expression ARROW statement_list
Rule 71    when_branch -> ELSE ARROW statement_list
Rule 72    when_stmt -> WHEN LBRACE when_branches RBRACE
Rule 73    function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block
Rule 74    class_def -> CLASS ID LBRACE class_body RBRACE
Rule 75    class_body -> class_body class_member
Rule 76    class_body -> class_member
Rule 77    class_body -> <empty>
Rule 78    class_member -> property_def
Rule 79    class_member -> method_def
Rule 80    property_def -> VAR ID COLON type
Rule 81    property_def -> VAL ID COLON type
Rule 82    property_def -> VAR ID COLON type ASSIGN expression
Rule 83    property_def -> VAL ID COLON type ASSIGN expression
Rule 84    method_def -> FUN ID LPAREN param_list_opt RPAREN block
Rule 85    break_stmt -> BREAK
Rule 86    continue_stmt -> CONTINUE
Rule 87    function_def_no_params_with_return -> FUN ID LPAREN RPAREN COLON type block
Rule 88    expression -> ARRAYOF LPAREN expression_list RPAREN
Rule 89    if_else -> IF LPAREN expression RPAREN block ELSE block
Rule 90    function_def_no_params_no_return -> FUN ID LPAREN RPAREN block
Rule 91    expression -> READLINE LPAREN RPAREN

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 49
ARRAYOF              : 88
ARROW                : 70 71
ASSIGN               : 19 20 82 83
BOOLEAN_FALSE        : 57
BOOLEAN_TRUE         : 56
BREAK                : 85
CATCH                : 
CLASS                : 74
COLON                : 25 80 81 82 83 87
COMMA                : 23 36 64
COMPANION            : 
CONSTRUCTOR          : 
CONTAINS             : 
CONTINUE             : 86
CROSSINLINE          : 
DATA                 : 
DIVIDE               : 42
DOT                  : 
ELSE                 : 71 89
ELVIS                : 
ENUM                 : 
EQUALS               : 47
EXTENDS              : 
FILTER               : 
FINAL                : 
FINALLY              : 
FOR                  : 32
FUN                  : 73 84 87 90
GREATER              : 44
GREATER_EQUAL        : 46
ID                   : 19 20 25 30 32 58 73 74 80 81 82 83 84 87 90
IF                   : 89
IMPLEMENTS           : 
IN                   : 32
INDICES              : 
INIT                 : 
INLINE               : 
INNER                : 
INTERFACE            : 
INTERNAL             : 
LATEINIT             : 
LBRACE               : 61 67 72 74
LBRACKET             : 
LESS                 : 43
LESS_EQUAL           : 45
LISTOF               : 63
LPAREN               : 32 35 52 59 60 63 67 73 84 87 88 89 90 91
MAPOF                : 35
MINUS                : 40 51
MODULO               : 
MULTIPLY             : 41
NOINLINE             : 
NOT_EQUALS           : 48
NUMBER_DOUBLE        : 54
NUMBER_INT           : 53
OBJECT               : 
OPEN                 : 
OR                   : 50
OUT                  : 
OVERRIDE             : 
PLUS                 : 39
PRINT                : 60
PRINTLN              : 59
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
QUESTION             : 
RANGE                : 
RBRACE               : 61 67 72 74
RBRACKET             : 
READLINE             : 91
REIFIED              : 
RETURN               : 31
RPAREN               : 32 35 52 59 60 63 67 73 84 87 88 89 90 91
SEALED               : 
SEMICOLON            : 
STRING               : 55
SUM                  : 
SUPER                : 
THIS                 : 
TO                   : 38
TRY                  : 
TYPE_BOOLEAN         : 28
TYPE_DOUBLE          : 27
TYPE_INT             : 26
TYPE_STRING          : 29
VAL                  : 20 81 83
VAR                  : 19 80 82
WHEN                 : 67 72
WHILE                : 
error                : 

Nonterminals, with rules where they appear

block                : 33 73 84 87 89 89 90
break_stmt           : 15
class_body           : 74 75
class_def            : 10
class_member         : 75 76
continue_stmt        : 16
declaration          : 5
expression           : 19 20 31 32 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 52 59 60 62 64 65 67 70 82 83 89
expression_list      : 63 64 88
expression_stmt      : 18
for_loop             : 11
function_def         : 6
function_def_no_params_no_return : 8
function_def_no_params_with_return : 9
function_def_params_no_return : 7
if_else              : 17
loop_body            : 32
map_entries          : 35 36
map_entry            : 36 37
method_def           : 79
param                : 23 24
param_list           : 21 23 73
param_list_opt       : 84
print_stmt           : 13
program              : 0
property_def         : 78
return_stmt          : 14
statement            : 2 3 34
statement_list       : 1 2 61 70 71
type                 : 25 80 81 82 83 87
when_branch          : 68 69
when_branches        : 67 68 72
when_stmt            : 12

