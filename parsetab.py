
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUALSNOT_EQUALSleftLESSGREATERLESS_EQUALGREATER_EQUALleftPLUSMINUSleftMULTIPLYDIVIDErightUMINUSABSTRACT AND ARRAYOF ARROW ASSIGN BOOLEAN_FALSE BOOLEAN_TRUE BREAK CATCH CLASS COLON COMMA COMPANION CONSTRUCTOR CONTAINS CONTINUE CROSSINLINE DATA DIVIDE DOT ELSE ELVIS ENUM EQUALS EXTENDS FILTER FINAL FINALLY FOR FUN GREATER GREATER_EQUAL ID IF IMPLEMENTS IN INDICES INIT INLINE INNER INTERFACE INTERNAL LATEINIT LBRACE LBRACKET LESS LESS_EQUAL LISTOF LPAREN MAPOF MINUS MODULO MULTIPLY NOINLINE NOT_EQUALS NUMBER_DOUBLE NUMBER_INT OBJECT OPEN OR OUT OVERRIDE PLUS PRINT PRINTLN PRIVATE PROTECTED PUBLIC QUESTION RANGE RBRACE RBRACKET READLINE REIFIED RETURN RPAREN SEALED SEMICOLON STRING SUM SUPER THIS TO TRY TYPE_BOOLEAN TYPE_DOUBLE TYPE_INT TYPE_STRING VAL VAR WHEN WHILEprogram : statement_liststatement_list : statement_list statementstatement_list : statementstatement_list : statement : declaration\n                 | function_def\n                 | class_def\n                 | for_loop\n                 | when_stmt\n                 | print_stmt\n                 | return_stmt\n                 | break_stmt\n                 | continue_stmt\n                 | if_else\n                 | expression_stmtdeclaration : VAR ID ASSIGN expression\n                   | VAL ID ASSIGN expression\n                    | VAR ID COLON type ASSIGN expression\n                    | VAL ID COLON type ASSIGN expressionparam_list_opt : param_list\n                      | param_list : param_list COMMA param\n                  | paramparam : ID COLON typetype : TYPE_INT\n            | TYPE_DOUBLE\n            | TYPE_BOOLEAN\n            | TYPE_STRING\n            | IDreturn_stmt : RETURN expressionfor_loop : FOR LPAREN ID IN expression RPAREN loop_bodyloop_body : block\n                 | statementexpression : MAPOF LPAREN map_entries RPARENmap_entries : map_entries COMMA map_entrymap_entries : map_entrymap_entry : expression TO expressionexpression : ID LPAREN expression_list RPARENexpression : expression LBRACKET expression RBRACKETexpression : expression DOT IDexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MULTIPLY expression\n                  | expression DIVIDE expression\n                  | expression LESS expression\n                  | expression GREATER expression\n                  | expression LESS_EQUAL expression\n                  | expression GREATER_EQUAL expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expression\n                  | expression AND expression\n                  | expression OR expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBER_INT\n                  | NUMBER_DOUBLE\n                  | STRING\n                  | BOOLEAN_TRUE\n                  | BOOLEAN_FALSEexpression : IDprint_stmt : PRINTLN LPAREN expression RPARENprint_stmt : PRINT LPAREN expression RPARENblock : LBRACE statement_list RBRACEexpression_stmt : expressionexpression : LISTOF LPAREN expression_list RPARENexpression_list : expression_list COMMA expressionexpression_list : expressionexpression_list : when_stmt : WHEN LPAREN expression RPAREN LBRACE when_branches RBRACEwhen_branches : when_branches when_branchwhen_branches : when_branchwhen_branch : expression ARROW statement_listwhen_branch : ELSE ARROW statement_listwhen_stmt : WHEN LBRACE when_branches RBRACEwhen_branch : expression blockwhen_branch : ELSE blockclass_def : CLASS ID LBRACE class_body RBRACEclass_body : class_body class_memberclass_body : class_memberclass_body : class_member : property_def\n                    | method_defproperty_def : VAR ID COLON type\n                    | VAL ID COLON type\n                    | VAR ID COLON type ASSIGN expression\n                    | VAL ID COLON type ASSIGN expressionmethod_def : FUN ID LPAREN param_list_opt RPAREN blockfunction_def : FUN ID LPAREN param_list_opt RPAREN COLON type block\n                    | FUN ID LPAREN param_list_opt RPAREN blockbreak_stmt : BREAKcontinue_stmt : CONTINUEexpression : ARRAYOF LPAREN expression_list RPARENif_else : IF LPAREN expression RPAREN block ELSE blockif_else : IF LPAREN expression RPAREN blockexpression : READLINE LPAREN RPAREN'
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,110,111,112,114,115,116,117,118,120,121,127,128,129,130,136,138,140,141,143,144,146,149,150,157,158,164,165,166,167,170,171,174,179,181,184,185,187,188,189,190,191,192,196,197,198,],[15,15,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,131,-95,-16,-29,-25,-26,-27,-28,-38,-39,-17,131,-79,-81,-82,-74,15,15,15,-61,-62,-34,-65,-92,-77,-78,15,15,15,-94,-18,-19,-89,15,-63,-83,-84,-31,-32,-33,-69,-93,-88,-85,-86,-87,]),'VAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,110,111,112,114,115,116,117,118,120,121,127,128,129,130,136,138,140,141,143,144,146,149,150,157,158,164,165,166,167,170,171,174,179,181,184,185,187,188,189,190,191,192,196,197,198,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,132,-95,-16,-29,-25,-26,-27,-28,-38,-39,-17,132,-79,-81,-82,-74,18,18,18,-61,-62,-34,-65,-92,-77,-78,18,18,18,-94,-18,-19,-89,18,-63,-83,-84,-31,-32,-33,-69,-93,-88,-85,-86,-87,]),'FUN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,110,111,112,114,115,116,117,118,120,121,127,128,129,130,136,138,140,141,143,144,146,149,150,157,158,164,165,166,167,170,171,174,179,181,184,185,187,188,189,190,191,192,196,197,198,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,133,-95,-16,-29,-25,-26,-27,-28,-38,-39,-17,133,-79,-81,-82,-74,19,19,19,-61,-62,-34,-65,-92,-77,-78,19,19,19,-94,-18,-19,-89,19,-63,-83,-84,-31,-32,-33,-69,-93,-88,-85,-86,-87,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,138,140,141,143,144,146,149,150,157,164,165,166,167,170,171,174,179,181,187,188,189,190,191,192,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,21,21,21,-61,-62,-34,-65,-92,-77,21,21,21,-94,-18,-19,-89,21,-63,-31,-32,-33,-69,-93,-88,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,138,140,141,143,144,146,149,150,157,164,165,166,167,170,171,174,179,181,187,188,189,190,191,192,],[22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,22,22,22,-61,-62,-34,-65,-92,-77,22,22,22,-94,-18,-19,-89,22,-63,-31,-32,-33,-69,-93,-88,]),'WHEN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,138,140,141,143,144,146,149,150,157,164,165,166,167,170,171,174,179,181,187,188,189,190,191,192,],[23,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,23,23,23,-61,-62,-34,-65,-92,-77,23,23,23,-94,-18,-19,-89,23,-63,-31,-32,-33,-69,-93,-88,]),'PRINTLN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,138,140,141,143,144,146,149,150,157,164,165,166,167,170,171,174,179,181,187,188,189,190,191,192,],[24,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,24,24,24,-61,-62,-34,-65,-92,-77,24,24,24,-94,-18,-19,-89,24,-63,-31,-32,-33,-69,-93,-88,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,138,140,141,143,144,146,149,150,157,164,165,166,167,170,171,174,179,181,187,188,189,190,191,192,],[25,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,25,25,25,-61,-62,-34,-65,-92,-77,25,25,25,-94,-18,-19,-89,25,-63,-31,-32,-33,-69,-93,-88,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,138,140,141,143,144,146,149,150,157,164,165,166,167,170,171,174,179,181,187,188,189,190,191,192,],[26,26,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,26,26,26,-61,-62,-34,-65,-92,-77,26,26,26,-94,-18,-19,-89,26,-63,-31,-32,-33,-69,-93,-88,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,138,140,141,143,144,146,149,150,157,164,165,166,167,170,171,174,179,181,187,188,189,190,191,192,],[27,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,27,27,27,-61,-62,-34,-65,-92,-77,27,27,27,-94,-18,-19,-89,27,-63,-31,-32,-33,-69,-93,-88,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,138,140,141,143,144,146,149,150,157,164,165,166,167,170,171,174,179,181,187,188,189,190,191,192,],[28,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,28,28,28,-61,-62,-34,-65,-92,-77,28,28,28,-94,-18,-19,-89,28,-63,-31,-32,-33,-69,-93,-88,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,138,140,141,143,144,146,149,150,157,164,165,166,167,170,171,174,179,181,187,188,189,190,191,192,],[29,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,29,29,29,-61,-62,-34,-65,-92,-77,29,29,29,-94,-18,-19,-89,29,-63,-31,-32,-33,-69,-93,-88,]),'MAPOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[30,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,30,30,-90,-91,30,-55,-56,-57,-58,-59,-2,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-30,30,30,-53,30,30,30,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,30,-54,30,-71,-95,-16,-38,30,-39,-17,30,-74,-70,30,-75,30,30,-76,-61,-62,-34,30,30,-65,-92,30,30,-77,30,30,30,30,-94,-18,-19,-89,30,30,-63,-31,-32,-33,-69,-93,-88,30,30,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,31,32,33,34,35,36,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,73,74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,110,111,118,119,120,121,131,132,133,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,154,156,157,163,164,165,166,167,170,171,173,174,176,177,178,179,180,181,187,188,189,190,191,192,193,194,],[16,16,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,41,-60,-64,57,58,16,60,16,-90,-91,16,-55,-56,-57,-58,-59,-2,16,16,78,16,16,16,16,16,16,16,16,16,16,16,16,96,16,16,16,16,-30,16,16,-53,16,16,16,112,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,16,112,123,-54,16,-71,-95,-16,-38,16,-39,-17,159,160,161,16,-74,-70,16,-75,16,16,-76,-61,-62,-34,16,16,-65,-92,16,16,112,123,-77,16,16,16,16,-94,-18,-19,112,-89,112,112,123,16,16,-63,-31,-32,-33,-69,-93,-88,16,16,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,59,62,63,64,65,66,67,68,69,70,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,97,98,99,100,102,103,104,107,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,157,162,163,164,165,166,167,169,170,171,174,179,180,181,187,188,189,190,191,192,193,194,196,197,],[31,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,46,31,31,-90,-91,31,-55,-56,-57,-58,-59,-2,31,31,31,31,31,31,31,31,31,31,31,31,31,31,46,31,31,31,31,46,31,31,-53,31,31,31,46,46,-40,-41,-42,-43,-44,46,46,46,46,46,46,46,46,31,-54,46,31,-71,46,46,46,46,46,-95,46,-38,31,-39,46,31,-74,-70,31,-75,31,31,-76,-61,-62,-34,31,31,-65,-92,31,46,31,-77,46,31,31,31,31,-94,46,46,46,-89,31,31,-63,-31,-32,-33,-69,-93,-88,31,31,46,46,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,161,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,42,-64,20,61,62,64,65,20,-90,-91,67,68,20,-55,-56,-57,-58,-59,70,71,72,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,93,20,20,20,20,-30,20,20,-53,20,20,20,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,20,-54,20,-71,-95,-16,-38,20,-39,-17,20,-74,-70,20,-75,20,20,-76,-61,-62,-34,20,20,-65,-92,20,20,-77,178,20,20,20,20,-94,-18,-19,-89,20,20,-63,-31,-32,-33,-69,-93,-88,20,20,]),'NUMBER_INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[32,32,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,32,32,-90,-91,32,-55,-56,-57,-58,-59,-2,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-30,32,32,-53,32,32,32,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,32,-54,32,-71,-95,-16,-38,32,-39,-17,32,-74,-70,32,-75,32,32,-76,-61,-62,-34,32,32,-65,-92,32,32,-77,32,32,32,32,-94,-18,-19,-89,32,32,-63,-31,-32,-33,-69,-93,-88,32,32,]),'NUMBER_DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[33,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,33,33,-90,-91,33,-55,-56,-57,-58,-59,-2,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-30,33,33,-53,33,33,33,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,33,-54,33,-71,-95,-16,-38,33,-39,-17,33,-74,-70,33,-75,33,33,-76,-61,-62,-34,33,33,-65,-92,33,33,-77,33,33,33,33,-94,-18,-19,-89,33,33,-63,-31,-32,-33,-69,-93,-88,33,33,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[34,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,34,34,-90,-91,34,-55,-56,-57,-58,-59,-2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-30,34,34,-53,34,34,34,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,34,-54,34,-71,-95,-16,-38,34,-39,-17,34,-74,-70,34,-75,34,34,-76,-61,-62,-34,34,34,-65,-92,34,34,-77,34,34,34,34,-94,-18,-19,-89,34,34,-63,-31,-32,-33,-69,-93,-88,34,34,]),'BOOLEAN_TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[35,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,35,35,-90,-91,35,-55,-56,-57,-58,-59,-2,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-30,35,35,-53,35,35,35,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,35,-54,35,-71,-95,-16,-38,35,-39,-17,35,-74,-70,35,-75,35,35,-76,-61,-62,-34,35,35,-65,-92,35,35,-77,35,35,35,35,-94,-18,-19,-89,35,35,-63,-31,-32,-33,-69,-93,-88,35,35,]),'BOOLEAN_FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[36,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,36,36,-90,-91,36,-55,-56,-57,-58,-59,-2,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-30,36,36,-53,36,36,36,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,36,-54,36,-71,-95,-16,-38,36,-39,-17,36,-74,-70,36,-75,36,36,-76,-61,-62,-34,36,36,-65,-92,36,36,-77,36,36,36,36,-94,-18,-19,-89,36,36,-63,-31,-32,-33,-69,-93,-88,36,36,]),'LISTOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[37,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,37,37,-90,-91,37,-55,-56,-57,-58,-59,-2,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-30,37,37,-53,37,37,37,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,37,-54,37,-71,-95,-16,-38,37,-39,-17,37,-74,-70,37,-75,37,37,-76,-61,-62,-34,37,37,-65,-92,37,37,-77,37,37,37,37,-94,-18,-19,-89,37,37,-63,-31,-32,-33,-69,-93,-88,37,37,]),'ARRAYOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[38,38,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,38,38,-90,-91,38,-55,-56,-57,-58,-59,-2,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-30,38,38,-53,38,38,38,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,38,-54,38,-71,-95,-16,-38,38,-39,-17,38,-74,-70,38,-75,38,38,-76,-61,-62,-34,38,38,-65,-92,38,38,-77,38,38,38,38,-94,-18,-19,-89,38,38,-63,-31,-32,-33,-69,-93,-88,38,38,]),'READLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,26,27,28,31,32,33,34,35,36,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,98,99,110,111,118,119,120,121,134,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,157,163,164,165,166,167,170,171,174,179,180,181,187,188,189,190,191,192,193,194,],[39,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,39,39,-90,-91,39,-55,-56,-57,-58,-59,-2,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-30,39,39,-53,39,39,39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,39,-54,39,-71,-95,-16,-38,39,-39,-17,39,-74,-70,39,-75,39,39,-76,-61,-62,-34,39,39,-65,-92,39,39,-77,39,39,39,39,-94,-18,-19,-89,39,39,-63,-31,-32,-33,-69,-93,-88,39,39,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,111,118,120,121,136,143,144,146,149,150,157,167,170,171,174,181,187,188,189,190,191,192,],[-4,0,-1,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-16,-38,-39,-17,-74,-61,-62,-34,-65,-92,-77,-94,-18,-19,-89,-63,-31,-32,-33,-69,-93,-88,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,98,99,110,111,112,114,115,116,117,118,120,121,127,128,129,130,136,137,138,139,140,141,142,143,144,146,149,150,157,158,164,165,166,167,170,171,174,180,181,184,185,187,188,189,190,191,192,196,197,198,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-80,136,-71,-95,-16,-29,-25,-26,-27,-28,-38,-39,-17,157,-79,-81,-82,-74,-70,-4,-75,-4,-4,-76,-61,-62,-34,-65,-92,-77,-78,-72,181,-73,-94,-18,-19,-89,190,-63,-83,-84,-31,-32,-33,-69,-93,-88,-85,-86,-87,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,16,17,27,28,32,33,34,35,36,40,63,66,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,98,99,110,111,118,120,121,136,137,138,139,141,142,143,144,146,149,150,157,163,164,166,167,170,171,174,180,181,187,188,189,190,191,192,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-60,-64,-90,-91,-55,-56,-57,-58,-59,-2,101,-30,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,101,-71,-95,-16,-38,-39,-17,-74,-70,-4,-75,-4,-76,-61,-62,-34,-65,-92,-77,101,-72,-73,182,-18,-19,-89,101,-63,-31,-32,-33,-69,-93,-88,]),'LBRACKET':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,43,-55,-56,-57,-58,-59,43,43,-53,43,43,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,43,43,43,43,43,43,-95,43,-38,-39,43,-34,-65,-92,43,43,43,43,43,43,43,]),'DOT':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,44,-55,-56,-57,-58,-59,44,44,-53,44,44,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,44,44,44,44,44,44,-95,44,-38,-39,44,-34,-65,-92,44,44,44,44,44,44,44,]),'PLUS':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,45,-55,-56,-57,-58,-59,45,45,-53,45,45,-40,-41,-42,-43,-44,45,45,45,45,45,45,45,45,-54,45,45,45,45,45,45,-95,45,-38,-39,45,-34,-65,-92,45,45,45,45,45,45,45,]),'MULTIPLY':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,47,-55,-56,-57,-58,-59,47,47,-53,47,47,-40,47,47,-43,-44,47,47,47,47,47,47,47,47,-54,47,47,47,47,47,47,-95,47,-38,-39,47,-34,-65,-92,47,47,47,47,47,47,47,]),'DIVIDE':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,48,-55,-56,-57,-58,-59,48,48,-53,48,48,-40,48,48,-43,-44,48,48,48,48,48,48,48,48,-54,48,48,48,48,48,48,-95,48,-38,-39,48,-34,-65,-92,48,48,48,48,48,48,48,]),'LESS':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,49,-55,-56,-57,-58,-59,49,49,-53,49,49,-40,-41,-42,-43,-44,-45,-46,-47,-48,49,49,49,49,-54,49,49,49,49,49,49,-95,49,-38,-39,49,-34,-65,-92,49,49,49,49,49,49,49,]),'GREATER':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,50,-55,-56,-57,-58,-59,50,50,-53,50,50,-40,-41,-42,-43,-44,-45,-46,-47,-48,50,50,50,50,-54,50,50,50,50,50,50,-95,50,-38,-39,50,-34,-65,-92,50,50,50,50,50,50,50,]),'LESS_EQUAL':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,51,-55,-56,-57,-58,-59,51,51,-53,51,51,-40,-41,-42,-43,-44,-45,-46,-47,-48,51,51,51,51,-54,51,51,51,51,51,51,-95,51,-38,-39,51,-34,-65,-92,51,51,51,51,51,51,51,]),'GREATER_EQUAL':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,52,-55,-56,-57,-58,-59,52,52,-53,52,52,-40,-41,-42,-43,-44,-45,-46,-47,-48,52,52,52,52,-54,52,52,52,52,52,52,-95,52,-38,-39,52,-34,-65,-92,52,52,52,52,52,52,52,]),'EQUALS':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,53,-55,-56,-57,-58,-59,53,53,-53,53,53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,53,53,-54,53,53,53,53,53,53,-95,53,-38,-39,53,-34,-65,-92,53,53,53,53,53,53,53,]),'NOT_EQUALS':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,54,-55,-56,-57,-58,-59,54,54,-53,54,54,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,54,54,-54,54,54,54,54,54,54,-95,54,-38,-39,54,-34,-65,-92,54,54,54,54,54,54,54,]),'AND':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,55,-55,-56,-57,-58,-59,55,55,-53,55,55,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,55,-54,55,55,55,55,55,55,-95,55,-38,-39,55,-34,-65,-92,55,55,55,55,55,55,55,]),'OR':([16,17,32,33,34,35,36,59,66,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,100,102,103,104,107,110,111,118,120,121,146,149,150,152,162,169,170,171,196,197,],[-60,56,-55,-56,-57,-58,-59,56,56,-53,56,56,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,56,56,56,56,56,56,-95,56,-38,-39,56,-34,-65,-92,56,56,56,56,56,56,56,]),'RPAREN':([16,32,33,34,35,36,42,59,69,70,71,72,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,97,102,103,104,105,106,108,109,110,112,114,115,116,117,118,120,124,125,126,146,149,150,152,162,168,169,172,175,178,186,],[-60,-55,-56,-57,-58,-59,-68,94,-53,-68,-68,110,118,-67,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-21,-54,135,143,144,145,146,-36,149,150,-95,-29,-25,-26,-27,-28,-38,-39,155,-20,-23,-34,-65,-92,-66,179,-35,-37,-24,-22,-21,195,]),'COMMA':([16,32,33,34,35,36,42,69,70,71,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,94,105,106,108,109,110,112,114,115,116,117,118,120,125,126,146,149,150,152,168,169,172,175,],[-60,-55,-56,-57,-58,-59,-68,-53,-68,-68,119,-67,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,147,-36,119,119,-95,-29,-25,-26,-27,-28,-38,-39,156,-23,-34,-65,-92,-66,-35,-37,-24,-22,]),'RBRACKET':([16,32,33,34,35,36,69,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,110,118,120,146,149,150,],[-60,-55,-56,-57,-58,-59,-53,120,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,-95,-38,-39,-34,-65,-92,]),'ARROW':([16,32,33,34,35,36,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,100,101,110,118,120,146,149,150,],[-60,-55,-56,-57,-58,-59,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,138,141,-95,-38,-39,-34,-65,-92,]),'LBRACE':([16,23,32,33,34,35,36,60,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,100,101,110,112,114,115,116,117,118,120,135,145,146,149,150,155,179,182,183,195,],[-60,63,-55,-56,-57,-58,-59,95,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,140,140,-95,-29,-25,-26,-27,-28,-38,-39,163,140,-34,-65,-92,140,140,140,140,140,]),'TO':([16,32,33,34,35,36,69,78,79,80,81,82,83,84,85,86,87,88,89,90,94,107,110,118,120,146,149,150,],[-60,-55,-56,-57,-58,-59,-53,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-54,148,-95,-38,-39,-34,-65,-92,]),'ASSIGN':([41,57,112,113,114,115,116,117,122,184,185,],[73,91,-29,151,-25,-26,-27,-28,153,193,194,]),'COLON':([41,57,123,155,159,160,],[74,92,154,173,176,177,]),'TYPE_INT':([74,92,154,173,176,177,],[114,114,114,114,114,114,]),'TYPE_DOUBLE':([74,92,154,173,176,177,],[115,115,115,115,115,115,]),'TYPE_BOOLEAN':([74,92,154,173,176,177,],[116,116,116,116,116,116,]),'TYPE_STRING':([74,92,154,173,176,177,],[117,117,117,117,117,117,]),'IN':([96,],[134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,138,140,141,],[2,164,165,166,]),'statement':([0,2,138,140,141,164,165,166,179,],[3,40,3,3,3,40,40,40,189,]),'declaration':([0,2,138,140,141,164,165,166,179,],[4,4,4,4,4,4,4,4,4,]),'function_def':([0,2,138,140,141,164,165,166,179,],[5,5,5,5,5,5,5,5,5,]),'class_def':([0,2,138,140,141,164,165,166,179,],[6,6,6,6,6,6,6,6,6,]),'for_loop':([0,2,138,140,141,164,165,166,179,],[7,7,7,7,7,7,7,7,7,]),'when_stmt':([0,2,138,140,141,164,165,166,179,],[8,8,8,8,8,8,8,8,8,]),'print_stmt':([0,2,138,140,141,164,165,166,179,],[9,9,9,9,9,9,9,9,9,]),'return_stmt':([0,2,138,140,141,164,165,166,179,],[10,10,10,10,10,10,10,10,10,]),'break_stmt':([0,2,138,140,141,164,165,166,179,],[11,11,11,11,11,11,11,11,11,]),'continue_stmt':([0,2,138,140,141,164,165,166,179,],[12,12,12,12,12,12,12,12,12,]),'if_else':([0,2,138,140,141,164,165,166,179,],[13,13,13,13,13,13,13,13,13,]),'expression_stmt':([0,2,138,140,141,164,165,166,179,],[14,14,14,14,14,14,14,14,14,]),'expression':([0,2,20,26,31,42,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,67,68,70,71,73,91,98,119,134,138,140,141,147,148,151,153,163,164,165,166,179,180,193,194,],[17,17,59,66,69,76,77,79,80,81,82,83,84,85,86,87,88,89,90,97,100,102,103,104,107,76,76,111,121,100,152,162,17,17,17,107,169,170,171,100,17,17,17,17,100,196,197,]),'expression_list':([42,70,71,],[75,108,109,]),'when_branches':([63,163,],[98,180,]),'when_branch':([63,98,163,180,],[99,137,99,137,]),'map_entries':([68,],[105,]),'map_entry':([68,147,],[106,168,]),'type':([74,92,154,173,176,177,],[113,122,172,183,184,185,]),'param_list_opt':([93,178,],[124,186,]),'param_list':([93,178,],[125,125,]),'param':([93,156,178,],[126,175,126,]),'class_body':([95,],[127,]),'class_member':([95,127,],[128,158,]),'property_def':([95,127,],[129,129,]),'method_def':([95,127,],[130,130,]),'block':([100,101,145,155,179,182,183,195,],[139,142,167,174,188,191,192,198,]),'loop_body':([179,],[187,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','kotlin_parser.py',71),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multiple','kotlin_parser.py',75),
  ('statement_list -> statement','statement_list',1,'p_statement_list_single','kotlin_parser.py',80),
  ('statement_list -> <empty>','statement_list',0,'p_statement_list_empty','kotlin_parser.py',84),
  ('statement -> declaration','statement',1,'p_statement','kotlin_parser.py',88),
  ('statement -> function_def','statement',1,'p_statement','kotlin_parser.py',89),
  ('statement -> class_def','statement',1,'p_statement','kotlin_parser.py',90),
  ('statement -> for_loop','statement',1,'p_statement','kotlin_parser.py',91),
  ('statement -> when_stmt','statement',1,'p_statement','kotlin_parser.py',92),
  ('statement -> print_stmt','statement',1,'p_statement','kotlin_parser.py',93),
  ('statement -> return_stmt','statement',1,'p_statement','kotlin_parser.py',94),
  ('statement -> break_stmt','statement',1,'p_statement','kotlin_parser.py',95),
  ('statement -> continue_stmt','statement',1,'p_statement','kotlin_parser.py',96),
  ('statement -> if_else','statement',1,'p_statement','kotlin_parser.py',97),
  ('statement -> expression_stmt','statement',1,'p_statement','kotlin_parser.py',98),
  ('declaration -> VAR ID ASSIGN expression','declaration',4,'p_declaration','kotlin_parser.py',111),
  ('declaration -> VAL ID ASSIGN expression','declaration',4,'p_declaration','kotlin_parser.py',112),
  ('declaration -> VAR ID COLON type ASSIGN expression','declaration',6,'p_declaration','kotlin_parser.py',113),
  ('declaration -> VAL ID COLON type ASSIGN expression','declaration',6,'p_declaration','kotlin_parser.py',114),
  ('param_list_opt -> param_list','param_list_opt',1,'p_param_list_opt','kotlin_parser.py',130),
  ('param_list_opt -> <empty>','param_list_opt',0,'p_param_list_opt','kotlin_parser.py',131),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','kotlin_parser.py',135),
  ('param_list -> param','param_list',1,'p_param_list','kotlin_parser.py',136),
  ('param -> ID COLON type','param',3,'p_param','kotlin_parser.py',140),
  ('type -> TYPE_INT','type',1,'p_type','kotlin_parser.py',144),
  ('type -> TYPE_DOUBLE','type',1,'p_type','kotlin_parser.py',145),
  ('type -> TYPE_BOOLEAN','type',1,'p_type','kotlin_parser.py',146),
  ('type -> TYPE_STRING','type',1,'p_type','kotlin_parser.py',147),
  ('type -> ID','type',1,'p_type','kotlin_parser.py',148),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','kotlin_parser.py',153),
  ('for_loop -> FOR LPAREN ID IN expression RPAREN loop_body','for_loop',7,'p_for_loop','kotlin_parser.py',158),
  ('loop_body -> block','loop_body',1,'p_loop_body','kotlin_parser.py',162),
  ('loop_body -> statement','loop_body',1,'p_loop_body','kotlin_parser.py',163),
  ('expression -> MAPOF LPAREN map_entries RPAREN','expression',4,'p_expression_map','kotlin_parser.py',168),
  ('map_entries -> map_entries COMMA map_entry','map_entries',3,'p_map_entries_multiple','kotlin_parser.py',172),
  ('map_entries -> map_entry','map_entries',1,'p_map_entries_single','kotlin_parser.py',176),
  ('map_entry -> expression TO expression','map_entry',3,'p_map_entry','kotlin_parser.py',180),
  ('expression -> ID LPAREN expression_list RPAREN','expression',4,'p_expression_call_func','kotlin_parser.py',184),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_index','kotlin_parser.py',188),
  ('expression -> expression DOT ID','expression',3,'p_expression_member','kotlin_parser.py',192),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary','kotlin_parser.py',283),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary','kotlin_parser.py',284),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary','kotlin_parser.py',285),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','kotlin_parser.py',286),
  ('expression -> expression LESS expression','expression',3,'p_expression_binary','kotlin_parser.py',287),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binary','kotlin_parser.py',288),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binary','kotlin_parser.py',289),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binary','kotlin_parser.py',290),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary','kotlin_parser.py',291),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary','kotlin_parser.py',292),
  ('expression -> expression AND expression','expression',3,'p_expression_binary','kotlin_parser.py',293),
  ('expression -> expression OR expression','expression',3,'p_expression_binary','kotlin_parser.py',294),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','kotlin_parser.py',302),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','kotlin_parser.py',306),
  ('expression -> NUMBER_INT','expression',1,'p_expression_literal','kotlin_parser.py',310),
  ('expression -> NUMBER_DOUBLE','expression',1,'p_expression_literal','kotlin_parser.py',311),
  ('expression -> STRING','expression',1,'p_expression_literal','kotlin_parser.py',312),
  ('expression -> BOOLEAN_TRUE','expression',1,'p_expression_literal','kotlin_parser.py',313),
  ('expression -> BOOLEAN_FALSE','expression',1,'p_expression_literal','kotlin_parser.py',314),
  ('expression -> ID','expression',1,'p_expression_id','kotlin_parser.py',330),
  ('print_stmt -> PRINTLN LPAREN expression RPAREN','print_stmt',4,'p_print_stmt','kotlin_parser.py',338),
  ('print_stmt -> PRINT LPAREN expression RPAREN','print_stmt',4,'p_print_stmt_print','kotlin_parser.py',342),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','kotlin_parser.py',347),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','kotlin_parser.py',352),
  ('expression -> LISTOF LPAREN expression_list RPAREN','expression',4,'p_expression_listOf','kotlin_parser.py',365),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list_multiple','kotlin_parser.py',370),
  ('expression_list -> expression','expression_list',1,'p_expression_list_single','kotlin_parser.py',375),
  ('expression_list -> <empty>','expression_list',0,'p_expression_list_empty','kotlin_parser.py',379),
  ('when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE','when_stmt',7,'p_when_stmt','kotlin_parser.py',385),
  ('when_branches -> when_branches when_branch','when_branches',2,'p_when_branches_multiple','kotlin_parser.py',389),
  ('when_branches -> when_branch','when_branches',1,'p_when_branches_single','kotlin_parser.py',394),
  ('when_branch -> expression ARROW statement_list','when_branch',3,'p_when_branch_expression','kotlin_parser.py',398),
  ('when_branch -> ELSE ARROW statement_list','when_branch',3,'p_when_branch_else','kotlin_parser.py',402),
  ('when_stmt -> WHEN LBRACE when_branches RBRACE','when_stmt',4,'p_when_stmt_without_expr','kotlin_parser.py',407),
  ('when_branch -> expression block','when_branch',2,'p_when_branch_expression_brace','kotlin_parser.py',411),
  ('when_branch -> ELSE block','when_branch',2,'p_when_branch_else_brace','kotlin_parser.py',415),
  ('class_def -> CLASS ID LBRACE class_body RBRACE','class_def',5,'p_class_def','kotlin_parser.py',479),
  ('class_body -> class_body class_member','class_body',2,'p_class_body_multiple','kotlin_parser.py',483),
  ('class_body -> class_member','class_body',1,'p_class_body_single','kotlin_parser.py',488),
  ('class_body -> <empty>','class_body',0,'p_class_body_empty','kotlin_parser.py',492),
  ('class_member -> property_def','class_member',1,'p_class_member','kotlin_parser.py',496),
  ('class_member -> method_def','class_member',1,'p_class_member','kotlin_parser.py',497),
  ('property_def -> VAR ID COLON type','property_def',4,'p_property_def','kotlin_parser.py',501),
  ('property_def -> VAL ID COLON type','property_def',4,'p_property_def','kotlin_parser.py',502),
  ('property_def -> VAR ID COLON type ASSIGN expression','property_def',6,'p_property_def','kotlin_parser.py',503),
  ('property_def -> VAL ID COLON type ASSIGN expression','property_def',6,'p_property_def','kotlin_parser.py',504),
  ('method_def -> FUN ID LPAREN param_list_opt RPAREN block','method_def',6,'p_method_def','kotlin_parser.py',514),
  ('function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block','function_def',8,'p_function_def','kotlin_parser.py',541),
  ('function_def -> FUN ID LPAREN param_list_opt RPAREN block','function_def',6,'p_function_def','kotlin_parser.py',542),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','kotlin_parser.py',581),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','kotlin_parser.py',586),
  ('expression -> ARRAYOF LPAREN expression_list RPAREN','expression',4,'p_expression_arrayof','kotlin_parser.py',730),
  ('if_else -> IF LPAREN expression RPAREN block ELSE block','if_else',7,'p_if_else','kotlin_parser.py',734),
  ('if_else -> IF LPAREN expression RPAREN block','if_else',5,'p_if','kotlin_parser.py',739),
  ('expression -> READLINE LPAREN RPAREN','expression',3,'p_expression_readline','kotlin_parser.py',750),
]
