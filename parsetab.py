
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUALSNOT_EQUALSleftLESSGREATERLESS_EQUALGREATER_EQUALleftPLUSMINUSleftMULTIPLYDIVIDErightUMINUSABSTRACT AND ARRAYOF ARROW ASSIGN BOOLEAN_FALSE BOOLEAN_TRUE BREAK CATCH CLASS COLON COMMA COMPANION CONSTRUCTOR CONTAINS CONTINUE CROSSINLINE DATA DIVIDE DOT ELSE ELVIS ENUM EQUALS EXTENDS FILTER FINAL FINALLY FOR FUN GREATER GREATER_EQUAL ID IF IMPLEMENTS IN INDICES INIT INLINE INNER INTERFACE INTERNAL LATEINIT LBRACE LBRACKET LESS LESS_EQUAL LISTOF LPAREN MAPOF MINUS MODULO MULTIPLY NOINLINE NOT_EQUALS NUMBER_DOUBLE NUMBER_INT OBJECT OPEN OR OUT OVERRIDE PLUS PRINT PRINTLN PRIVATE PROTECTED PUBLIC QUESTION RANGE RBRACE RBRACKET READLINE REIFIED RETURN RPAREN SEALED SEMICOLON STRING SUM SUPER THIS TO TRY TYPE_BOOLEAN TYPE_DOUBLE TYPE_INT TYPE_STRING VAL VAR WHEN WHILEprogram : statement_liststatement_list : statement_list statementstatement_list : statementstatement_list : statement : declaration\n| function_def\n| function_def_params_no_return\n| function_def_no_params_no_return\n| function_def_no_params_with_return\n| class_def\n| for_loop\n| when_stmt\n| print_stmt\n| return_stmt\n| break_stmt\n| continue_stmt\n| if_else\n| expression_stmtdeclaration : VAR ID ASSIGN expression\n| VAL ID ASSIGN expressionfunction_def : FUN ID LPAREN param_list_opt RPAREN COLON type blockparam_list_opt : param_list\n| param_list : param_list COMMA param\n| paramparam : ID COLON typetype : TYPE_INT\n| TYPE_DOUBLE\n| TYPE_BOOLEAN\n| TYPE_STRING\n| IDreturn_stmt : RETURN expressionfor_loop : FOR LPAREN ID IN expression RPAREN loop_bodyloop_body : block\n| statementexpression : MAPOF LPAREN map_entries RPARENmap_entries : map_entries COMMA map_entrymap_entries : map_entrymap_entry : expression TO expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression MULTIPLY expression\n| expression DIVIDE expression\n| expression LESS expression\n| expression GREATER expression\n| expression LESS_EQUAL expression\n| expression GREATER_EQUAL expression\n| expression EQUALS expression\n| expression NOT_EQUALS expression\n| expression AND expression\n| expression OR expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBER_INT\n| NUMBER_DOUBLE\n| STRING\n| BOOLEAN_TRUE\n| BOOLEAN_FALSEexpression : IDprint_stmt : PRINTLN LPAREN expression RPARENprint_stmt : PRINT LPAREN expression RPARENblock : LBRACE statement_list RBRACEexpression_stmt : expressionexpression : LISTOF LPAREN expression_list RPARENexpression_list : expression_list COMMA expressionexpression_list : expressionexpression_list : when_stmt : WHEN LPAREN expression RPAREN LBRACE when_branches RBRACEwhen_branches : when_branches when_branchwhen_branches : when_branchwhen_branch : expression ARROW statement_listwhen_branch : ELSE ARROW statement_listwhen_stmt : WHEN LBRACE when_branches RBRACEfunction_def_params_no_return : FUN ID LPAREN param_list RPAREN blockclass_def : CLASS ID LBRACE class_body RBRACEclass_body : class_body class_memberclass_body : class_memberclass_body : class_member : property_def\n| method_defproperty_def : VAR ID COLON type\n| VAL ID COLON type\n| VAR ID COLON type ASSIGN expression\n| VAL ID COLON type ASSIGN expressionmethod_def : FUN ID LPAREN param_list_opt RPAREN blockbreak_stmt : BREAKcontinue_stmt : CONTINUEfunction_def_no_params_with_return : FUN ID LPAREN RPAREN COLON type blockexpression : ARRAYOF LPAREN expression_list RPARENif_else : IF LPAREN expression RPAREN block ELSE blockfunction_def_no_params_no_return : FUN ID LPAREN RPAREN blockexpression : READLINE LPAREN RPAREN'
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,89,105,106,107,113,114,115,116,122,124,125,126,127,129,132,134,137,139,142,143,149,150,155,157,158,159,160,163,164,169,173,174,175,176,179,180,181,182,183,184,188,189,190,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,117,-92,-19,-20,117,-77,-79,-80,-73,18,18,-60,-61,-36,-64,-89,-91,18,-75,-76,18,18,-31,-27,-28,-29,-30,18,-74,18,-88,-62,-81,-82,-33,-34,-35,-68,-90,-21,-83,-84,-85,]),'VAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,89,105,106,107,113,114,115,116,122,124,125,126,127,129,132,134,137,139,142,143,149,150,155,157,158,159,160,163,164,169,173,174,175,176,179,180,181,182,183,184,188,189,190,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,118,-92,-19,-20,118,-77,-79,-80,-73,21,21,-60,-61,-36,-64,-89,-91,21,-75,-76,21,21,-31,-27,-28,-29,-30,21,-74,21,-88,-62,-81,-82,-33,-34,-35,-68,-90,-21,-83,-84,-85,]),'FUN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,89,105,106,107,113,114,115,116,122,124,125,126,127,129,132,134,137,139,142,143,149,150,155,157,158,159,160,163,164,169,173,174,175,176,179,180,181,182,183,184,188,189,190,],[22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,119,-92,-19,-20,119,-77,-79,-80,-73,22,22,-60,-61,-36,-64,-89,-91,22,-75,-76,22,22,-31,-27,-28,-29,-30,22,-74,22,-88,-62,-81,-82,-33,-34,-35,-68,-90,-21,-83,-84,-85,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,124,125,126,127,129,132,134,137,139,142,149,150,163,164,169,173,174,179,180,181,182,183,184,],[24,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,24,24,-60,-61,-36,-64,-89,-91,24,-75,24,24,24,-74,24,-88,-62,-33,-34,-35,-68,-90,-21,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,124,125,126,127,129,132,134,137,139,142,149,150,163,164,169,173,174,179,180,181,182,183,184,],[25,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,25,25,-60,-61,-36,-64,-89,-91,25,-75,25,25,25,-74,25,-88,-62,-33,-34,-35,-68,-90,-21,]),'WHEN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,124,125,126,127,129,132,134,137,139,142,149,150,163,164,169,173,174,179,180,181,182,183,184,],[26,26,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,26,26,-60,-61,-36,-64,-89,-91,26,-75,26,26,26,-74,26,-88,-62,-33,-34,-35,-68,-90,-21,]),'PRINTLN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,124,125,126,127,129,132,134,137,139,142,149,150,163,164,169,173,174,179,180,181,182,183,184,],[27,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,27,27,-60,-61,-36,-64,-89,-91,27,-75,27,27,27,-74,27,-88,-62,-33,-34,-35,-68,-90,-21,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,124,125,126,127,129,132,134,137,139,142,149,150,163,164,169,173,174,179,180,181,182,183,184,],[28,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,28,28,-60,-61,-36,-64,-89,-91,28,-75,28,28,28,-74,28,-88,-62,-33,-34,-35,-68,-90,-21,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,124,125,126,127,129,132,134,137,139,142,149,150,163,164,169,173,174,179,180,181,182,183,184,],[29,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,29,29,-60,-61,-36,-64,-89,-91,29,-75,29,29,29,-74,29,-88,-62,-33,-34,-35,-68,-90,-21,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,124,125,126,127,129,132,134,137,139,142,149,150,163,164,169,173,174,179,180,181,182,183,184,],[30,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,30,30,-60,-61,-36,-64,-89,-91,30,-75,30,30,30,-74,30,-88,-62,-33,-34,-35,-68,-90,-21,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,124,125,126,127,129,132,134,137,139,142,149,150,163,164,169,173,174,179,180,181,182,183,184,],[31,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,31,31,-60,-61,-36,-64,-89,-91,31,-75,31,31,31,-74,31,-88,-62,-33,-34,-35,-68,-90,-21,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,124,125,126,127,129,132,134,137,139,142,149,150,163,164,169,173,174,179,180,181,182,183,184,],[32,32,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,32,32,-60,-61,-36,-64,-89,-91,32,-75,32,32,32,-74,32,-88,-62,-33,-34,-35,-68,-90,-21,]),'MAPOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[33,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,33,33,-86,-87,33,-54,-55,-56,-57,-58,-2,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-32,33,33,-52,33,33,33,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,33,-53,33,-70,-92,-19,-20,33,-73,-69,33,33,-60,-61,-36,33,33,-64,33,-89,-91,33,-75,33,33,33,33,-74,33,33,-88,-62,-33,-34,-35,-68,-90,-21,33,33,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,59,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,91,92,93,94,96,97,98,101,103,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,147,148,149,150,153,154,163,164,169,170,173,174,179,180,181,182,183,184,185,186,188,189,],[34,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,46,34,34,-86,-87,34,-54,-55,-56,-57,-58,-2,34,34,34,34,34,34,34,34,34,34,34,34,46,34,34,34,34,46,34,34,-52,34,34,34,-40,-41,-42,-43,46,46,46,46,46,46,46,46,34,-53,46,34,-70,46,46,46,46,46,46,-92,46,46,34,-73,-69,34,34,-60,-61,-36,34,34,-64,34,-89,-91,34,-75,46,34,34,34,46,46,34,-74,34,34,-88,-62,-33,-34,-35,-68,-90,-21,34,34,46,46,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,146,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[23,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,23,61,62,64,65,23,-86,-87,67,68,23,-54,-55,-56,-57,-58,70,71,72,-2,23,23,23,23,23,23,23,23,23,23,23,23,87,23,23,23,23,-32,23,23,-52,23,23,23,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,23,-53,23,-70,-92,-19,-20,23,-73,-69,23,23,-60,-61,-36,23,23,-64,23,-89,-91,23,-75,168,23,23,23,23,-74,23,23,-88,-62,-33,-34,-35,-68,-90,-21,23,23,]),'NUMBER_INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[35,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,35,35,-86,-87,35,-54,-55,-56,-57,-58,-2,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-32,35,35,-52,35,35,35,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,35,-53,35,-70,-92,-19,-20,35,-73,-69,35,35,-60,-61,-36,35,35,-64,35,-89,-91,35,-75,35,35,35,35,-74,35,35,-88,-62,-33,-34,-35,-68,-90,-21,35,35,]),'NUMBER_DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[36,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,36,36,-86,-87,36,-54,-55,-56,-57,-58,-2,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-32,36,36,-52,36,36,36,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,36,-53,36,-70,-92,-19,-20,36,-73,-69,36,36,-60,-61,-36,36,36,-64,36,-89,-91,36,-75,36,36,36,36,-74,36,36,-88,-62,-33,-34,-35,-68,-90,-21,36,36,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[37,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,37,37,-86,-87,37,-54,-55,-56,-57,-58,-2,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-32,37,37,-52,37,37,37,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,37,-53,37,-70,-92,-19,-20,37,-73,-69,37,37,-60,-61,-36,37,37,-64,37,-89,-91,37,-75,37,37,37,37,-74,37,37,-88,-62,-33,-34,-35,-68,-90,-21,37,37,]),'BOOLEAN_TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[38,38,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,38,38,-86,-87,38,-54,-55,-56,-57,-58,-2,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-32,38,38,-52,38,38,38,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,38,-53,38,-70,-92,-19,-20,38,-73,-69,38,38,-60,-61,-36,38,38,-64,38,-89,-91,38,-75,38,38,38,38,-74,38,38,-88,-62,-33,-34,-35,-68,-90,-21,38,38,]),'BOOLEAN_FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[39,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,39,39,-86,-87,39,-54,-55,-56,-57,-58,-2,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-32,39,39,-52,39,39,39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,39,-53,39,-70,-92,-19,-20,39,-73,-69,39,39,-60,-61,-36,39,39,-64,39,-89,-91,39,-75,39,39,39,39,-74,39,39,-88,-62,-33,-34,-35,-68,-90,-21,39,39,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,105,106,107,117,118,119,120,122,123,124,125,126,127,129,130,131,132,133,134,135,137,138,139,141,142,148,149,150,161,163,164,166,167,168,169,170,173,174,179,180,181,182,183,184,185,186,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,44,-59,-63,57,58,19,60,19,-86,-87,19,-54,-55,-56,-57,-58,-2,19,19,19,19,19,19,19,19,19,19,19,19,90,19,19,19,19,-32,19,19,-52,19,19,19,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,19,108,-53,19,-70,-92,-19,-20,144,145,146,19,-73,-69,19,19,-60,-61,-36,19,19,-64,19,-89,155,-91,155,19,108,-75,19,19,19,155,19,-74,155,155,108,19,19,-88,-62,-33,-34,-35,-68,-90,-21,19,19,]),'LISTOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[40,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,40,40,-86,-87,40,-54,-55,-56,-57,-58,-2,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-32,40,40,-52,40,40,40,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,40,-53,40,-70,-92,-19,-20,40,-73,-69,40,40,-60,-61,-36,40,40,-64,40,-89,-91,40,-75,40,40,40,40,-74,40,40,-88,-62,-33,-34,-35,-68,-90,-21,40,40,]),'ARRAYOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[41,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,41,41,-86,-87,41,-54,-55,-56,-57,-58,-2,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-32,41,41,-52,41,41,41,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,41,-53,41,-70,-92,-19,-20,41,-73,-69,41,41,-60,-61,-36,41,41,-64,41,-89,-91,41,-75,41,41,41,41,-74,41,41,-88,-62,-33,-34,-35,-68,-90,-21,41,41,]),'READLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,29,30,31,34,35,36,37,38,39,43,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,92,93,105,106,107,120,122,123,124,125,126,127,129,130,131,132,133,134,137,139,142,148,149,150,163,164,169,170,173,174,179,180,181,182,183,184,185,186,],[42,42,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,42,42,-86,-87,42,-54,-55,-56,-57,-58,-2,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-32,42,42,-52,42,42,42,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,42,-53,42,-70,-92,-19,-20,42,-73,-69,42,42,-60,-61,-36,42,42,-64,42,-89,-91,42,-75,42,42,42,42,-74,42,42,-88,-62,-33,-34,-35,-68,-90,-21,42,42,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,105,106,107,122,126,127,129,132,134,137,142,164,173,174,179,180,181,182,183,184,],[-4,0,-1,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-92,-19,-20,-73,-60,-61,-36,-64,-89,-91,-75,-74,-88,-62,-33,-34,-35,-68,-90,-21,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,89,92,93,105,106,107,113,114,115,116,122,123,124,125,126,127,129,132,134,137,139,142,143,149,150,155,157,158,159,160,163,164,170,173,174,175,176,179,180,181,182,183,184,188,189,190,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,-78,122,-70,-92,-19,-20,142,-77,-79,-80,-73,-69,-4,-4,-60,-61,-36,-64,-89,-91,-4,-75,-76,-71,-72,-31,-27,-28,-29,-30,174,-74,182,-88,-62,-81,-82,-33,-34,-35,-68,-90,-21,-83,-84,-85,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,30,31,35,36,37,38,39,43,63,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,92,93,105,106,107,122,123,124,125,126,127,129,132,134,137,142,148,149,150,151,164,170,173,174,179,180,181,182,183,184,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-59,-63,-86,-87,-54,-55,-56,-57,-58,-2,95,-32,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,95,-70,-92,-19,-20,-73,-69,-4,-4,-60,-61,-36,-64,-89,-91,-75,95,-71,-72,171,-74,95,-88,-62,-33,-34,-35,-68,-90,-21,]),'PLUS':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,45,-54,-55,-56,-57,-58,45,45,-52,-40,-41,-42,-43,45,45,45,45,45,45,45,45,-53,45,45,45,45,45,45,45,-92,45,45,-36,-64,-89,45,45,45,45,45,]),'MULTIPLY':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,47,-54,-55,-56,-57,-58,47,47,-52,47,47,-42,-43,47,47,47,47,47,47,47,47,-53,47,47,47,47,47,47,47,-92,47,47,-36,-64,-89,47,47,47,47,47,]),'DIVIDE':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,48,-54,-55,-56,-57,-58,48,48,-52,48,48,-42,-43,48,48,48,48,48,48,48,48,-53,48,48,48,48,48,48,48,-92,48,48,-36,-64,-89,48,48,48,48,48,]),'LESS':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,49,-54,-55,-56,-57,-58,49,49,-52,-40,-41,-42,-43,-44,-45,-46,-47,49,49,49,49,-53,49,49,49,49,49,49,49,-92,49,49,-36,-64,-89,49,49,49,49,49,]),'GREATER':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,50,-54,-55,-56,-57,-58,50,50,-52,-40,-41,-42,-43,-44,-45,-46,-47,50,50,50,50,-53,50,50,50,50,50,50,50,-92,50,50,-36,-64,-89,50,50,50,50,50,]),'LESS_EQUAL':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,51,-54,-55,-56,-57,-58,51,51,-52,-40,-41,-42,-43,-44,-45,-46,-47,51,51,51,51,-53,51,51,51,51,51,51,51,-92,51,51,-36,-64,-89,51,51,51,51,51,]),'GREATER_EQUAL':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,52,-54,-55,-56,-57,-58,52,52,-52,-40,-41,-42,-43,-44,-45,-46,-47,52,52,52,52,-53,52,52,52,52,52,52,52,-92,52,52,-36,-64,-89,52,52,52,52,52,]),'EQUALS':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,53,-54,-55,-56,-57,-58,53,53,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,53,53,-53,53,53,53,53,53,53,53,-92,53,53,-36,-64,-89,53,53,53,53,53,]),'NOT_EQUALS':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,54,-54,-55,-56,-57,-58,54,54,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,54,54,-53,54,54,54,54,54,54,54,-92,54,54,-36,-64,-89,54,54,54,54,54,]),'AND':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,55,-54,-55,-56,-57,-58,55,55,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,55,-53,55,55,55,55,55,55,55,-92,55,55,-36,-64,-89,55,55,55,55,55,]),'OR':([19,20,35,36,37,38,39,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,88,91,94,96,97,98,101,103,105,106,107,129,132,134,147,153,154,188,189,],[-59,56,-54,-55,-56,-57,-58,56,56,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,56,56,56,56,56,56,56,-92,56,56,-36,-64,-89,56,56,56,56,56,]),'RPAREN':([19,35,36,37,38,39,59,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,87,88,91,96,97,98,99,100,102,103,104,105,109,111,112,129,132,134,147,152,153,154,155,156,157,158,159,160,165,168,177,178,],[-59,-54,-55,-56,-57,-58,88,-52,-67,-67,105,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,110,-53,121,126,127,128,129,-38,132,-66,134,-92,136,140,-25,-36,-64,-89,169,-37,-39,-65,-31,-26,-27,-28,-29,-30,-24,-23,187,-22,]),'ARROW':([19,35,36,37,38,39,69,74,75,76,77,78,79,80,81,82,83,84,85,88,94,95,105,129,132,134,],[-59,-54,-55,-56,-57,-58,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,124,125,-92,-36,-64,-89,]),'TO':([19,35,36,37,38,39,69,74,75,76,77,78,79,80,81,82,83,84,85,88,101,105,129,132,134,],[-59,-54,-55,-56,-57,-58,-52,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,131,-92,-36,-64,-89,]),'COMMA':([19,35,36,37,38,39,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,99,100,102,103,104,105,111,112,129,132,134,152,153,154,155,156,157,158,159,160,165,178,],[-59,-54,-55,-56,-57,-58,-52,-67,-67,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-53,130,-38,133,-66,133,-92,141,-25,-36,-64,-89,-37,-39,-65,-31,-26,-27,-28,-29,-30,-24,141,]),'LBRACE':([26,60,110,121,128,140,155,157,158,159,160,162,169,171,172,187,],[63,89,139,148,139,139,-31,-27,-28,-29,-30,139,139,139,139,139,]),'ASSIGN':([44,57,155,157,158,159,160,175,176,],[73,86,-31,-27,-28,-29,-30,185,186,]),'IN':([90,],[120,]),'COLON':([108,110,136,144,145,],[135,138,161,166,167,]),'TYPE_INT':([135,138,161,166,167,],[157,157,157,157,157,]),'TYPE_DOUBLE':([135,138,161,166,167,],[158,158,158,158,158,]),'TYPE_BOOLEAN':([135,138,161,166,167,],[159,159,159,159,159,]),'TYPE_STRING':([135,138,161,166,167,],[160,160,160,160,160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,124,125,139,],[2,149,150,163,]),'statement':([0,2,124,125,139,149,150,163,169,],[3,43,3,3,3,43,43,43,181,]),'declaration':([0,2,124,125,139,149,150,163,169,],[4,4,4,4,4,4,4,4,4,]),'function_def':([0,2,124,125,139,149,150,163,169,],[5,5,5,5,5,5,5,5,5,]),'function_def_params_no_return':([0,2,124,125,139,149,150,163,169,],[6,6,6,6,6,6,6,6,6,]),'function_def_no_params_no_return':([0,2,124,125,139,149,150,163,169,],[7,7,7,7,7,7,7,7,7,]),'function_def_no_params_with_return':([0,2,124,125,139,149,150,163,169,],[8,8,8,8,8,8,8,8,8,]),'class_def':([0,2,124,125,139,149,150,163,169,],[9,9,9,9,9,9,9,9,9,]),'for_loop':([0,2,124,125,139,149,150,163,169,],[10,10,10,10,10,10,10,10,10,]),'when_stmt':([0,2,124,125,139,149,150,163,169,],[11,11,11,11,11,11,11,11,11,]),'print_stmt':([0,2,124,125,139,149,150,163,169,],[12,12,12,12,12,12,12,12,12,]),'return_stmt':([0,2,124,125,139,149,150,163,169,],[13,13,13,13,13,13,13,13,13,]),'break_stmt':([0,2,124,125,139,149,150,163,169,],[14,14,14,14,14,14,14,14,14,]),'continue_stmt':([0,2,124,125,139,149,150,163,169,],[15,15,15,15,15,15,15,15,15,]),'if_else':([0,2,124,125,139,149,150,163,169,],[16,16,16,16,16,16,16,16,16,]),'expression_stmt':([0,2,124,125,139,149,150,163,169,],[17,17,17,17,17,17,17,17,17,]),'expression':([0,2,23,29,34,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,67,68,70,71,73,86,92,120,124,125,130,131,133,139,148,149,150,163,169,170,185,186,],[20,20,59,66,69,74,75,76,77,78,79,80,81,82,83,84,85,91,94,96,97,98,101,103,103,106,107,94,147,20,20,101,153,154,20,94,20,20,20,20,94,188,189,]),'when_branches':([63,148,],[92,170,]),'when_branch':([63,92,148,170,],[93,123,93,123,]),'map_entries':([68,],[99,]),'map_entry':([68,130,],[100,152,]),'expression_list':([70,71,],[102,104,]),'param_list_opt':([87,168,],[109,177,]),'param_list':([87,168,],[111,178,]),'param':([87,141,168,],[112,165,112,]),'class_body':([89,],[113,]),'class_member':([89,113,],[114,143,]),'property_def':([89,113,],[115,115,]),'method_def':([89,113,],[116,116,]),'block':([110,128,140,162,169,171,172,187,],[137,151,164,173,180,183,184,190,]),'type':([135,138,161,166,167,],[156,162,172,175,176,]),'loop_body':([169,],[179,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','kotlin_parser.py',68),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multiple','kotlin_parser.py',72),
  ('statement_list -> statement','statement_list',1,'p_statement_list_single','kotlin_parser.py',77),
  ('statement_list -> <empty>','statement_list',0,'p_statement_list_empty','kotlin_parser.py',81),
  ('statement -> declaration','statement',1,'p_statement','kotlin_parser.py',85),
  ('statement -> function_def','statement',1,'p_statement','kotlin_parser.py',86),
  ('statement -> function_def_params_no_return','statement',1,'p_statement','kotlin_parser.py',87),
  ('statement -> function_def_no_params_no_return','statement',1,'p_statement','kotlin_parser.py',88),
  ('statement -> function_def_no_params_with_return','statement',1,'p_statement','kotlin_parser.py',89),
  ('statement -> class_def','statement',1,'p_statement','kotlin_parser.py',90),
  ('statement -> for_loop','statement',1,'p_statement','kotlin_parser.py',91),
  ('statement -> when_stmt','statement',1,'p_statement','kotlin_parser.py',92),
  ('statement -> print_stmt','statement',1,'p_statement','kotlin_parser.py',93),
  ('statement -> return_stmt','statement',1,'p_statement','kotlin_parser.py',94),
  ('statement -> break_stmt','statement',1,'p_statement','kotlin_parser.py',95),
  ('statement -> continue_stmt','statement',1,'p_statement','kotlin_parser.py',96),
  ('statement -> if_else','statement',1,'p_statement','kotlin_parser.py',97),
  ('statement -> expression_stmt','statement',1,'p_statement','kotlin_parser.py',98),
  ('declaration -> VAR ID ASSIGN expression','declaration',4,'p_declaration','kotlin_parser.py',111),
  ('declaration -> VAL ID ASSIGN expression','declaration',4,'p_declaration','kotlin_parser.py',112),
  ('function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block','function_def',8,'p_function_def','kotlin_parser.py',120),
  ('param_list_opt -> param_list','param_list_opt',1,'p_param_list_opt','kotlin_parser.py',131),
  ('param_list_opt -> <empty>','param_list_opt',0,'p_param_list_opt','kotlin_parser.py',132),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','kotlin_parser.py',136),
  ('param_list -> param','param_list',1,'p_param_list','kotlin_parser.py',137),
  ('param -> ID COLON type','param',3,'p_param','kotlin_parser.py',141),
  ('type -> TYPE_INT','type',1,'p_type','kotlin_parser.py',145),
  ('type -> TYPE_DOUBLE','type',1,'p_type','kotlin_parser.py',146),
  ('type -> TYPE_BOOLEAN','type',1,'p_type','kotlin_parser.py',147),
  ('type -> TYPE_STRING','type',1,'p_type','kotlin_parser.py',148),
  ('type -> ID','type',1,'p_type','kotlin_parser.py',149),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','kotlin_parser.py',154),
  ('for_loop -> FOR LPAREN ID IN expression RPAREN loop_body','for_loop',7,'p_for_loop','kotlin_parser.py',159),
  ('loop_body -> block','loop_body',1,'p_loop_body','kotlin_parser.py',163),
  ('loop_body -> statement','loop_body',1,'p_loop_body','kotlin_parser.py',164),
  ('expression -> MAPOF LPAREN map_entries RPAREN','expression',4,'p_expression_map','kotlin_parser.py',169),
  ('map_entries -> map_entries COMMA map_entry','map_entries',3,'p_map_entries_multiple','kotlin_parser.py',173),
  ('map_entries -> map_entry','map_entries',1,'p_map_entries_single','kotlin_parser.py',177),
  ('map_entry -> expression TO expression','map_entry',3,'p_map_entry','kotlin_parser.py',181),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary','kotlin_parser.py',187),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary','kotlin_parser.py',188),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary','kotlin_parser.py',189),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','kotlin_parser.py',190),
  ('expression -> expression LESS expression','expression',3,'p_expression_binary','kotlin_parser.py',191),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binary','kotlin_parser.py',192),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binary','kotlin_parser.py',193),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binary','kotlin_parser.py',194),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary','kotlin_parser.py',195),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary','kotlin_parser.py',196),
  ('expression -> expression AND expression','expression',3,'p_expression_binary','kotlin_parser.py',197),
  ('expression -> expression OR expression','expression',3,'p_expression_binary','kotlin_parser.py',198),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','kotlin_parser.py',206),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','kotlin_parser.py',210),
  ('expression -> NUMBER_INT','expression',1,'p_expression_literal','kotlin_parser.py',214),
  ('expression -> NUMBER_DOUBLE','expression',1,'p_expression_literal','kotlin_parser.py',215),
  ('expression -> STRING','expression',1,'p_expression_literal','kotlin_parser.py',216),
  ('expression -> BOOLEAN_TRUE','expression',1,'p_expression_literal','kotlin_parser.py',217),
  ('expression -> BOOLEAN_FALSE','expression',1,'p_expression_literal','kotlin_parser.py',218),
  ('expression -> ID','expression',1,'p_expression_id','kotlin_parser.py',222),
  ('print_stmt -> PRINTLN LPAREN expression RPAREN','print_stmt',4,'p_print_stmt','kotlin_parser.py',230),
  ('print_stmt -> PRINT LPAREN expression RPAREN','print_stmt',4,'p_print_stmt_print','kotlin_parser.py',234),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','kotlin_parser.py',239),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','kotlin_parser.py',244),
  ('expression -> LISTOF LPAREN expression_list RPAREN','expression',4,'p_expression_listOf','kotlin_parser.py',257),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list_multiple','kotlin_parser.py',262),
  ('expression_list -> expression','expression_list',1,'p_expression_list_single','kotlin_parser.py',267),
  ('expression_list -> <empty>','expression_list',0,'p_expression_list_empty','kotlin_parser.py',271),
  ('when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE','when_stmt',7,'p_when_stmt','kotlin_parser.py',277),
  ('when_branches -> when_branches when_branch','when_branches',2,'p_when_branches_multiple','kotlin_parser.py',281),
  ('when_branches -> when_branch','when_branches',1,'p_when_branches_single','kotlin_parser.py',286),
  ('when_branch -> expression ARROW statement_list','when_branch',3,'p_when_branch_expression','kotlin_parser.py',290),
  ('when_branch -> ELSE ARROW statement_list','when_branch',3,'p_when_branch_else','kotlin_parser.py',294),
  ('when_stmt -> WHEN LBRACE when_branches RBRACE','when_stmt',4,'p_when_stmt_without_expr','kotlin_parser.py',299),
  ('function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block','function_def_params_no_return',6,'p_function_def_params_no_return','kotlin_parser.py',304),
  ('class_def -> CLASS ID LBRACE class_body RBRACE','class_def',5,'p_class_def','kotlin_parser.py',313),
  ('class_body -> class_body class_member','class_body',2,'p_class_body_multiple','kotlin_parser.py',317),
  ('class_body -> class_member','class_body',1,'p_class_body_single','kotlin_parser.py',322),
  ('class_body -> <empty>','class_body',0,'p_class_body_empty','kotlin_parser.py',326),
  ('class_member -> property_def','class_member',1,'p_class_member','kotlin_parser.py',330),
  ('class_member -> method_def','class_member',1,'p_class_member','kotlin_parser.py',331),
  ('property_def -> VAR ID COLON type','property_def',4,'p_property_def','kotlin_parser.py',335),
  ('property_def -> VAL ID COLON type','property_def',4,'p_property_def','kotlin_parser.py',336),
  ('property_def -> VAR ID COLON type ASSIGN expression','property_def',6,'p_property_def','kotlin_parser.py',337),
  ('property_def -> VAL ID COLON type ASSIGN expression','property_def',6,'p_property_def','kotlin_parser.py',338),
  ('method_def -> FUN ID LPAREN param_list_opt RPAREN block','method_def',6,'p_method_def','kotlin_parser.py',348),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','kotlin_parser.py',455),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','kotlin_parser.py',460),
  ('function_def_no_params_with_return -> FUN ID LPAREN RPAREN COLON type block','function_def_no_params_with_return',7,'p_function_def_no_params_with_return','kotlin_parser.py',465),
  ('expression -> ARRAYOF LPAREN expression_list RPAREN','expression',4,'p_expression_arrayof','kotlin_parser.py',566),
  ('if_else -> IF LPAREN expression RPAREN block ELSE block','if_else',7,'p_if_else','kotlin_parser.py',570),
  ('function_def_no_params_no_return -> FUN ID LPAREN RPAREN block','function_def_no_params_no_return',5,'p_function_def_no_params_no_return','kotlin_parser.py',577),
  ('expression -> READLINE LPAREN RPAREN','expression',3,'p_expression_readline','kotlin_parser.py',584),
]
