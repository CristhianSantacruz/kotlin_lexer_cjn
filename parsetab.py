
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUALSNOT_EQUALSleftLESSGREATERLESS_EQUALGREATER_EQUALleftPLUSMINUSleftMULTIPLYDIVIDErightUMINUSABSTRACT AND ARRAYOF ARROW ASSIGN BOOLEAN_FALSE BOOLEAN_TRUE BREAK CATCH CLASS COLON COMMA COMPANION CONSTRUCTOR CONTAINS CONTINUE CROSSINLINE DATA DIVIDE DOT ELSE ELVIS ENUM EQUALS EXTENDS FILTER FINAL FINALLY FOR FUN GREATER GREATER_EQUAL ID IF IMPLEMENTS IN INDICES INIT INLINE INNER INTERFACE INTERNAL LATEINIT LBRACE LBRACKET LESS LESS_EQUAL LISTOF LPAREN MAPOF MINUS MODULO MULTIPLY NOINLINE NOT_EQUALS NUMBER_DOUBLE NUMBER_INT OBJECT OPEN OR OUT OVERRIDE PLUS PRINT PRINTLN PRIVATE PROTECTED PUBLIC QUESTION RANGE RBRACE RBRACKET READLINE REIFIED RETURN RPAREN SEALED SEMICOLON STRING SUM SUPER THIS TO TRY TYPE_BOOLEAN TYPE_DOUBLE TYPE_INT TYPE_STRING VAL VAR WHEN WHILEprogram : statement_liststatement_list : statement_list statementstatement_list : statementstatement_list : statement : declaration\n| function_def\n| function_def_params_no_return\n| function_def_no_params_no_return\n| class_def\n| for_loop\n| when_stmt\n| print_stmt\n| return_stmt\n| break_stmt\n| continue_stmt\n| if_else\n| expression_stmtdeclaration : VAR ID ASSIGN expression\n| VAL ID ASSIGN expressionfunction_def : FUN ID LPAREN param_list_opt RPAREN COLON type blockparam_list_opt : param_list\n| param_list : param_list COMMA param\n| paramparam : ID COLON typetype : TYPE_INT\n| TYPE_DOUBLE\n| TYPE_BOOLEAN\n| TYPE_STRING\n| IDreturn_stmt : RETURN expressionfor_loop : FOR LPAREN ID IN expression RPAREN loop_bodyloop_body : block\n| statementexpression : MAPOF LPAREN map_entries RPARENmap_entries : map_entries COMMA map_entrymap_entries : map_entrymap_entry : expression TO expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression MULTIPLY expression\n| expression DIVIDE expression\n| expression LESS expression\n| expression GREATER expression\n| expression LESS_EQUAL expression\n| expression GREATER_EQUAL expression\n| expression EQUALS expression\n| expression NOT_EQUALS expression\n| expression AND expression\n| expression OR expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBER_INT\n| NUMBER_DOUBLE\n| STRING\n| BOOLEAN_TRUE\n| BOOLEAN_FALSEexpression : IDprint_stmt : PRINTLN LPAREN expression RPARENprint_stmt : PRINT LPAREN expression RPARENblock : LBRACE statement_list RBRACEexpression_stmt : expressionexpression : LISTOF LPAREN expression_list RPARENexpression_list : expression_list COMMA expressionexpression_list : expressionexpression_list : when_stmt : WHEN LPAREN expression RPAREN LBRACE when_branches RBRACEwhen_branches : when_branches when_branchwhen_branches : when_branchwhen_branch : expression ARROW statement_listwhen_branch : ELSE ARROW statement_listwhen_stmt : WHEN LBRACE when_branches RBRACEfunction_def_params_no_return : FUN ID LPAREN param_list RPAREN blockclass_def : CLASS ID LBRACE class_body RBRACEclass_body : class_body class_memberclass_body : class_memberclass_body : class_member : property_def\n| method_defproperty_def : VAR ID COLON type\n| VAL ID COLON type\n| VAR ID COLON type ASSIGN expression\n| VAL ID COLON type ASSIGN expressionmethod_def : FUN ID LPAREN param_list_opt RPAREN blockbreak_stmt : BREAKcontinue_stmt : CONTINUEexpression : ARRAYOF LPAREN expression_list RPARENif_else : IF LPAREN expression RPAREN block ELSE blockfunction_def_no_params_no_return : FUN ID LPAREN RPAREN blockexpression : READLINE LPAREN RPAREN'
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,88,104,105,106,112,113,114,115,121,123,124,125,126,128,131,133,136,137,140,141,147,148,153,155,156,157,158,160,161,166,170,171,172,175,176,177,178,179,180,184,185,186,],[17,17,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,116,-90,-18,-19,116,-76,-78,-79,-72,17,17,-59,-60,-35,-63,-87,-89,17,-74,-75,17,17,-30,-26,-27,-28,-29,17,-73,17,-61,-80,-81,-32,-33,-34,-67,-88,-20,-82,-83,-84,]),'VAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,88,104,105,106,112,113,114,115,121,123,124,125,126,128,131,133,136,137,140,141,147,148,153,155,156,157,158,160,161,166,170,171,172,175,176,177,178,179,180,184,185,186,],[20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,117,-90,-18,-19,117,-76,-78,-79,-72,20,20,-59,-60,-35,-63,-87,-89,20,-74,-75,20,20,-30,-26,-27,-28,-29,20,-73,20,-61,-80,-81,-32,-33,-34,-67,-88,-20,-82,-83,-84,]),'FUN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,88,104,105,106,112,113,114,115,121,123,124,125,126,128,131,133,136,137,140,141,147,148,153,155,156,157,158,160,161,166,170,171,172,175,176,177,178,179,180,184,185,186,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,118,-90,-18,-19,118,-76,-78,-79,-72,21,21,-59,-60,-35,-63,-87,-89,21,-74,-75,21,21,-30,-26,-27,-28,-29,21,-73,21,-61,-80,-81,-32,-33,-34,-67,-88,-20,-82,-83,-84,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,123,124,125,126,128,131,133,136,137,140,147,148,160,161,166,170,175,176,177,178,179,180,],[23,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,23,23,-59,-60,-35,-63,-87,-89,23,-74,23,23,23,-73,23,-61,-32,-33,-34,-67,-88,-20,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,123,124,125,126,128,131,133,136,137,140,147,148,160,161,166,170,175,176,177,178,179,180,],[24,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,24,24,-59,-60,-35,-63,-87,-89,24,-74,24,24,24,-73,24,-61,-32,-33,-34,-67,-88,-20,]),'WHEN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,123,124,125,126,128,131,133,136,137,140,147,148,160,161,166,170,175,176,177,178,179,180,],[25,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,25,25,-59,-60,-35,-63,-87,-89,25,-74,25,25,25,-73,25,-61,-32,-33,-34,-67,-88,-20,]),'PRINTLN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,123,124,125,126,128,131,133,136,137,140,147,148,160,161,166,170,175,176,177,178,179,180,],[26,26,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,26,26,-59,-60,-35,-63,-87,-89,26,-74,26,26,26,-73,26,-61,-32,-33,-34,-67,-88,-20,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,123,124,125,126,128,131,133,136,137,140,147,148,160,161,166,170,175,176,177,178,179,180,],[27,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,27,27,-59,-60,-35,-63,-87,-89,27,-74,27,27,27,-73,27,-61,-32,-33,-34,-67,-88,-20,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,123,124,125,126,128,131,133,136,137,140,147,148,160,161,166,170,175,176,177,178,179,180,],[28,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,28,28,-59,-60,-35,-63,-87,-89,28,-74,28,28,28,-73,28,-61,-32,-33,-34,-67,-88,-20,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,123,124,125,126,128,131,133,136,137,140,147,148,160,161,166,170,175,176,177,178,179,180,],[29,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,29,29,-59,-60,-35,-63,-87,-89,29,-74,29,29,29,-73,29,-61,-32,-33,-34,-67,-88,-20,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,123,124,125,126,128,131,133,136,137,140,147,148,160,161,166,170,175,176,177,178,179,180,],[30,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,30,30,-59,-60,-35,-63,-87,-89,30,-74,30,30,30,-73,30,-61,-32,-33,-34,-67,-88,-20,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,123,124,125,126,128,131,133,136,137,140,147,148,160,161,166,170,175,176,177,178,179,180,],[31,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,31,31,-59,-60,-35,-63,-87,-89,31,-74,31,31,31,-73,31,-61,-32,-33,-34,-67,-88,-20,]),'MAPOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[32,32,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,32,32,-85,-86,32,-53,-54,-55,-56,-57,-2,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-31,32,32,-51,32,32,32,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,32,-52,32,-69,-90,-18,-19,32,-72,-68,32,32,-59,-60,-35,32,32,-63,32,-87,-89,32,-74,32,32,32,32,-73,32,32,-61,-32,-33,-34,-67,-88,-20,32,32,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,58,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,90,91,92,93,95,96,97,100,102,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,145,146,147,148,151,152,160,161,166,167,170,175,176,177,178,179,180,181,182,184,185,],[33,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,45,33,33,-85,-86,33,-53,-54,-55,-56,-57,-2,33,33,33,33,33,33,33,33,33,33,33,33,45,33,33,33,33,45,33,33,-51,33,33,33,-39,-40,-41,-42,45,45,45,45,45,45,45,45,33,-52,45,33,-69,45,45,45,45,45,45,-90,45,45,33,-72,-68,33,33,-59,-60,-35,33,33,-63,33,-87,-89,33,-74,45,33,33,33,45,45,33,-73,33,33,-61,-32,-33,-34,-67,-88,-20,33,33,45,45,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,57,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,144,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,22,60,61,63,64,22,-85,-86,66,67,22,-53,-54,-55,-56,-57,69,70,71,-2,22,22,22,22,22,22,22,22,22,22,22,22,86,22,22,22,22,-31,22,22,-51,22,22,22,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,22,-52,22,-69,-90,-18,-19,22,-72,-68,22,22,-59,-60,-35,22,22,-63,22,-87,-89,22,-74,165,22,22,22,22,-73,22,22,-61,-32,-33,-34,-67,-88,-20,22,22,]),'NUMBER_INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[34,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,34,34,-85,-86,34,-53,-54,-55,-56,-57,-2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-31,34,34,-51,34,34,34,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,34,-52,34,-69,-90,-18,-19,34,-72,-68,34,34,-59,-60,-35,34,34,-63,34,-87,-89,34,-74,34,34,34,34,-73,34,34,-61,-32,-33,-34,-67,-88,-20,34,34,]),'NUMBER_DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[35,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,35,35,-85,-86,35,-53,-54,-55,-56,-57,-2,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-31,35,35,-51,35,35,35,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,35,-52,35,-69,-90,-18,-19,35,-72,-68,35,35,-59,-60,-35,35,35,-63,35,-87,-89,35,-74,35,35,35,35,-73,35,35,-61,-32,-33,-34,-67,-88,-20,35,35,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[36,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,36,36,-85,-86,36,-53,-54,-55,-56,-57,-2,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-31,36,36,-51,36,36,36,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,36,-52,36,-69,-90,-18,-19,36,-72,-68,36,36,-59,-60,-35,36,36,-63,36,-87,-89,36,-74,36,36,36,36,-73,36,36,-61,-32,-33,-34,-67,-88,-20,36,36,]),'BOOLEAN_TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[37,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,37,37,-85,-86,37,-53,-54,-55,-56,-57,-2,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-31,37,37,-51,37,37,37,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,37,-52,37,-69,-90,-18,-19,37,-72,-68,37,37,-59,-60,-35,37,37,-63,37,-87,-89,37,-74,37,37,37,37,-73,37,37,-61,-32,-33,-34,-67,-88,-20,37,37,]),'BOOLEAN_FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[38,38,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,38,38,-85,-86,38,-53,-54,-55,-56,-57,-2,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-31,38,38,-51,38,38,38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,38,-52,38,-69,-90,-18,-19,38,-72,-68,38,38,-59,-60,-35,38,38,-63,38,-87,-89,38,-74,38,38,38,38,-73,38,38,-61,-32,-33,-34,-67,-88,-20,38,38,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,104,105,106,116,117,118,119,121,122,123,124,125,126,128,129,130,131,132,133,134,136,137,139,140,146,147,148,159,160,161,163,164,165,166,167,170,175,176,177,178,179,180,181,182,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,43,-58,-62,56,57,18,59,18,-85,-86,18,-53,-54,-55,-56,-57,-2,18,18,18,18,18,18,18,18,18,18,18,18,89,18,18,18,18,-31,18,18,-51,18,18,18,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,18,107,-52,18,-69,-90,-18,-19,142,143,144,18,-72,-68,18,18,-59,-60,-35,18,18,-63,18,-87,153,-89,18,107,-74,18,18,18,153,18,-73,153,153,107,18,18,-61,-32,-33,-34,-67,-88,-20,18,18,]),'LISTOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[39,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,39,39,-85,-86,39,-53,-54,-55,-56,-57,-2,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-31,39,39,-51,39,39,39,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,39,-52,39,-69,-90,-18,-19,39,-72,-68,39,39,-59,-60,-35,39,39,-63,39,-87,-89,39,-74,39,39,39,39,-73,39,39,-61,-32,-33,-34,-67,-88,-20,39,39,]),'ARRAYOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[40,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,40,40,-85,-86,40,-53,-54,-55,-56,-57,-2,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-31,40,40,-51,40,40,40,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,40,-52,40,-69,-90,-18,-19,40,-72,-68,40,40,-59,-60,-35,40,40,-63,40,-87,-89,40,-74,40,40,40,40,-73,40,40,-61,-32,-33,-34,-67,-88,-20,40,40,]),'READLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,28,29,30,33,34,35,36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,104,105,106,119,121,122,123,124,125,126,128,129,130,131,132,133,136,137,140,146,147,148,160,161,166,167,170,175,176,177,178,179,180,181,182,],[41,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,41,41,-85,-86,41,-53,-54,-55,-56,-57,-2,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-31,41,41,-51,41,41,41,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,41,-52,41,-69,-90,-18,-19,41,-72,-68,41,41,-59,-60,-35,41,41,-63,41,-87,-89,41,-74,41,41,41,41,-73,41,41,-61,-32,-33,-34,-67,-88,-20,41,41,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,104,105,106,121,125,126,128,131,133,136,140,161,170,175,176,177,178,179,180,],[-4,0,-1,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-90,-18,-19,-72,-59,-60,-35,-63,-87,-89,-74,-73,-61,-32,-33,-34,-67,-88,-20,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,88,91,92,104,105,106,112,113,114,115,121,122,123,124,125,126,128,131,133,136,137,140,141,147,148,153,155,156,157,158,160,161,167,170,171,172,175,176,177,178,179,180,184,185,186,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,-77,121,-69,-90,-18,-19,140,-76,-78,-79,-72,-68,-4,-4,-59,-60,-35,-63,-87,-89,-4,-74,-75,-70,-71,-30,-26,-27,-28,-29,170,-73,178,-61,-80,-81,-32,-33,-34,-67,-88,-20,-82,-83,-84,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,29,30,34,35,36,37,38,42,62,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,91,92,104,105,106,121,122,123,124,125,126,128,131,133,136,140,146,147,148,149,161,167,170,175,176,177,178,179,180,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-58,-62,-85,-86,-53,-54,-55,-56,-57,-2,94,-31,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,94,-69,-90,-18,-19,-72,-68,-4,-4,-59,-60,-35,-63,-87,-89,-74,94,-70,-71,168,-73,94,-61,-32,-33,-34,-67,-88,-20,]),'PLUS':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,44,-53,-54,-55,-56,-57,44,44,-51,-39,-40,-41,-42,44,44,44,44,44,44,44,44,-52,44,44,44,44,44,44,44,-90,44,44,-35,-63,-87,44,44,44,44,44,]),'MULTIPLY':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,46,-53,-54,-55,-56,-57,46,46,-51,46,46,-41,-42,46,46,46,46,46,46,46,46,-52,46,46,46,46,46,46,46,-90,46,46,-35,-63,-87,46,46,46,46,46,]),'DIVIDE':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,47,-53,-54,-55,-56,-57,47,47,-51,47,47,-41,-42,47,47,47,47,47,47,47,47,-52,47,47,47,47,47,47,47,-90,47,47,-35,-63,-87,47,47,47,47,47,]),'LESS':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,48,-53,-54,-55,-56,-57,48,48,-51,-39,-40,-41,-42,-43,-44,-45,-46,48,48,48,48,-52,48,48,48,48,48,48,48,-90,48,48,-35,-63,-87,48,48,48,48,48,]),'GREATER':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,49,-53,-54,-55,-56,-57,49,49,-51,-39,-40,-41,-42,-43,-44,-45,-46,49,49,49,49,-52,49,49,49,49,49,49,49,-90,49,49,-35,-63,-87,49,49,49,49,49,]),'LESS_EQUAL':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,50,-53,-54,-55,-56,-57,50,50,-51,-39,-40,-41,-42,-43,-44,-45,-46,50,50,50,50,-52,50,50,50,50,50,50,50,-90,50,50,-35,-63,-87,50,50,50,50,50,]),'GREATER_EQUAL':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,51,-53,-54,-55,-56,-57,51,51,-51,-39,-40,-41,-42,-43,-44,-45,-46,51,51,51,51,-52,51,51,51,51,51,51,51,-90,51,51,-35,-63,-87,51,51,51,51,51,]),'EQUALS':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,52,-53,-54,-55,-56,-57,52,52,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,52,52,-52,52,52,52,52,52,52,52,-90,52,52,-35,-63,-87,52,52,52,52,52,]),'NOT_EQUALS':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,53,-53,-54,-55,-56,-57,53,53,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,53,53,-52,53,53,53,53,53,53,53,-90,53,53,-35,-63,-87,53,53,53,53,53,]),'AND':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,54,-53,-54,-55,-56,-57,54,54,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,54,-52,54,54,54,54,54,54,54,-90,54,54,-35,-63,-87,54,54,54,54,54,]),'OR':([18,19,34,35,36,37,38,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,87,90,93,95,96,97,100,102,104,105,106,128,131,133,145,151,152,184,185,],[-58,55,-53,-54,-55,-56,-57,55,55,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,55,55,55,55,55,55,55,-90,55,55,-35,-63,-87,55,55,55,55,55,]),'RPAREN':([18,34,35,36,37,38,58,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,90,95,96,97,98,99,101,102,103,104,108,110,111,128,131,133,145,150,151,152,153,154,155,156,157,158,162,165,173,174,],[-58,-53,-54,-55,-56,-57,87,-51,-66,-66,104,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,109,-52,120,125,126,127,128,-37,131,-65,133,-90,135,138,-24,-35,-63,-87,166,-36,-38,-64,-30,-25,-26,-27,-28,-29,-23,-22,183,-21,]),'ARROW':([18,34,35,36,37,38,68,73,74,75,76,77,78,79,80,81,82,83,84,87,93,94,104,128,131,133,],[-58,-53,-54,-55,-56,-57,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,123,124,-90,-35,-63,-87,]),'TO':([18,34,35,36,37,38,68,73,74,75,76,77,78,79,80,81,82,83,84,87,100,104,128,131,133,],[-58,-53,-54,-55,-56,-57,-51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,130,-90,-35,-63,-87,]),'COMMA':([18,34,35,36,37,38,68,69,70,73,74,75,76,77,78,79,80,81,82,83,84,87,98,99,101,102,103,104,110,111,128,131,133,150,151,152,153,154,155,156,157,158,162,174,],[-58,-53,-54,-55,-56,-57,-51,-66,-66,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-52,129,-37,132,-65,132,-90,139,-24,-35,-63,-87,-36,-38,-64,-30,-25,-26,-27,-28,-29,-23,139,]),'LBRACE':([25,59,109,120,127,138,153,155,156,157,158,166,168,169,183,],[62,88,137,146,137,137,-30,-26,-27,-28,-29,137,137,137,137,]),'ASSIGN':([43,56,153,155,156,157,158,171,172,],[72,85,-30,-26,-27,-28,-29,181,182,]),'IN':([89,],[119,]),'COLON':([107,135,142,143,],[134,159,163,164,]),'TYPE_INT':([134,159,163,164,],[155,155,155,155,]),'TYPE_DOUBLE':([134,159,163,164,],[156,156,156,156,]),'TYPE_BOOLEAN':([134,159,163,164,],[157,157,157,157,]),'TYPE_STRING':([134,159,163,164,],[158,158,158,158,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,123,124,137,],[2,147,148,160,]),'statement':([0,2,123,124,137,147,148,160,166,],[3,42,3,3,3,42,42,42,177,]),'declaration':([0,2,123,124,137,147,148,160,166,],[4,4,4,4,4,4,4,4,4,]),'function_def':([0,2,123,124,137,147,148,160,166,],[5,5,5,5,5,5,5,5,5,]),'function_def_params_no_return':([0,2,123,124,137,147,148,160,166,],[6,6,6,6,6,6,6,6,6,]),'function_def_no_params_no_return':([0,2,123,124,137,147,148,160,166,],[7,7,7,7,7,7,7,7,7,]),'class_def':([0,2,123,124,137,147,148,160,166,],[8,8,8,8,8,8,8,8,8,]),'for_loop':([0,2,123,124,137,147,148,160,166,],[9,9,9,9,9,9,9,9,9,]),'when_stmt':([0,2,123,124,137,147,148,160,166,],[10,10,10,10,10,10,10,10,10,]),'print_stmt':([0,2,123,124,137,147,148,160,166,],[11,11,11,11,11,11,11,11,11,]),'return_stmt':([0,2,123,124,137,147,148,160,166,],[12,12,12,12,12,12,12,12,12,]),'break_stmt':([0,2,123,124,137,147,148,160,166,],[13,13,13,13,13,13,13,13,13,]),'continue_stmt':([0,2,123,124,137,147,148,160,166,],[14,14,14,14,14,14,14,14,14,]),'if_else':([0,2,123,124,137,147,148,160,166,],[15,15,15,15,15,15,15,15,15,]),'expression_stmt':([0,2,123,124,137,147,148,160,166,],[16,16,16,16,16,16,16,16,16,]),'expression':([0,2,22,28,33,44,45,46,47,48,49,50,51,52,53,54,55,61,62,63,64,66,67,69,70,72,85,91,119,123,124,129,130,132,137,146,147,148,160,166,167,181,182,],[19,19,58,65,68,73,74,75,76,77,78,79,80,81,82,83,84,90,93,95,96,97,100,102,102,105,106,93,145,19,19,100,151,152,19,93,19,19,19,19,93,184,185,]),'when_branches':([62,146,],[91,167,]),'when_branch':([62,91,146,167,],[92,122,92,122,]),'map_entries':([67,],[98,]),'map_entry':([67,129,],[99,150,]),'expression_list':([69,70,],[101,103,]),'param_list_opt':([86,165,],[108,173,]),'param_list':([86,165,],[110,174,]),'param':([86,139,165,],[111,162,111,]),'class_body':([88,],[112,]),'class_member':([88,112,],[113,141,]),'property_def':([88,112,],[114,114,]),'method_def':([88,112,],[115,115,]),'block':([109,127,138,166,168,169,183,],[136,149,161,176,179,180,186,]),'type':([134,159,163,164,],[154,169,171,172,]),'loop_body':([166,],[175,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','kotlin_parser.py',61),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multiple','kotlin_parser.py',65),
  ('statement_list -> statement','statement_list',1,'p_statement_list_single','kotlin_parser.py',70),
  ('statement_list -> <empty>','statement_list',0,'p_statement_list_empty','kotlin_parser.py',74),
  ('statement -> declaration','statement',1,'p_statement','kotlin_parser.py',78),
  ('statement -> function_def','statement',1,'p_statement','kotlin_parser.py',79),
  ('statement -> function_def_params_no_return','statement',1,'p_statement','kotlin_parser.py',80),
  ('statement -> function_def_no_params_no_return','statement',1,'p_statement','kotlin_parser.py',81),
  ('statement -> class_def','statement',1,'p_statement','kotlin_parser.py',82),
  ('statement -> for_loop','statement',1,'p_statement','kotlin_parser.py',83),
  ('statement -> when_stmt','statement',1,'p_statement','kotlin_parser.py',84),
  ('statement -> print_stmt','statement',1,'p_statement','kotlin_parser.py',85),
  ('statement -> return_stmt','statement',1,'p_statement','kotlin_parser.py',86),
  ('statement -> break_stmt','statement',1,'p_statement','kotlin_parser.py',87),
  ('statement -> continue_stmt','statement',1,'p_statement','kotlin_parser.py',88),
  ('statement -> if_else','statement',1,'p_statement','kotlin_parser.py',89),
  ('statement -> expression_stmt','statement',1,'p_statement','kotlin_parser.py',90),
  ('declaration -> VAR ID ASSIGN expression','declaration',4,'p_declaration','kotlin_parser.py',103),
  ('declaration -> VAL ID ASSIGN expression','declaration',4,'p_declaration','kotlin_parser.py',104),
  ('function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block','function_def',8,'p_function_def','kotlin_parser.py',112),
  ('param_list_opt -> param_list','param_list_opt',1,'p_param_list_opt','kotlin_parser.py',122),
  ('param_list_opt -> <empty>','param_list_opt',0,'p_param_list_opt','kotlin_parser.py',123),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','kotlin_parser.py',127),
  ('param_list -> param','param_list',1,'p_param_list','kotlin_parser.py',128),
  ('param -> ID COLON type','param',3,'p_param','kotlin_parser.py',132),
  ('type -> TYPE_INT','type',1,'p_type','kotlin_parser.py',136),
  ('type -> TYPE_DOUBLE','type',1,'p_type','kotlin_parser.py',137),
  ('type -> TYPE_BOOLEAN','type',1,'p_type','kotlin_parser.py',138),
  ('type -> TYPE_STRING','type',1,'p_type','kotlin_parser.py',139),
  ('type -> ID','type',1,'p_type','kotlin_parser.py',140),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','kotlin_parser.py',145),
  ('for_loop -> FOR LPAREN ID IN expression RPAREN loop_body','for_loop',7,'p_for_loop','kotlin_parser.py',150),
  ('loop_body -> block','loop_body',1,'p_loop_body','kotlin_parser.py',154),
  ('loop_body -> statement','loop_body',1,'p_loop_body','kotlin_parser.py',155),
  ('expression -> MAPOF LPAREN map_entries RPAREN','expression',4,'p_expression_map','kotlin_parser.py',160),
  ('map_entries -> map_entries COMMA map_entry','map_entries',3,'p_map_entries_multiple','kotlin_parser.py',164),
  ('map_entries -> map_entry','map_entries',1,'p_map_entries_single','kotlin_parser.py',168),
  ('map_entry -> expression TO expression','map_entry',3,'p_map_entry','kotlin_parser.py',172),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary','kotlin_parser.py',178),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary','kotlin_parser.py',179),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary','kotlin_parser.py',180),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','kotlin_parser.py',181),
  ('expression -> expression LESS expression','expression',3,'p_expression_binary','kotlin_parser.py',182),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binary','kotlin_parser.py',183),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binary','kotlin_parser.py',184),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binary','kotlin_parser.py',185),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary','kotlin_parser.py',186),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary','kotlin_parser.py',187),
  ('expression -> expression AND expression','expression',3,'p_expression_binary','kotlin_parser.py',188),
  ('expression -> expression OR expression','expression',3,'p_expression_binary','kotlin_parser.py',189),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','kotlin_parser.py',197),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','kotlin_parser.py',201),
  ('expression -> NUMBER_INT','expression',1,'p_expression_literal','kotlin_parser.py',205),
  ('expression -> NUMBER_DOUBLE','expression',1,'p_expression_literal','kotlin_parser.py',206),
  ('expression -> STRING','expression',1,'p_expression_literal','kotlin_parser.py',207),
  ('expression -> BOOLEAN_TRUE','expression',1,'p_expression_literal','kotlin_parser.py',208),
  ('expression -> BOOLEAN_FALSE','expression',1,'p_expression_literal','kotlin_parser.py',209),
  ('expression -> ID','expression',1,'p_expression_id','kotlin_parser.py',213),
  ('print_stmt -> PRINTLN LPAREN expression RPAREN','print_stmt',4,'p_print_stmt','kotlin_parser.py',221),
  ('print_stmt -> PRINT LPAREN expression RPAREN','print_stmt',4,'p_print_stmt_print','kotlin_parser.py',225),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','kotlin_parser.py',230),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','kotlin_parser.py',235),
  ('expression -> LISTOF LPAREN expression_list RPAREN','expression',4,'p_expression_listOf','kotlin_parser.py',248),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list_multiple','kotlin_parser.py',253),
  ('expression_list -> expression','expression_list',1,'p_expression_list_single','kotlin_parser.py',258),
  ('expression_list -> <empty>','expression_list',0,'p_expression_list_empty','kotlin_parser.py',262),
  ('when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE','when_stmt',7,'p_when_stmt','kotlin_parser.py',268),
  ('when_branches -> when_branches when_branch','when_branches',2,'p_when_branches_multiple','kotlin_parser.py',272),
  ('when_branches -> when_branch','when_branches',1,'p_when_branches_single','kotlin_parser.py',277),
  ('when_branch -> expression ARROW statement_list','when_branch',3,'p_when_branch_expression','kotlin_parser.py',281),
  ('when_branch -> ELSE ARROW statement_list','when_branch',3,'p_when_branch_else','kotlin_parser.py',285),
  ('when_stmt -> WHEN LBRACE when_branches RBRACE','when_stmt',4,'p_when_stmt_without_expr','kotlin_parser.py',290),
  ('function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block','function_def_params_no_return',6,'p_function_def_params_no_return','kotlin_parser.py',295),
  ('class_def -> CLASS ID LBRACE class_body RBRACE','class_def',5,'p_class_def','kotlin_parser.py',304),
  ('class_body -> class_body class_member','class_body',2,'p_class_body_multiple','kotlin_parser.py',308),
  ('class_body -> class_member','class_body',1,'p_class_body_single','kotlin_parser.py',313),
  ('class_body -> <empty>','class_body',0,'p_class_body_empty','kotlin_parser.py',317),
  ('class_member -> property_def','class_member',1,'p_class_member','kotlin_parser.py',321),
  ('class_member -> method_def','class_member',1,'p_class_member','kotlin_parser.py',322),
  ('property_def -> VAR ID COLON type','property_def',4,'p_property_def','kotlin_parser.py',326),
  ('property_def -> VAL ID COLON type','property_def',4,'p_property_def','kotlin_parser.py',327),
  ('property_def -> VAR ID COLON type ASSIGN expression','property_def',6,'p_property_def','kotlin_parser.py',328),
  ('property_def -> VAL ID COLON type ASSIGN expression','property_def',6,'p_property_def','kotlin_parser.py',329),
  ('method_def -> FUN ID LPAREN param_list_opt RPAREN block','method_def',6,'p_method_def','kotlin_parser.py',339),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','kotlin_parser.py',446),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','kotlin_parser.py',452),
  ('expression -> ARRAYOF LPAREN expression_list RPAREN','expression',4,'p_expression_arrayof','kotlin_parser.py',482),
  ('if_else -> IF LPAREN expression RPAREN block ELSE block','if_else',7,'p_if_else','kotlin_parser.py',486),
  ('function_def_no_params_no_return -> FUN ID LPAREN RPAREN block','function_def_no_params_no_return',5,'p_function_def_no_params_no_return','kotlin_parser.py',493),
  ('expression -> READLINE LPAREN RPAREN','expression',3,'p_expression_readline','kotlin_parser.py',500),
]
