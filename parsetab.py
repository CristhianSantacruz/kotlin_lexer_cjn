
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUALSNOT_EQUALSleftLESSGREATERLESS_EQUALGREATER_EQUALleftPLUSMINUSleftMULTIPLYDIVIDErightUMINUSABSTRACT AND ARRAYOF ARROW ASSIGN BOOLEAN_FALSE BOOLEAN_TRUE BREAK CATCH CLASS COLON COMMA COMPANION CONSTRUCTOR CONTAINS CONTINUE CROSSINLINE DATA DIVIDE DOT ELSE ELVIS ENUM EQUALS EXTENDS FILTER FINAL FINALLY FOR FUN GREATER GREATER_EQUAL ID IF IMPLEMENTS IN INDICES INIT INLINE INNER INTERFACE INTERNAL LATEINIT LBRACE LBRACKET LESS LESS_EQUAL LISTOF LPAREN MAPOF MINUS MODULO MULTIPLY NOINLINE NOT_EQUALS NUMBER_DOUBLE NUMBER_INT OBJECT OPEN OR OUT OVERRIDE PLUS PRINT PRINTLN PRIVATE PROTECTED PUBLIC QUESTION RANGE RBRACE RBRACKET READLINE REIFIED RETURN RPAREN SEALED SEMICOLON STRING SUM SUPER THIS TO TRY TYPE_BOOLEAN TYPE_DOUBLE TYPE_INT TYPE_STRING VAL VAR WHEN WHILEprogram : statement_liststatement_list : statement_list statementstatement_list : statementstatement_list : statement : declaration\n| function_def\n| function_def_params_no_return\n| function_def_no_params_no_return\n| class_def\n| for_loop\n| when_stmt\n| print_stmt\n| return_stmt\n| expression_stmtdeclaration : VAR ID ASSIGN expression\n| VAL ID ASSIGN expressionfunction_def : FUN ID LPAREN param_list_opt RPAREN COLON type blockparam_list_opt : param_list\n| param_list : param_list COMMA param\n| paramparam : ID COLON typetype : TYPE_INT\n| TYPE_DOUBLE\n| TYPE_BOOLEAN\n| TYPE_STRING\n| IDreturn_stmt : RETURN expressionfor_loop : FOR LPAREN ID IN expression RPAREN loop_bodyloop_body : block\n| statementexpression : MAPOF LPAREN map_entries RPARENmap_entries : map_entries COMMA map_entrymap_entries : map_entrymap_entry : expression TO expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression MULTIPLY expression\n| expression DIVIDE expression\n| expression LESS expression\n| expression GREATER expression\n| expression LESS_EQUAL expression\n| expression GREATER_EQUAL expression\n| expression EQUALS expression\n| expression NOT_EQUALS expression\n| expression AND expression\n| expression OR expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBER_INT\n| NUMBER_DOUBLE\n| STRING\n| BOOLEAN_TRUE\n| BOOLEAN_FALSEexpression : IDprint_stmt : PRINTLN LPAREN expression RPARENprint_stmt : PRINT LPAREN expression RPARENblock : LBRACE statement_list RBRACEexpression_stmt : expressionexpression : LISTOF LPAREN expression_list RPARENexpression_list : expression_list COMMA expressionexpression_list : expressionexpression_list : when_stmt : WHEN LPAREN expression RPAREN LBRACE when_branches RBRACEwhen_branches : when_branches when_branchwhen_branches : when_branchwhen_branch : expression ARROW statement_listwhen_branch : ELSE ARROW statement_listwhen_stmt : WHEN LBRACE when_branches RBRACEfunction_def_params_no_return : FUN ID LPAREN param_list RPAREN blockclass_def : CLASS ID LBRACE class_body RBRACEclass_body : class_body class_memberclass_body : class_memberclass_body : class_member : property_def\n| method_defproperty_def : VAR ID COLON type\n| VAL ID COLON type\n| VAR ID COLON type ASSIGN expression\n| VAL ID COLON type ASSIGN expressionmethod_def : FUN ID LPAREN param_list_opt RPAREN blockexpression : ARRAYOF LPAREN expression_list RPARENstatement : IF LPAREN expression RPAREN block ELSE blockfunction_def_no_params_no_return : FUN ID LPAREN RPAREN blockexpression : READLINE LPAREN RPAREN'
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,99,101,102,117,119,120,121,122,123,126,128,130,133,136,143,144,149,157,162,164,165,171,172,173,174,175,],[14,14,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-85,-15,-16,-69,14,14,-56,-57,-32,-60,-82,14,-84,-71,14,14,14,-70,14,-83,-58,-29,-30,-31,-64,-17,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,84,99,101,102,108,109,110,111,117,119,120,121,122,123,126,128,130,133,136,137,143,144,149,150,152,153,154,155,157,162,164,165,167,168,171,172,173,174,175,179,180,181,],[17,17,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,112,-85,-15,-16,112,-73,-75,-76,-69,17,17,-56,-57,-32,-60,-82,17,-84,-71,-72,17,17,17,-27,-23,-24,-25,-26,-70,17,-83,-58,-77,-78,-29,-30,-31,-64,-17,-79,-80,-81,]),'VAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,84,99,101,102,108,109,110,111,117,119,120,121,122,123,126,128,130,133,136,137,143,144,149,150,152,153,154,155,157,162,164,165,167,168,171,172,173,174,175,179,180,181,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,113,-85,-15,-16,113,-73,-75,-76,-69,19,19,-56,-57,-32,-60,-82,19,-84,-71,-72,19,19,19,-27,-23,-24,-25,-26,-70,19,-83,-58,-77,-78,-29,-30,-31,-64,-17,-79,-80,-81,]),'FUN':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,84,99,101,102,108,109,110,111,117,119,120,121,122,123,126,128,130,133,136,137,143,144,149,150,152,153,154,155,157,162,164,165,167,168,171,172,173,174,175,179,180,181,],[20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,114,-85,-15,-16,114,-73,-75,-76,-69,20,20,-56,-57,-32,-60,-82,20,-84,-71,-72,20,20,20,-27,-23,-24,-25,-26,-70,20,-83,-58,-77,-78,-29,-30,-31,-64,-17,-79,-80,-81,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,99,101,102,117,119,120,121,122,123,126,128,130,133,136,143,144,149,157,162,164,165,171,172,173,174,175,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-85,-15,-16,-69,21,21,-56,-57,-32,-60,-82,21,-84,-71,21,21,21,-70,21,-83,-58,-29,-30,-31,-64,-17,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,99,101,102,117,119,120,121,122,123,126,128,130,133,136,143,144,149,157,162,164,165,171,172,173,174,175,],[22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-85,-15,-16,-69,22,22,-56,-57,-32,-60,-82,22,-84,-71,22,22,22,-70,22,-83,-58,-29,-30,-31,-64,-17,]),'WHEN':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,99,101,102,117,119,120,121,122,123,126,128,130,133,136,143,144,149,157,162,164,165,171,172,173,174,175,],[23,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-85,-15,-16,-69,23,23,-56,-57,-32,-60,-82,23,-84,-71,23,23,23,-70,23,-83,-58,-29,-30,-31,-64,-17,]),'PRINTLN':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,99,101,102,117,119,120,121,122,123,126,128,130,133,136,143,144,149,157,162,164,165,171,172,173,174,175,],[24,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-85,-15,-16,-69,24,24,-56,-57,-32,-60,-82,24,-84,-71,24,24,24,-70,24,-83,-58,-29,-30,-31,-64,-17,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,99,101,102,117,119,120,121,122,123,126,128,130,133,136,143,144,149,157,162,164,165,171,172,173,174,175,],[25,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-85,-15,-16,-69,25,25,-56,-57,-32,-60,-82,25,-84,-71,25,25,25,-70,25,-83,-58,-29,-30,-31,-64,-17,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,99,101,102,117,119,120,121,122,123,126,128,130,133,136,143,144,149,157,162,164,165,171,172,173,174,175,],[26,26,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-85,-15,-16,-69,26,26,-56,-57,-32,-60,-82,26,-84,-71,26,26,26,-70,26,-83,-58,-29,-30,-31,-64,-17,]),'MAPOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[27,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,27,-59,-55,27,27,-50,-51,-52,-53,-54,-2,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-28,27,-48,27,27,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,27,27,27,-66,-85,-15,-16,27,-69,-65,27,27,-56,-57,-32,27,27,-60,27,-82,27,-84,-71,27,27,27,27,-70,27,27,-83,-58,-29,-30,-31,-64,-17,27,27,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,87,88,89,91,92,95,97,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,141,142,143,144,146,147,149,157,162,163,164,165,171,172,173,174,175,176,177,179,180,],[28,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,28,41,-55,28,28,-50,-51,-52,-53,-54,-2,28,41,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,41,28,-48,28,28,41,-49,-36,-37,-38,-39,41,41,41,41,41,41,41,41,28,28,41,28,-66,41,41,41,41,41,-85,41,41,28,-69,-65,28,28,-56,-57,-32,28,28,-60,28,-82,28,-84,-71,41,28,28,28,41,41,28,-70,28,28,-83,-58,-29,-30,-31,-64,-17,28,28,41,41,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,54,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,140,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[15,15,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,38,15,-59,-55,56,57,59,60,15,62,15,-50,-51,-52,-53,-54,64,65,66,-2,15,15,15,15,15,15,15,15,15,15,15,15,15,83,15,15,15,15,-28,15,-48,15,15,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,15,15,15,-66,-85,-15,-16,15,-69,-65,15,15,-56,-57,-32,15,15,-60,15,-82,15,-84,-71,161,15,15,15,15,-70,15,15,-83,-58,-29,-30,-31,-64,-17,15,15,]),'NUMBER_INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[29,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,29,-59,-55,29,29,-50,-51,-52,-53,-54,-2,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-28,29,-48,29,29,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,29,29,29,-66,-85,-15,-16,29,-69,-65,29,29,-56,-57,-32,29,29,-60,29,-82,29,-84,-71,29,29,29,29,-70,29,29,-83,-58,-29,-30,-31,-64,-17,29,29,]),'NUMBER_DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[30,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,30,-59,-55,30,30,-50,-51,-52,-53,-54,-2,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-28,30,-48,30,30,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,30,30,30,-66,-85,-15,-16,30,-69,-65,30,30,-56,-57,-32,30,30,-60,30,-82,30,-84,-71,30,30,30,30,-70,30,30,-83,-58,-29,-30,-31,-64,-17,30,30,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[31,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,31,-59,-55,31,31,-50,-51,-52,-53,-54,-2,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-28,31,-48,31,31,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,31,31,31,-66,-85,-15,-16,31,-69,-65,31,31,-56,-57,-32,31,31,-60,31,-82,31,-84,-71,31,31,31,31,-70,31,31,-83,-58,-29,-30,-31,-64,-17,31,31,]),'BOOLEAN_TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[32,32,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,32,-59,-55,32,32,-50,-51,-52,-53,-54,-2,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-28,32,-48,32,32,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,32,32,32,-66,-85,-15,-16,32,-69,-65,32,32,-56,-57,-32,32,32,-60,32,-82,32,-84,-71,32,32,32,32,-70,32,32,-83,-58,-29,-30,-31,-64,-17,32,32,]),'BOOLEAN_FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[33,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,33,-59,-55,33,33,-50,-51,-52,-53,-54,-2,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-28,33,-48,33,33,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,33,33,33,-66,-85,-15,-16,33,-69,-65,33,33,-56,-57,-32,33,33,-60,33,-82,33,-84,-71,33,33,33,33,-70,33,33,-83,-58,-29,-30,-31,-64,-17,33,33,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,99,101,102,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,130,131,133,135,136,142,143,144,149,156,157,159,160,161,162,163,164,165,171,172,173,174,175,176,177,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,18,-59,52,-55,53,54,55,18,18,-50,-51,-52,-53,-54,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,85,18,18,18,18,-28,18,-48,18,18,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,18,18,103,18,-66,-85,-15,-16,138,139,140,18,-69,-65,18,18,-56,-57,-32,18,18,-60,18,-82,18,150,-84,103,-71,18,18,18,18,150,-70,150,150,103,18,18,-83,-58,-29,-30,-31,-64,-17,18,18,]),'LISTOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[34,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,34,-59,-55,34,34,-50,-51,-52,-53,-54,-2,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-28,34,-48,34,34,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,34,34,34,-66,-85,-15,-16,34,-69,-65,34,34,-56,-57,-32,34,34,-60,34,-82,34,-84,-71,34,34,34,34,-70,34,34,-83,-58,-29,-30,-31,-64,-17,34,34,]),'ARRAYOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[35,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,35,-59,-55,35,35,-50,-51,-52,-53,-54,-2,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-28,35,-48,35,35,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,35,35,35,-66,-85,-15,-16,35,-69,-65,35,35,-56,-57,-32,35,35,-60,35,-82,35,-84,-71,35,35,35,35,-70,35,35,-83,-58,-29,-30,-31,-64,-17,35,35,]),'READLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,26,28,29,30,31,32,33,37,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,88,99,101,102,115,117,118,119,120,121,122,123,124,125,126,127,128,130,133,136,142,143,144,149,157,162,163,164,165,171,172,173,174,175,176,177,],[36,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,36,-59,-55,36,36,-50,-51,-52,-53,-54,-2,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-28,36,-48,36,36,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,36,36,36,-66,-85,-15,-16,36,-69,-65,36,36,-56,-57,-32,36,36,-60,36,-82,36,-84,-71,36,36,36,36,-70,36,36,-83,-58,-29,-30,-31,-64,-17,36,36,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,99,101,102,117,121,122,123,126,128,133,136,157,164,165,171,172,173,174,175,],[-4,0,-1,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-85,-15,-16,-69,-56,-57,-32,-60,-82,-84,-71,-70,-83,-58,-29,-30,-31,-64,-17,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,84,87,88,99,101,102,108,109,110,111,117,118,119,120,121,122,123,126,128,130,133,136,137,143,144,149,150,152,153,154,155,157,163,164,165,167,168,171,172,173,174,175,179,180,181,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-74,117,-66,-85,-15,-16,136,-73,-75,-76,-69,-65,-4,-4,-56,-57,-32,-60,-82,-4,-84,-71,-72,-67,-68,165,-27,-23,-24,-25,-26,-70,174,-83,-58,-77,-78,-29,-30,-31,-64,-17,-79,-80,-81,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,16,18,29,30,31,32,33,37,58,61,63,68,69,70,71,72,73,74,75,76,77,78,79,80,87,88,99,101,102,117,118,119,120,121,122,123,126,128,129,133,136,142,143,144,157,163,164,165,171,172,173,174,175,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-55,-50,-51,-52,-53,-54,-2,90,-28,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,90,-66,-85,-15,-16,-69,-65,-4,-4,-56,-57,-32,-60,-82,148,-84,-71,90,-67,-68,-70,90,-83,-58,-29,-30,-31,-64,-17,]),'PLUS':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[40,-55,-50,-51,-52,-53,-54,40,40,-48,40,-49,-36,-37,-38,-39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-85,40,40,-32,-60,-82,40,40,40,40,40,]),'MULTIPLY':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[42,-55,-50,-51,-52,-53,-54,42,42,-48,42,-49,42,42,-38,-39,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-85,42,42,-32,-60,-82,42,42,42,42,42,]),'DIVIDE':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[43,-55,-50,-51,-52,-53,-54,43,43,-48,43,-49,43,43,-38,-39,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-85,43,43,-32,-60,-82,43,43,43,43,43,]),'LESS':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[44,-55,-50,-51,-52,-53,-54,44,44,-48,44,-49,-36,-37,-38,-39,-40,-41,-42,-43,44,44,44,44,44,44,44,44,44,44,-85,44,44,-32,-60,-82,44,44,44,44,44,]),'GREATER':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[45,-55,-50,-51,-52,-53,-54,45,45,-48,45,-49,-36,-37,-38,-39,-40,-41,-42,-43,45,45,45,45,45,45,45,45,45,45,-85,45,45,-32,-60,-82,45,45,45,45,45,]),'LESS_EQUAL':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[46,-55,-50,-51,-52,-53,-54,46,46,-48,46,-49,-36,-37,-38,-39,-40,-41,-42,-43,46,46,46,46,46,46,46,46,46,46,-85,46,46,-32,-60,-82,46,46,46,46,46,]),'GREATER_EQUAL':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[47,-55,-50,-51,-52,-53,-54,47,47,-48,47,-49,-36,-37,-38,-39,-40,-41,-42,-43,47,47,47,47,47,47,47,47,47,47,-85,47,47,-32,-60,-82,47,47,47,47,47,]),'EQUALS':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[48,-55,-50,-51,-52,-53,-54,48,48,-48,48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,48,48,48,48,48,48,48,48,-85,48,48,-32,-60,-82,48,48,48,48,48,]),'NOT_EQUALS':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[49,-55,-50,-51,-52,-53,-54,49,49,-48,49,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,49,49,49,49,49,49,49,49,-85,49,49,-32,-60,-82,49,49,49,49,49,]),'AND':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[50,-55,-50,-51,-52,-53,-54,50,50,-48,50,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,50,50,50,50,50,50,50,-85,50,50,-32,-60,-82,50,50,50,50,50,]),'OR':([16,18,29,30,31,32,33,39,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,99,101,102,123,126,128,141,146,147,179,180,],[51,-55,-50,-51,-52,-53,-54,51,51,-48,51,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,51,51,51,51,51,51,-85,51,51,-32,-60,-82,51,51,51,51,51,]),'RPAREN':([18,29,30,31,32,33,39,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,86,91,92,93,94,96,97,98,99,104,106,107,123,126,128,141,145,146,147,150,151,152,153,154,155,158,161,169,170,],[-55,-50,-51,-52,-53,-54,68,-48,-63,-63,99,100,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,105,116,121,122,123,-34,126,-62,128,-85,132,134,-21,-32,-60,-82,162,-33,-35,-61,-27,-22,-23,-24,-25,-26,-20,-19,178,-18,]),'ARROW':([18,29,30,31,32,33,63,68,69,70,71,72,73,74,75,76,77,78,79,80,89,90,99,123,126,128,],[-55,-50,-51,-52,-53,-54,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,119,120,-85,-32,-60,-82,]),'TO':([18,29,30,31,32,33,63,68,69,70,71,72,73,74,75,76,77,78,79,80,95,99,123,126,128,],[-55,-50,-51,-52,-53,-54,-48,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,125,-85,-32,-60,-82,]),'COMMA':([18,29,30,31,32,33,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,93,94,96,97,98,99,106,107,123,126,128,145,146,147,150,151,152,153,154,155,158,170,],[-55,-50,-51,-52,-53,-54,-48,-63,-63,-49,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,124,-34,127,-62,127,-85,135,-21,-32,-60,-82,-33,-35,-61,-27,-22,-23,-24,-25,-26,-20,135,]),'LBRACE':([23,55,100,105,116,134,148,150,152,153,154,155,162,166,178,],[58,84,130,130,142,130,130,-27,-23,-24,-25,-26,130,130,130,]),'ASSIGN':([52,53,150,152,153,154,155,167,168,],[81,82,-27,-23,-24,-25,-26,176,177,]),'IN':([85,],[115,]),'COLON':([103,132,138,139,],[131,156,159,160,]),'TYPE_INT':([131,156,159,160,],[152,152,152,152,]),'TYPE_DOUBLE':([131,156,159,160,],[153,153,153,153,]),'TYPE_BOOLEAN':([131,156,159,160,],[154,154,154,154,]),'TYPE_STRING':([131,156,159,160,],[155,155,155,155,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,119,120,130,],[2,143,144,149,]),'statement':([0,2,119,120,130,143,144,149,162,],[3,37,3,3,3,37,37,37,173,]),'declaration':([0,2,119,120,130,143,144,149,162,],[4,4,4,4,4,4,4,4,4,]),'function_def':([0,2,119,120,130,143,144,149,162,],[5,5,5,5,5,5,5,5,5,]),'function_def_params_no_return':([0,2,119,120,130,143,144,149,162,],[6,6,6,6,6,6,6,6,6,]),'function_def_no_params_no_return':([0,2,119,120,130,143,144,149,162,],[7,7,7,7,7,7,7,7,7,]),'class_def':([0,2,119,120,130,143,144,149,162,],[8,8,8,8,8,8,8,8,8,]),'for_loop':([0,2,119,120,130,143,144,149,162,],[9,9,9,9,9,9,9,9,9,]),'when_stmt':([0,2,119,120,130,143,144,149,162,],[10,10,10,10,10,10,10,10,10,]),'print_stmt':([0,2,119,120,130,143,144,149,162,],[11,11,11,11,11,11,11,11,11,]),'return_stmt':([0,2,119,120,130,143,144,149,162,],[12,12,12,12,12,12,12,12,12,]),'expression_stmt':([0,2,119,120,130,143,144,149,162,],[13,13,13,13,13,13,13,13,13,]),'expression':([0,2,15,26,28,38,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,62,64,65,81,82,87,115,119,120,124,125,127,130,142,143,144,149,162,163,176,177,],[16,16,39,61,63,67,69,70,71,72,73,74,75,76,77,78,79,80,86,89,91,92,95,97,97,101,102,89,141,16,16,95,146,147,16,89,16,16,16,16,89,179,180,]),'when_branches':([58,142,],[87,163,]),'when_branch':([58,87,142,163,],[88,118,88,118,]),'map_entries':([62,],[93,]),'map_entry':([62,124,],[94,145,]),'expression_list':([64,65,],[96,98,]),'param_list_opt':([83,161,],[104,169,]),'param_list':([83,161,],[106,170,]),'param':([83,135,161,],[107,158,107,]),'class_body':([84,],[108,]),'class_member':([84,108,],[109,137,]),'property_def':([84,108,],[110,110,]),'method_def':([84,108,],[111,111,]),'block':([100,105,134,148,162,166,178,],[129,133,157,164,172,175,181,]),'type':([131,156,159,160,],[151,166,167,168,]),'loop_body':([162,],[171,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','kotlin_parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multiple','kotlin_parser.py',26),
  ('statement_list -> statement','statement_list',1,'p_statement_list_single','kotlin_parser.py',31),
  ('statement_list -> <empty>','statement_list',0,'p_statement_list_empty','kotlin_parser.py',35),
  ('statement -> declaration','statement',1,'p_statement','kotlin_parser.py',39),
  ('statement -> function_def','statement',1,'p_statement','kotlin_parser.py',40),
  ('statement -> function_def_params_no_return','statement',1,'p_statement','kotlin_parser.py',41),
  ('statement -> function_def_no_params_no_return','statement',1,'p_statement','kotlin_parser.py',42),
  ('statement -> class_def','statement',1,'p_statement','kotlin_parser.py',43),
  ('statement -> for_loop','statement',1,'p_statement','kotlin_parser.py',44),
  ('statement -> when_stmt','statement',1,'p_statement','kotlin_parser.py',45),
  ('statement -> print_stmt','statement',1,'p_statement','kotlin_parser.py',46),
  ('statement -> return_stmt','statement',1,'p_statement','kotlin_parser.py',47),
  ('statement -> expression_stmt','statement',1,'p_statement','kotlin_parser.py',48),
  ('declaration -> VAR ID ASSIGN expression','declaration',4,'p_declaration','kotlin_parser.py',61),
  ('declaration -> VAL ID ASSIGN expression','declaration',4,'p_declaration','kotlin_parser.py',62),
  ('function_def -> FUN ID LPAREN param_list_opt RPAREN COLON type block','function_def',8,'p_function_def','kotlin_parser.py',67),
  ('param_list_opt -> param_list','param_list_opt',1,'p_param_list_opt','kotlin_parser.py',71),
  ('param_list_opt -> <empty>','param_list_opt',0,'p_param_list_opt','kotlin_parser.py',72),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','kotlin_parser.py',76),
  ('param_list -> param','param_list',1,'p_param_list','kotlin_parser.py',77),
  ('param -> ID COLON type','param',3,'p_param','kotlin_parser.py',81),
  ('type -> TYPE_INT','type',1,'p_type','kotlin_parser.py',85),
  ('type -> TYPE_DOUBLE','type',1,'p_type','kotlin_parser.py',86),
  ('type -> TYPE_BOOLEAN','type',1,'p_type','kotlin_parser.py',87),
  ('type -> TYPE_STRING','type',1,'p_type','kotlin_parser.py',88),
  ('type -> ID','type',1,'p_type','kotlin_parser.py',89),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','kotlin_parser.py',94),
  ('for_loop -> FOR LPAREN ID IN expression RPAREN loop_body','for_loop',7,'p_for_loop','kotlin_parser.py',99),
  ('loop_body -> block','loop_body',1,'p_loop_body','kotlin_parser.py',103),
  ('loop_body -> statement','loop_body',1,'p_loop_body','kotlin_parser.py',104),
  ('expression -> MAPOF LPAREN map_entries RPAREN','expression',4,'p_expression_map','kotlin_parser.py',109),
  ('map_entries -> map_entries COMMA map_entry','map_entries',3,'p_map_entries_multiple','kotlin_parser.py',113),
  ('map_entries -> map_entry','map_entries',1,'p_map_entries_single','kotlin_parser.py',117),
  ('map_entry -> expression TO expression','map_entry',3,'p_map_entry','kotlin_parser.py',121),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary','kotlin_parser.py',127),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary','kotlin_parser.py',128),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary','kotlin_parser.py',129),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','kotlin_parser.py',130),
  ('expression -> expression LESS expression','expression',3,'p_expression_binary','kotlin_parser.py',131),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binary','kotlin_parser.py',132),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binary','kotlin_parser.py',133),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binary','kotlin_parser.py',134),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary','kotlin_parser.py',135),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary','kotlin_parser.py',136),
  ('expression -> expression AND expression','expression',3,'p_expression_binary','kotlin_parser.py',137),
  ('expression -> expression OR expression','expression',3,'p_expression_binary','kotlin_parser.py',138),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','kotlin_parser.py',142),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','kotlin_parser.py',146),
  ('expression -> NUMBER_INT','expression',1,'p_expression_literal','kotlin_parser.py',150),
  ('expression -> NUMBER_DOUBLE','expression',1,'p_expression_literal','kotlin_parser.py',151),
  ('expression -> STRING','expression',1,'p_expression_literal','kotlin_parser.py',152),
  ('expression -> BOOLEAN_TRUE','expression',1,'p_expression_literal','kotlin_parser.py',153),
  ('expression -> BOOLEAN_FALSE','expression',1,'p_expression_literal','kotlin_parser.py',154),
  ('expression -> ID','expression',1,'p_expression_id','kotlin_parser.py',158),
  ('print_stmt -> PRINTLN LPAREN expression RPAREN','print_stmt',4,'p_print_stmt','kotlin_parser.py',163),
  ('print_stmt -> PRINT LPAREN expression RPAREN','print_stmt',4,'p_print_stmt_print','kotlin_parser.py',167),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','kotlin_parser.py',172),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','kotlin_parser.py',177),
  ('expression -> LISTOF LPAREN expression_list RPAREN','expression',4,'p_expression_listOf','kotlin_parser.py',190),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list_multiple','kotlin_parser.py',195),
  ('expression_list -> expression','expression_list',1,'p_expression_list_single','kotlin_parser.py',200),
  ('expression_list -> <empty>','expression_list',0,'p_expression_list_empty','kotlin_parser.py',204),
  ('when_stmt -> WHEN LPAREN expression RPAREN LBRACE when_branches RBRACE','when_stmt',7,'p_when_stmt','kotlin_parser.py',210),
  ('when_branches -> when_branches when_branch','when_branches',2,'p_when_branches_multiple','kotlin_parser.py',214),
  ('when_branches -> when_branch','when_branches',1,'p_when_branches_single','kotlin_parser.py',219),
  ('when_branch -> expression ARROW statement_list','when_branch',3,'p_when_branch_expression','kotlin_parser.py',223),
  ('when_branch -> ELSE ARROW statement_list','when_branch',3,'p_when_branch_else','kotlin_parser.py',227),
  ('when_stmt -> WHEN LBRACE when_branches RBRACE','when_stmt',4,'p_when_stmt_without_expr','kotlin_parser.py',232),
  ('function_def_params_no_return -> FUN ID LPAREN param_list RPAREN block','function_def_params_no_return',6,'p_function_def_params_no_return','kotlin_parser.py',237),
  ('class_def -> CLASS ID LBRACE class_body RBRACE','class_def',5,'p_class_def','kotlin_parser.py',246),
  ('class_body -> class_body class_member','class_body',2,'p_class_body_multiple','kotlin_parser.py',250),
  ('class_body -> class_member','class_body',1,'p_class_body_single','kotlin_parser.py',255),
  ('class_body -> <empty>','class_body',0,'p_class_body_empty','kotlin_parser.py',259),
  ('class_member -> property_def','class_member',1,'p_class_member','kotlin_parser.py',263),
  ('class_member -> method_def','class_member',1,'p_class_member','kotlin_parser.py',264),
  ('property_def -> VAR ID COLON type','property_def',4,'p_property_def','kotlin_parser.py',268),
  ('property_def -> VAL ID COLON type','property_def',4,'p_property_def','kotlin_parser.py',269),
  ('property_def -> VAR ID COLON type ASSIGN expression','property_def',6,'p_property_def','kotlin_parser.py',270),
  ('property_def -> VAL ID COLON type ASSIGN expression','property_def',6,'p_property_def','kotlin_parser.py',271),
  ('method_def -> FUN ID LPAREN param_list_opt RPAREN block','method_def',6,'p_method_def','kotlin_parser.py',278),
  ('expression -> ARRAYOF LPAREN expression_list RPAREN','expression',4,'p_expression_arrayof','kotlin_parser.py',287),
  ('statement -> IF LPAREN expression RPAREN block ELSE block','statement',7,'p_if_else','kotlin_parser.py',291),
  ('function_def_no_params_no_return -> FUN ID LPAREN RPAREN block','function_def_no_params_no_return',5,'p_function_def_no_params_no_return','kotlin_parser.py',296),
  ('expression -> READLINE LPAREN RPAREN','expression',3,'p_expression_readline','kotlin_parser.py',300),
]
